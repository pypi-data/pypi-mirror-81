{"version":3,"sources":["webpack:///./src/data/weather.ts","webpack:///./src/panels/lovelace/entity-rows/hui-weather-entity-row.ts"],"names":["weatherImages","clear-night","cloudy","fog","lightning","lightning-rainy","partlycloudy","pouring","rainy","hail","snowy","snowy-rainy","sunny","windy","windy-variant","weatherIcons","exceptional","getWeatherUnit","hass","measure","lengthUnit","config","unit_system","length","concat","getSecondaryWeatherAttribute","stateObj","_stateObj$attributes$","value","attribute","extrema","getWeatherExtrema","attributes","forecast","undefined","precipitation","humidity","localize","_stateObj$attributes$2","tempLow","tempHigh","_step","today","Date","getDate","_iterator","_createForOfIteratorHelper","s","n","done","datetime","temperature","templow","err","e","f","unit","customElement","property","entity","Error","this","_config","changedProps","hasConfigOrEntityChanged","html","_templateObject","states","_templateObject2","weatherRowConfig","Object","assign","icon","state","image","_templateObject3","UNAVAILABLE_STATES","includes","computeStateDisplay","language","_templateObject4","css","_templateObject5","LitElement"],"mappings":"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","file":"chunk.37119e4b754464e333ed.js","sourcesContent":["import { HomeAssistant, WeatherEntity } from \"../types\";\n\nexport const weatherImages = {\n  \"clear-night\": \"/static/images/weather/night.png\",\n  cloudy: \"/static/images/weather/cloudy.png\",\n  fog: \"/static/images/weather/cloudy.png\",\n  lightning: \"/static/images/weather/lightning.png\",\n  \"lightning-rainy\": \"/static/images/weather/lightning-rainy.png\",\n  partlycloudy: \"/static/images/weather/partly-cloudy.png\",\n  pouring: \"/static/images/weather/pouring.png\",\n  rainy: \"/static/images/weather/rainy.png\",\n  hail: \"/static/images/weather/rainy.png\",\n  snowy: \"/static/images/weather/snowy.png\",\n  \"snowy-rainy\": \"/static/images/weather/snowy.png\",\n  sunny: \"/static/images/weather/sunny.png\",\n  windy: \"/static/images/weather/windy.png\",\n  \"windy-variant\": \"/static/images/weather/windy.png\",\n};\n\nexport const weatherIcons = {\n  exceptional: \"hass:alert-circle-outline\",\n};\n\nexport const cardinalDirections = [\n  \"N\",\n  \"NNE\",\n  \"NE\",\n  \"ENE\",\n  \"E\",\n  \"ESE\",\n  \"SE\",\n  \"SSE\",\n  \"S\",\n  \"SSW\",\n  \"SW\",\n  \"WSW\",\n  \"W\",\n  \"WNW\",\n  \"NW\",\n  \"NNW\",\n  \"N\",\n];\n\nconst getWindBearingText = (degree: string): string => {\n  const degreenum = parseInt(degree, 10);\n  if (isFinite(degreenum)) {\n    // eslint-disable-next-line no-bitwise\n    return cardinalDirections[(((degreenum + 11.25) / 22.5) | 0) % 16];\n  }\n  return degree;\n};\n\nexport const getWindBearing = (bearing: string): string => {\n  if (bearing != null) {\n    return getWindBearingText(bearing);\n  }\n  return \"\";\n};\n\nexport const getWeatherUnit = (\n  hass: HomeAssistant,\n  measure: string\n): string => {\n  const lengthUnit = hass.config.unit_system.length || \"\";\n  switch (measure) {\n    case \"pressure\":\n      return lengthUnit === \"km\" ? \"hPa\" : \"inHg\";\n    case \"wind_speed\":\n      return `${lengthUnit}/h`;\n    case \"length\":\n      return lengthUnit;\n    case \"precipitation\":\n      return lengthUnit === \"km\" ? \"mm\" : \"in\";\n    case \"humidity\":\n    case \"precipitation_probability\":\n      return \"%\";\n    default:\n      return hass.config.unit_system[measure] || \"\";\n  }\n};\n\nexport const getSecondaryWeatherAttribute = (\n  hass: HomeAssistant,\n  stateObj: WeatherEntity\n): string | undefined => {\n  const extrema = getWeatherExtrema(hass, stateObj);\n\n  if (extrema) {\n    return extrema;\n  }\n\n  let value: number;\n  let attribute: string;\n\n  if (\n    stateObj.attributes.forecast?.length &&\n    stateObj.attributes.forecast[0].precipitation !== undefined &&\n    stateObj.attributes.forecast[0].precipitation !== null\n  ) {\n    value = stateObj.attributes.forecast[0].precipitation!;\n    attribute = \"precipitation\";\n  } else if (\"humidity\" in stateObj.attributes) {\n    value = stateObj.attributes.humidity!;\n    attribute = \"humidity\";\n  } else {\n    return undefined;\n  }\n\n  return `\n    ${hass!.localize(\n      `ui.card.weather.attributes.${attribute}`\n    )} ${value} ${getWeatherUnit(hass!, attribute)}\n  `;\n};\n\nconst getWeatherExtrema = (\n  hass: HomeAssistant,\n  stateObj: WeatherEntity\n): string | undefined => {\n  if (!stateObj.attributes.forecast?.length) {\n    return undefined;\n  }\n\n  let tempLow: number | undefined;\n  let tempHigh: number | undefined;\n  const today = new Date().getDate();\n\n  for (const forecast of stateObj.attributes.forecast!) {\n    if (new Date(forecast.datetime).getDate() !== today) {\n      break;\n    }\n    if (!tempHigh || forecast.temperature > tempHigh) {\n      tempHigh = forecast.temperature;\n    }\n    if (!tempLow || (forecast.templow && forecast.templow < tempLow)) {\n      tempLow = forecast.templow;\n    }\n    if (!forecast.templow && (!tempLow || forecast.temperature < tempLow)) {\n      tempLow = forecast.temperature;\n    }\n  }\n\n  if (!tempLow && !tempHigh) {\n    return undefined;\n  }\n\n  const unit = getWeatherUnit(hass!, \"temperature\");\n\n  return `\n    ${\n      tempHigh\n        ? `\n            ${tempHigh} ${unit}\n          `\n        : \"\"\n    }\n    ${tempLow && tempHigh ? \" / \" : \"\"}\n    ${\n      tempLow\n        ? `\n          ${tempLow} ${unit}\n        `\n        : \"\"\n    }\n  `;\n};\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { computeStateDisplay } from \"../../../common/entity/compute_state_display\";\nimport \"../../../components/entity/state-badge\";\nimport { UNAVAILABLE_STATES } from \"../../../data/entity\";\nimport {\n  getSecondaryWeatherAttribute,\n  getWeatherUnit,\n  weatherIcons,\n  weatherImages,\n} from \"../../../data/weather\";\nimport { HomeAssistant, WeatherEntity } from \"../../../types\";\nimport { EntitiesCardEntityConfig } from \"../cards/types\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-generic-entity-row\";\nimport \"../components/hui-warning\";\nimport { LovelaceRow } from \"./types\";\n\n@customElement(\"hui-weather-entity-row\")\nclass HuiWeatherEntityRow extends LitElement implements LovelaceRow {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: EntitiesCardEntityConfig;\n\n  public setConfig(config: EntitiesCardEntityConfig): void {\n    if (!config?.entity) {\n      throw new Error(\"Invalid Configuration: 'entity' required\");\n    }\n\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this._config.entity] as WeatherEntity;\n\n    if (!stateObj) {\n      return html`\n        <hui-warning\n          >${this.hass.localize(\n            \"ui.panel.lovelace.warning.entity_not_found\",\n            \"entity\",\n            this._config.entity\n          )}</hui-warning\n        >\n      `;\n    }\n\n    const weatherRowConfig = {\n      ...this._config,\n      icon: weatherIcons[stateObj.state],\n      image: weatherImages[stateObj.state],\n    };\n\n    return html`\n      <hui-generic-entity-row .hass=${this.hass} .config=${weatherRowConfig}>\n        <div class=\"attributes\">\n          <div>\n            ${UNAVAILABLE_STATES.includes(stateObj.state)\n              ? computeStateDisplay(\n                  this.hass.localize,\n                  stateObj,\n                  this.hass.language\n                )\n              : html`\n                  ${stateObj.attributes.temperature}\n                  ${getWeatherUnit(this.hass, \"temperature\")}\n                `}\n          </div>\n          <div class=\"secondary\">\n            ${getSecondaryWeatherAttribute(this.hass!, stateObj)}\n          </div>\n        </div>\n      </hui-generic-entity-row>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .attributes {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        text-align: right;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-weather-entity-row\": HuiWeatherEntityRow;\n  }\n}\n"],"sourceRoot":""}