{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./src/components/ha-icon.ts","webpack:///./src/components/ha-card.ts","webpack:///./src/panels/config/ha-config-section.ts","webpack:///./node_modules/@polymer/app-layout/app-header-layout/app-header-layout.js","webpack:///./src/components/ha-icon-next.ts","webpack:///./src/panels/config/dashboard/ha-config-navigation.ts","webpack:///./src/panels/config/dashboard/ha-config-dashboard.ts"],"names":["__webpack_require__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","_paper_item_behavior_js__WEBPACK_IMPORTED_MODULE_6__","Polymer","_template","html","is","behaviors","PaperItemBehavior","ironIconClass","customElements","get","loaded","HaIcon","[object Object]","args","super","this","listen","node","eventName","methodName","_iconsetName","e","then","bind","define","customElement","_LitElement","_initialize","property","css","header","LitElement","_decorate","F","d","kind","decorators","key","value","classMap","narrow","isWide","vertical","horizontal","static","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_2__","_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","_app_layout_behavior_app_layout_behavior_js__WEBPACK_IMPORTED_MODULE_5__","AppLayoutBehavior","properties","hasScrollingRegion","type","Boolean","reflectToAttribute","observers","dom","$","headerSlot","getDistributedNodes","_updateLayoutStates","isAttached","wrapper","classList","remove","scrollTarget","contentContainer","ownerDocument","documentElement","headerHeight","offsetHeight","style","left","right","requestAnimationFrame","rect","getBoundingClientRect","rightOffset","document","clientWidth","containerStyle","fixed","condenses","marginTop","paddingTop","_ha_icon__WEBPACK_IMPORTED_MODULE_1__","connectedCallback","setTimeout","icon","window","getComputedStyle","direction","pages","map","page","component","core","isComponentLoaded","hass","advancedOnly","showAdvanced","localize","translationKey","info","logged_in","email","cloudStatus","path","Object","values","configSections","section","haStyle"],"mappings":"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","file":"chunk.0db0511e6c821840525a.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","import \"@polymer/iron-icon/iron-icon\";\nimport type { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\nimport { Constructor } from \"../types\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\n@customElement(\"ha-card\")\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html` <div class=\"card-header\">${this.header}</div> `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-card\": HaCard;\n  }\n}\n","import { css, customElement, html, LitElement, property } from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\n\n@customElement(\"ha-config-section\")\nexport class HaConfigSection extends LitElement {\n  @property() public isWide = false;\n\n  protected render() {\n    return html`\n      <div\n        class=\"content ${classMap({\n          narrow: !this.isWide,\n        })}\"\n      >\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div\n          class=\"together layout ${classMap({\n            narrow: !this.isWide,\n            vertical: !this.isWide,\n            horizontal: this.isWide,\n          })}\"\n        >\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n      }\n      .content {\n        padding: 28px 20px 0;\n        max-width: 1040px;\n        margin: 0 auto;\n      }\n\n      .layout {\n        display: flex;\n      }\n\n      .horizontal {\n        flex-direction: row;\n      }\n\n      .vertical {\n        flex-direction: column;\n      }\n\n      .flex-auto {\n        flex: 1 1 auto;\n      }\n\n      .header {\n        font-family: var(--paper-font-headline_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-headline_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-headline_-_font-size);\n        font-weight: var(--paper-font-headline_-_font-weight);\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\n        line-height: var(--paper-font-headline_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 32px;\n      }\n\n      .intro {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        width: 100%;\n        max-width: 400px;\n        margin-right: 40px;\n        opacity: var(--dark-primary-opacity);\n        font-size: 14px;\n        padding-bottom: 20px;\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n\n      .narrow.content {\n        max-width: 640px;\n      }\n      .narrow .together {\n        margin-top: 20px;\n      }\n      .narrow .intro {\n        padding-bottom: 20px;\n        margin-right: 0;\n        max-width: 500px;\n      }\n    `;\n  }\n}\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {AppLayoutBehavior} from '../app-layout-behavior/app-layout-behavior.js';\n\n/**\napp-header-layout is a wrapper element that positions an app-header and other\ncontent. This element uses the document scroll by default, but it can also\ndefine its own scrolling region.\n\nUsing the document scroll:\n\n```html\n<app-header-layout>\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nUsing an own scrolling region:\n\n```html\n<app-header-layout has-scrolling-region style=\"width: 300px; height: 400px;\">\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nAdd the `fullbleed` attribute to app-header-layout to make it fit the size of\nits container:\n\n```html\n<app-header-layout fullbleed>\n ...\n</app-header-layout>\n```\n\n@group App Elements\n@element app-header-layout\n@demo app-header-layout/demo/simple.html Simple Demo\n@demo app-header-layout/demo/scrolling-region.html Scrolling Region\n@demo app-header-layout/demo/music.html Music Demo\n@demo app-header-layout/demo/footer.html Footer Demo\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        /**\n         * Force app-header-layout to have its own stacking context so that its parent can\n         * control the stacking of it relative to other elements (e.g. app-drawer-layout).\n         * This could be done using \\`isolation: isolate\\`, but that's not well supported\n         * across browsers.\n         */\n        position: relative;\n        z-index: 0;\n      }\n\n      #wrapper ::slotted([slot=header]) {\n        @apply --layout-fixed-top;\n        z-index: 1;\n      }\n\n      #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) {\n        height: 100%;\n      }\n\n      :host([has-scrolling-region]) #wrapper ::slotted([slot=header]) {\n        position: absolute;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) #wrapper #contentContainer {\n        @apply --layout-fit;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing #contentContainer {\n        position: relative;\n      }\n\n      :host([fullbleed]) {\n        @apply --layout-vertical;\n        @apply --layout-fit;\n      }\n\n      :host([fullbleed]) #wrapper,\n      :host([fullbleed]) #wrapper #contentContainer {\n        @apply --layout-vertical;\n        @apply --layout-flex;\n      }\n\n      #contentContainer {\n        /* Create a stacking context here so that all children appear below the header. */\n        position: relative;\n        z-index: 0;\n      }\n\n      @media print {\n        :host([has-scrolling-region]) #wrapper #contentContainer {\n          overflow-y: visible;\n        }\n      }\n\n    </style>\n\n    <div id=\"wrapper\" class=\"initializing\">\n      <slot id=\"headerSlot\" name=\"header\"></slot>\n\n      <div id=\"contentContainer\">\n        <slot></slot>\n      </div>\n    </div>\n`,\n\n  is: 'app-header-layout',\n  behaviors: [AppLayoutBehavior],\n\n  properties: {\n    /**\n     * If true, the current element will have its own scrolling region.\n     * Otherwise, it will use the document scroll to control the header.\n     */\n    hasScrollingRegion: {type: Boolean, value: false, reflectToAttribute: true}\n  },\n\n  observers: ['resetLayout(isAttached, hasScrollingRegion)'],\n\n  /**\n   * A reference to the app-header element.\n   *\n   * @property header\n   */\n  get header() {\n    return dom(this.$.headerSlot).getDistributedNodes()[0];\n  },\n\n  _updateLayoutStates: function() {\n    var header = this.header;\n    if (!this.isAttached || !header) {\n      return;\n    }\n    // Remove the initializing class, which staticly positions the header and\n    // the content until the height of the header can be read.\n    this.$.wrapper.classList.remove('initializing');\n    // Update scroll target.\n    header.scrollTarget = this.hasScrollingRegion ?\n        this.$.contentContainer :\n        this.ownerDocument.documentElement;\n    // Get header height here so that style reads are batched together before\n    // style writes (i.e. getBoundingClientRect() below).\n    var headerHeight = header.offsetHeight;\n    // Update the header position.\n    if (!this.hasScrollingRegion) {\n      requestAnimationFrame(function() {\n        var rect = this.getBoundingClientRect();\n        var rightOffset = document.documentElement.clientWidth - rect.right;\n        header.style.left = rect.left + 'px';\n        header.style.right = rightOffset + 'px';\n      }.bind(this));\n    } else {\n      header.style.left = '';\n      header.style.right = '';\n    }\n    // Update the content container position.\n    var containerStyle = this.$.contentContainer.style;\n    if (header.fixed && !header.condenses && this.hasScrollingRegion) {\n      // If the header size does not change and we're using a scrolling region,\n      // exclude the header area from the scrolling region so that the header\n      // doesn't overlap the scrollbar.\n      containerStyle.marginTop = headerHeight + 'px';\n      containerStyle.paddingTop = '';\n    } else {\n      containerStyle.paddingTop = headerHeight + 'px';\n      containerStyle.marginTop = '';\n    }\n  }\n});\n","import \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// eslint-disable-next-line\nimport { HaIcon } from \"./ha-icon\";\n\nexport class HaIconNext extends HaIcon {\n  public connectedCallback() {\n    super.connectedCallback();\n\n    // wait to check for direction since otherwise direction is wrong even though top level is RTL\n    setTimeout(() => {\n      this.icon =\n        window.getComputedStyle(this).direction === \"ltr\"\n          ? \"hass:chevron-right\"\n          : \"hass:chevron-left\";\n    }, 100);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-next\": HaIconNext;\n  }\n}\n\ncustomElements.define(\"ha-icon-next\", HaIconNext);\n","import \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-next\";\nimport { CloudStatus, CloudStatusLoggedIn } from \"../../../data/cloud\";\nimport { PageNavigation } from \"../../../layouts/hass-tabs-subpage\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"ha-config-navigation\")\nclass HaConfigNavigation extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public showAdvanced!: boolean;\n\n  @property() public pages!: PageNavigation[];\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.pages.map((page) =>\n        (!page.component ||\n          page.core ||\n          isComponentLoaded(this.hass, page.component)) &&\n        (!page.advancedOnly || this.showAdvanced)\n          ? html`\n              <a\n                href=${`/config/${page.component}`}\n                aria-role=\"option\"\n                tabindex=\"-1\"\n              >\n                <paper-icon-item>\n                  <ha-icon .icon=${page.icon} slot=\"item-icon\"></ha-icon>\n                  <paper-item-body two-line>\n                    ${this.hass.localize(\n                      page.translationKey ||\n                        `ui.panel.config.${page.component}.caption`\n                    )}\n                    ${page.component === \"cloud\" && (page.info as CloudStatus)\n                      ? page.info.logged_in\n                        ? html`\n                            <div secondary>\n                              ${this.hass.localize(\n                                \"ui.panel.config.cloud.description_login\",\n                                \"email\",\n                                (page.info as CloudStatusLoggedIn).email\n                              )}\n                            </div>\n                          `\n                        : html`\n                            <div secondary>\n                              ${this.hass.localize(\n                                \"ui.panel.config.cloud.description_features\"\n                              )}\n                            </div>\n                          `\n                      : html`\n                          <div secondary>\n                            ${this.hass.localize(\n                              `ui.panel.config.${page.component}.description`\n                            )}\n                          </div>\n                        `}\n                  </paper-item-body>\n                  <ha-icon-next></ha-icon-next>\n                </paper-icon-item>\n              </a>\n            `\n          : \"\"\n      )}\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        text-decoration: none;\n        color: var(--primary-text-color);\n        position: relative;\n        display: block;\n        outline: 0;\n      }\n      ha-icon,\n      ha-icon-next {\n        color: var(--secondary-text-color);\n      }\n      .iron-selected paper-item::before,\n      a:not(.iron-selected):focus::before {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        pointer-events: none;\n        content: \"\";\n        transition: opacity 15ms linear;\n        will-change: opacity;\n      }\n      a:not(.iron-selected):focus::before {\n        background-color: currentColor;\n        opacity: var(--dark-divider-opacity);\n      }\n      .iron-selected paper-item:focus::before,\n      .iron-selected:focus paper-item::before {\n        opacity: 0.2;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-navigation\": HaConfigNavigation;\n  }\n}\n","import \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport {\n  css,\n  CSSResultArray,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-next\";\nimport \"../../../components/ha-menu-button\";\nimport { CloudStatus } from \"../../../data/cloud\";\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport \"../ha-config-section\";\nimport { configSections } from \"../ha-panel-config\";\nimport \"./ha-config-navigation\";\n\n@customElement(\"ha-config-dashboard\")\nclass HaConfigDashboard extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public narrow!: boolean;\n\n  @property() public isWide!: boolean;\n\n  @property() public cloudStatus?: CloudStatus;\n\n  @property() public showAdvanced!: boolean;\n\n  protected render(): TemplateResult {\n    return html`\n      <app-header-layout has-scrolling-region>\n        <app-header fixed slot=\"header\">\n          <app-toolbar>\n            <ha-menu-button\n              .hass=${this.hass}\n              .narrow=${this.narrow}\n            ></ha-menu-button>\n          </app-toolbar>\n        </app-header>\n\n        <ha-config-section .narrow=${this.narrow} .isWide=${this.isWide}>\n          <div slot=\"header\">\n            ${this.hass.localize(\"ui.panel.config.header\")}\n          </div>\n\n          <div slot=\"introduction\">\n            ${this.hass.localize(\"ui.panel.config.introduction\")}\n          </div>\n\n          ${this.cloudStatus && isComponentLoaded(this.hass, \"cloud\")\n            ? html`\n                <ha-card>\n                  <ha-config-navigation\n                    .hass=${this.hass}\n                    .showAdvanced=${this.showAdvanced}\n                    .pages=${[\n                      {\n                        component: \"cloud\",\n                        path: \"/config/cloud\",\n                        translationKey: \"ui.panel.config.cloud.caption\",\n                        info: this.cloudStatus,\n                        icon: \"hass:cloud-lock\",\n                      },\n                    ]}\n                  ></ha-config-navigation>\n                </ha-card>\n              `\n            : \"\"}\n          ${Object.values(configSections).map(\n            (section) => html`\n              <ha-card>\n                <ha-config-navigation\n                  .hass=${this.hass}\n                  .showAdvanced=${this.showAdvanced}\n                  .pages=${section}\n                ></ha-config-navigation>\n              </ha-card>\n            `\n          )}\n          ${!this.showAdvanced\n            ? html`\n                <div class=\"promo-advanced\">\n                  ${this.hass.localize(\n                    \"ui.panel.config.advanced_mode.hint_enable\"\n                  )}\n                  <a href=\"/profile\"\n                    >${this.hass.localize(\n                      \"ui.panel.config.advanced_mode.link_profile_page\"\n                    )}</a\n                  >.\n                </div>\n              `\n            : \"\"}\n        </ha-config-section>\n      </app-header-layout>\n    `;\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyle,\n      css`\n        app-header {\n          --app-header-background-color: var(--primary-background-color);\n        }\n        ha-card:last-child {\n          margin-bottom: 24px;\n        }\n        ha-config-section {\n          margin-top: -20px;\n        }\n        ha-card {\n          overflow: hidden;\n        }\n        ha-card a {\n          text-decoration: none;\n          color: var(--primary-text-color);\n        }\n        .promo-advanced {\n          text-align: center;\n          color: var(--secondary-text-color);\n          margin-bottom: 24px;\n        }\n        .promo-advanced a {\n          color: var(--secondary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-dashboard\": HaConfigDashboard;\n  }\n}\n"],"sourceRoot":""}