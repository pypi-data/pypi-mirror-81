{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-behavior.js","webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js","webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./node_modules/@polymer/paper-dialog/paper-dialog.js","webpack:///./node_modules/@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js","webpack:///./node_modules/@polymer/paper-input/paper-textarea.js","webpack:///./src/panels/lovelace/editor/card-editor/hui-card-preview.ts","webpack:///./src/panels/lovelace/editor/card-editor/hui-dialog-delete-card.ts"],"names":["__webpack_require__","d","__webpack_exports__","PaperDialogBehaviorImpl","PaperDialogBehavior","_polymer_iron_overlay_behavior_iron_overlay_behavior_js__WEBPACK_IMPORTED_MODULE_1__","_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__","hostAttributes","role","tabindex","properties","modal","type","Boolean","value","__readied","observers","listeners","tap","ready","this","__prevNoCancelOnOutsideClick","noCancelOnOutsideClick","__prevNoCancelOnEscKey","noCancelOnEscKey","__prevWithBackdrop","withBackdrop","_modalChanged","readied","_updateClosingReasonConfirmed","confirmed","closingReason","_onDialogClick","event","path","dom","i","l","indexOf","target","hasAttribute","close","stopPropagation","IronOverlayBehavior","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","HaIronFocusablesHelper","getTabbableNodes","node","result","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","children","element","tabIndex","_normalizedTabIndex","needsSort","push","localName","getDistributedNodes","shadowRoot","root","length","paperDialogClass","customElements","get","haTabFixBehaviorImpl","_focusableNodes","HaPaperDialog","_mixinBehaviors","_inherits","mixinBehaviors","_super","_createSuper","_classCallCheck","apply","arguments","define","Polymer","_template","html","_templateObject","is","behaviors","NeonAnimationRunnerBehavior","neon-animation-finish","_renderOpened","cancelAnimation","playAnimation","_renderClosed","_onNeonAnimationFinish","opened","_finishRenderOpened","_finishRenderClosed","IronValidatableBehavior","IronControlState","observer","String","notify","bindValue","rows","Number","maxRows","autocomplete","autofocus","inputmode","placeholder","readonly","required","minlength","maxlength","label","input","textarea","$","selectionStart","selectionEnd","attached","navigator","userAgent","match","style","marginLeft","validate","valid","validity","hasValidator","call","invalid","fire","_bindValueChanged","_valueChanged","mirror","_valueForMirror","_onInput","eventPath","_constrain","tokens","_tokens","slice","join","replace","split","_updateCached","paper_textarea_templateObject","PaperInputBehavior","IronFormElementBehavior","_ariaLabelledBy","_ariaDescribedBy","start","end","_ariaLabelledByChanged","ariaLabelledBy","_focusableElement","_ariaDescribedByChanged","ariaDescribedBy","inputElement","HuiCardPreview","_HTMLElement","_wrapNativeSuper","HTMLElement","_this","_defineProperty","_assertThisInitialized","addEventListener","_cleanup","_config","config","_createClass","key","_this$_element","_element","tagName","configValue","createCardElement","_hass","hass","removeChild","undefined","set","language","direction","computeRTL","error","_createCard","createErrorCardConfig","concat","message","curConfig","_error","setConfig","err","HuiDialogDeleteCard","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","_len","args","Array","_key","kind","decorators","property","query","_showDialog","regeneratorRuntime","mark","_callee","params","wrap","_context","prev","next","_params","_cardConfig","cardConfig","Object","isFrozen","deepFreeze","updateComplete","fireEvent","_dialog","stop","_x","_templateObject2","localize","_templateObject3","_close","_delete","static","haStyleDialog","css","_templateObject4","_this$_params","deleteCard","LitElement"],"mappings":";uFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAA,OAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,GAoDaG,EAA0B,CAErCI,eAAgB,CAACC,KAAQ,SAAUC,SAAY,MAE/CC,WAAY,CAMVC,MAAO,CAACC,KAAMC,QAASC,OAAO,GAE9BC,UAAW,CAACH,KAAMC,QAASC,OAAO,IAIpCE,UAAW,CAAC,mCAEZC,UAAW,CAACC,IAAO,kBAKnBC,MAAO,WAELC,KAAKC,6BAA+BD,KAAKE,uBACzCF,KAAKG,uBAAyBH,KAAKI,iBACnCJ,KAAKK,mBAAqBL,KAAKM,aAC/BN,KAAKL,WAAY,GAGnBY,cAAe,SAAShB,EAAOiB,GAIxBA,IAIDjB,GACFS,KAAKC,6BAA+BD,KAAKE,uBACzCF,KAAKG,uBAAyBH,KAAKI,iBACnCJ,KAAKK,mBAAqBL,KAAKM,aAC/BN,KAAKE,wBAAyB,EAC9BF,KAAKI,kBAAmB,EACxBJ,KAAKM,cAAe,IAGpBN,KAAKE,uBACDF,KAAKE,wBAA0BF,KAAKC,6BACxCD,KAAKI,iBACDJ,KAAKI,kBAAoBJ,KAAKG,uBAClCH,KAAKM,aAAeN,KAAKM,cAAgBN,KAAKK,sBAIlDI,8BAA+B,SAASC,GACtCV,KAAKW,cAAgBX,KAAKW,eAAiB,GAC3CX,KAAKW,cAAcD,UAAYA,GAOjCE,eAAgB,SAASC,GAIvB,IADA,IAAIC,EAAOC,YAAIF,GAAOC,KACbE,EAAI,EAAGC,EAAIH,EAAKI,QAAQlB,MAAOgB,EAAIC,EAAGD,IAAK,CAClD,IAAIG,EAASL,EAAKE,GAClB,GAAIG,EAAOC,eACND,EAAOC,aAAa,mBACpBD,EAAOC,aAAa,mBAAoB,CAC3CpB,KAAKS,8BACDU,EAAOC,aAAa,mBACxBpB,KAAKqB,QACLR,EAAMS,kBACN,UAQKtC,EACT,CAACuC,IAAqBxC,qCC3I1BH,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,QA4BM4C,EAAsBC,SAASC,cAAc,YACnDF,EAAoBG,aAAa,QAAS,kBAE1CH,EAAoBI,UAApB,o3DAuEAH,SAASI,KAAKC,YAAYN,EAAoBO,8ECtFjCC,EAAyB,CAQpCC,iBAAkB,SAAUC,GAC1B,IAAIC,EAAS,GAIb,OAD0BnC,KAAKoC,sBAAsBF,EAAMC,GAElDE,IAAqBC,gBAAgBH,GAEvCA,GAYTC,sBAAuB,SAAUF,EAAMC,GAErC,GACED,EAAKK,WAAaC,KAAKC,eACtBJ,IAAqBK,WAAWR,GAEjC,OAAO,EAET,IAoBIS,EApBAC,EAAuCV,EACvCW,EAAWR,IAAqBS,oBAAoBF,GACpDG,EAAYF,EAAW,EACvBA,GAAY,GACdV,EAAOa,KAAKJ,GAkBZD,EADwB,YAAtBC,EAAQK,WAAiD,SAAtBL,EAAQK,UAClClC,YAAI6B,GAASM,sBAKbnC,YAAI6B,EAAQO,YAAcP,EAAQQ,MAAQR,GAASD,SAGhE,IAAK,IAAI3B,EAAI,EAAGA,EAAI2B,EAASU,OAAQrC,IAEnC+B,EAAY/C,KAAKoC,sBAAsBO,EAAS3B,GAAImB,IAAWY,EAEjE,OAAOA,siCChFX,IAAMO,EAAmBC,eAAeC,IAAI,gBAKtCC,EAAuB,CAC3BC,sBACE,OAAO1B,EAAuBC,iBAAiBjC,QAOtC2D,EAAb,SAAAC,sOAAAC,CAAAF,EACUG,eAAe,CAACL,GAAuBH,IADjD,IAAAS,EAAAC,EAAAL,GAAA,SAAAA,IAAA,mGAAAM,CAAAjE,KAAA2D,GAAAI,EAAAG,MAAAlE,KAAAmE,WAAA,OAAAR,EAAA,GAUAJ,eAAea,OAAO,kBAAmBT,8UCkDzCU,YAAQ,CACNC,UAAWC,YAAFC,KAKTC,GAAI,eACJC,UAAW,CAAC1F,IAAqB2F,KACjC9E,UAAW,CAAC+E,wBAAyB,0BAErCC,cAAe,WACb7E,KAAK8E,kBACL9E,KAAK+E,cAAc,UAGrBC,cAAe,WACbhF,KAAK8E,kBACL9E,KAAK+E,cAAc,SAGrBE,uBAAwB,WAClBjF,KAAKkF,OACPlF,KAAKmF,sBAELnF,KAAKoF,w3IC/DXf,YAAQ,CACNC,UAAWC,YAAFC,KAmETC,GAAI,yBACJC,UAAW,CAACW,IAAyBC,KAErChG,WAAY,CAKVI,MAAO,CAAC6F,SAAU,gBAAiB/F,KAAMgG,OAAQC,QAAQ,GAOzDC,UAAW,CAACH,SAAU,oBAAqB/F,KAAMgG,OAAQC,QAAQ,GASjEE,KAAM,CAACnG,KAAMoG,OAAQlG,MAAO,EAAG6F,SAAU,iBAUzCM,QAAS,CAACrG,KAAMoG,OAAQlG,MAAO,EAAG6F,SAAU,iBAK5CO,aAAc,CAACtG,KAAMgG,OAAQ9F,MAAO,OAKpCqG,UAAW,CAACvG,KAAMC,QAASC,OAAO,GAKlCsG,UAAW,CAACxG,KAAMgG,QAKlBS,YAAa,CAACzG,KAAMgG,QAKpBU,SAAU,CAAC1G,KAAMgG,QAKjBW,SAAU,CAAC3G,KAAMC,SAKjB2G,UAAW,CAAC5G,KAAMoG,QAKlBS,UAAW,CAAC7G,KAAMoG,QAKlBU,MAAO,CAAC9G,KAAMgG,SAIhB3F,UAAW,CAAC0G,MAAS,YAMrBC,eACE,OAAOxG,KAAKyG,EAAED,UAOhBE,qBACE,OAAO1G,KAAKyG,EAAED,SAASE,gBAOzBC,mBACE,OAAO3G,KAAKyG,EAAED,SAASG,cAMzBD,mBAAmBhH,GACjBM,KAAKyG,EAAED,SAASE,eAAiBhH,GAMnCiH,iBAAiBjH,GACfM,KAAKyG,EAAED,SAASG,aAAejH,GAGjCkH,SAAU,WAMKC,UAAUC,UAAUC,MAAM,sBAErC/G,KAAKyG,EAAED,SAASQ,MAAMC,WAAa,SAUvCC,SAAU,WAER,IAAIC,EAAQnH,KAAKyG,EAAED,SAASY,SAASD,MAcrC,OAXIA,IAEEnH,KAAKmG,UAA2B,KAAfnG,KAAKN,MACxByH,GAAQ,EACCnH,KAAKqH,iBACdF,EAAQ9B,IAAwB6B,SAASI,KAAKtH,KAAMA,KAAKN,SAI7DM,KAAKuH,SAAWJ,EAChBnH,KAAKwH,KAAK,uBACHL,GAGTM,kBAAmB,SAAS/B,GAC1B1F,KAAKN,MAAQgG,GAGfgC,cAAe,SAAShI,GACtB,IAAI8G,EAAWxG,KAAKwG,SACfA,IAQDA,EAAS9G,QAAUA,IACrB8G,EAAS9G,MAAUA,GAAmB,IAAVA,EAAoBA,EAAL,IAG7CM,KAAK0F,UAAYhG,EACjBM,KAAKyG,EAAEkB,OAAO/F,UAAY5B,KAAK4H,kBAI/B5H,KAAKwH,KAAK,qBAAsB,CAAC9H,MAAOM,KAAK0F,cAG/CmC,SAAU,SAAShH,GACjB,IAAIiH,EAAY/G,YAAIF,GAAOC,KAC3Bd,KAAKN,MAAQoI,EAAYA,EAAU,GAAGpI,MAAQmB,EAAMM,OAAOzB,OAG7DqI,WAAY,SAASC,GACnB,IAAIC,EASJ,IARAD,EAASA,GAAU,CAAC,IAIlBC,EADEjI,KAAK6F,QAAU,GAAKmC,EAAO3E,OAASrD,KAAK6F,QACjCmC,EAAOE,MAAM,EAAGlI,KAAK6F,SAErBmC,EAAOE,MAAM,GAElBlI,KAAK2F,KAAO,GAAKsC,EAAQ5E,OAASrD,KAAK2F,MAC5CsC,EAAQjF,KAAK,IAGf,OAAOiF,EAAQE,KAAK,SAAW,UAGjCP,gBAAiB,WACf,IAAIrB,EAAQvG,KAAKwG,SACjB,GAAKD,EAUL,OAPAvG,KAAKgI,OAAUzB,GAASA,EAAM7G,MAAS6G,EAAM7G,MAAM0I,QAAQ,MAAO,SACtBA,QAAQ,MAAO,UACfA,QAAQ,MAAO,SACfA,QAAQ,MAAO,QACfA,QAAQ,MAAO,QACfC,MAAM,MACX,CAAC,IACjCrI,KAAK+H,WAAW/H,KAAKgI,SAG9BM,cAAe,WACbtI,KAAKyG,EAAEkB,OAAO/F,UAAY5B,KAAK+H,WAAW/H,KAAKgI,utDCvSnD3D,YAAQ,CACNC,UAAWC,YAAFgE,KAgCT9D,GAAI,iBAEJC,UAAW,CACT8D,IACAC,KAGFnJ,WAAY,CACVoJ,gBAAiB,CACfnD,SAAU,yBACV/F,KAAMgG,QAGRmD,iBAAkB,CAChBpD,SAAU,0BACV/F,KAAMgG,QAGR9F,MAAO,CAELF,KAAMgG,QAURG,KAAM,CACJnG,KAAMoG,OACNlG,MAAO,GAWTmG,QAAS,CACPrG,KAAMoG,OACNlG,MAAO,IAOXgH,qBACE,OAAO1G,KAAKyG,EAAEF,MAAMC,SAASE,gBAG/BA,mBAAmBkC,GACjB5I,KAAKyG,EAAEF,MAAMC,SAASE,eAAiBkC,GAMzCjC,mBACE,OAAO3G,KAAKyG,EAAEF,MAAMC,SAASG,cAG/BA,iBAAiBkC,GACf7I,KAAKyG,EAAEF,MAAMC,SAASG,aAAekC,GAGvCC,uBAAwB,SAASC,GAC/B/I,KAAKgJ,kBAAkBrH,aAAa,kBAAmBoH,IAGzDE,wBAAyB,SAASC,GAChClJ,KAAKgJ,kBAAkBrH,aAAa,mBAAoBuH,IAG1DF,wBACE,OAAOhJ,KAAKmJ,aAAa3C,goEC9ItB,IAAM4C,EAAb,SAAAC,sOAAAxF,CAAAuF,EAAAE,EAAoCC,cAApC,IAAAxF,EAAAC,EAAAoF,GAWE,SAAAA,IAAc,IAAAI,EAAA,mGAAAvF,CAAAjE,KAAAoJ,GAAAK,EAAAC,EACZF,EAAAzF,EAAAuD,KAAAtH,OADY,gBAAAyJ,EAAAC,EAAAF,GAAA,mBAAAC,EAAAC,EAAAF,GAAA,kBAEZA,EAAKG,iBAAiB,aAAc,WAClCH,EAAKI,WACDJ,EAAKK,UACPL,EAAKM,OAASN,EAAKK,WALXL,EAXhB,OAAAO,EAAAX,EAAA,EAAAY,IAAA,SAAAxG,IAAA,WAOuB,IAAAyG,EACnB,MAAkC,oBAA3B,QAAAA,EAAAjK,KAAKkK,gBAAL,IAAAD,OAAA,EAAAA,EAAeE,aAR1BJ,EAAAX,EAAA,EAAAY,IAAA,cAAAtK,MAAA,SAuEsB0K,GAClBpK,KAAK4J,WACL5J,KAAKkK,SAAWG,YAAkBD,GAE9BpK,KAAKsK,QACPtK,KAAKkK,SAAUK,KAAOvK,KAAKsK,OAG7BtK,KAAK8B,YAAY9B,KAAKkK,YA/E1B,CAAAF,IAAA,WAAAtK,MAAA,WAmFSM,KAAKkK,WAGVlK,KAAKwK,YAAYxK,KAAKkK,UACtBlK,KAAKkK,cAAWO,KAvFpB,CAAAT,IAAA,OAAAU,IAAA,SAqBWH,GACFvK,KAAKsK,OAAStK,KAAKsK,MAAMK,WAAaJ,EAAKI,WAC9C3K,KAAKgH,MAAM4D,UAAYC,YAAWN,GAAQ,MAAQ,OAGpDvK,KAAKsK,MAAQC,EACTvK,KAAKkK,WACPlK,KAAKkK,SAASK,KAAOA,KA5B3B,CAAAP,IAAA,QAAAU,IAAA,SAgCYI,GACR9K,KAAK+K,YACHC,YAAqB,GAAAC,OAAIH,EAAMtL,KAAV,MAAAyL,OAAmBH,EAAMI,cAAWT,MAlC/D,CAAAT,IAAA,SAAAU,IAAA,SAsCaN,GACT,IAAMe,EAAYnL,KAAK6J,QAGvB,GAFA7J,KAAK6J,QAAUO,EAEVA,EAKL,GAAKA,EAAY5K,KAOjB,GAAKQ,KAAKkK,SAMV,IAAKlK,KAAKoL,QAAUD,GAAaf,EAAY5K,OAAS2L,EAAU3L,KAC9D,IACEQ,KAAKkK,SAASmB,UAAUjB,GACxB,MAAOkB,GACPtL,KAAK+K,YAAYC,YAAsBM,EAAIJ,QAASd,SAGtDpK,KAAK+K,YAAYX,QAZjBpK,KAAK+K,YAAYX,QAPjBpK,KAAK+K,YACHC,YAAsB,qBAAsBZ,SAN9CpK,KAAK4J,eA3CXR,EAAA,GAiGA7F,eAAea,OAAO,mBAAoBgF,q0HCrFnC,IAAMmC,sqMAAbC,CAAA,CADCC,YAAc,2BACf,SAAAC,EAAAC,GAAA,OAAAC,EAAA,SAAAC,sOAAAhI,CAAA0H,EAAAI,GAAA,IAAA5H,EAAAC,EAAAuH,GAAA,SAAAA,IAAA,IAAA/B,+FAAAvF,CAAAjE,KAAAuL,GAAA,QAAAO,EAAA3H,UAAAd,OAAA0I,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA9H,UAAA8H,GAAA,OAAAzC,EAAAzF,EAAAuD,KAAApD,MAAAH,EAAA,CAAA/D,MAAAiL,OAAAc,IAAAL,EAAAhC,EAAAF,MAAA,OAAA+B,EAAA,GAAA1M,EAAA,EAAAqN,KAAA,QAAAC,WAAA,CACGC,eADHpC,IAAA,OAAAtK,WAAA,IAAAwM,KAAA,QAAAC,WAAA,CAGGC,eAHHpC,IAAA,UAAAtK,WAAA,IAAAwM,KAAA,QAAAC,WAAA,CAKGC,eALHpC,IAAA,cAAAtK,WAAA,IAAAwM,KAAA,QAAAC,WAAA,CAOGE,YAAM,oBAPTrC,IAAA,UAAAtK,WAAA,IAAAwM,KAAA,SAAAlC,IAAA,aAAAtK,MAAA,iBAAA4M,KAAAC,mBAAAC,KASE,SAAAC,EAAwBC,GAAxB,OAAAH,mBAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACE9M,KAAK+M,QAAUL,EACf1M,KAAKgN,YAAcN,EAAOO,WACrBC,OAAOC,SAASnN,KAAKgN,eACxBhN,KAAKgN,YAAcI,IAAWpN,KAAKgN,cAJvCJ,EAAAE,KAAA,EAMQ9M,KAAKqN,eANb,OAOEC,YAAUtN,KAAKuN,QAAwB,eAPzC,wBAAAX,EAAAY,SAAAf,EAAAzM,qLATF,gBAAAyN,GAAA,OAAAnB,EAAApI,MAAAlE,KAAAmE,YAAA,KAAA+H,KAAA,SAAAlC,IAAA,SAAAtK,MAmBE,WACE,OAAKM,KAAK+M,QAIHxI,YAAPmJ,IAGQ1N,KAAKuK,KAAKoD,SAAS,0CAGnB3N,KAAKgN,YACHzI,YADFqJ,IAIgB5N,KAAKuK,KACFvK,KAAKgN,aAItB,GAGkBhN,KAAK6N,OACvB7N,KAAKuK,KAAMoD,SAAS,oBAEc3N,KAAK8N,QACvC9N,KAAKuK,KAAMoD,SAAS,qBAzBrBpJ,YAAPC,OArBN,CAAA0H,KAAA,MAAA6B,QAAA,EAAA/D,IAAA,SAAAtK,MAqDE,WACE,MAAO,CACLsO,IACAC,YAFKC,QAtDX,CAAAhC,KAAA,SAAAlC,IAAA,SAAAtK,MAsEE,WACEM,KAAK+M,aAAUtC,EACfzK,KAAKgN,iBAAcvC,IAxEvB,CAAAyB,KAAA,SAAAlC,IAAA,UAAAtK,MA2EE,WAAwB,IAAAyO,GAClB,QAAAA,EAACnO,KAAK+M,eAAN,IAAAoB,OAAA,EAACA,EAAcC,cAGnBpO,KAAK+M,QAAQqB,aACbpO,KAAK6N,eAhFgCQ","file":"chunk.b0ee70107522c856426a.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronOverlayBehavior} from '@polymer/iron-overlay-behavior/iron-overlay-behavior.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n  Use `Polymer.PaperDialogBehavior` and `paper-dialog-shared-styles.html` to\n  implement a Material Design dialog.\n\n  For example, if `<paper-dialog-impl>` implements this behavior:\n\n      <paper-dialog-impl>\n          <h2>Header</h2>\n          <div>Dialog body</div>\n          <div class=\"buttons\">\n              <paper-button dialog-dismiss>Cancel</paper-button>\n              <paper-button dialog-confirm>Accept</paper-button>\n          </div>\n      </paper-dialog-impl>\n\n  `paper-dialog-shared-styles.html` provide styles for a header, content area,\n  and an action area for buttons. Use the `<h2>` tag for the header and the\n  `buttons` class for the action area. You can use the `paper-dialog-scrollable`\n  element (in its own repository) if you need a scrolling content area.\n\n  Use the `dialog-dismiss` and `dialog-confirm` attributes on interactive\n  controls to close the dialog. If the user dismisses the dialog with\n  `dialog-confirm`, the `closingReason` will update to include `confirmed:\n  true`.\n\n  ### Accessibility\n\n  This element has `role=\"dialog\"` by default. Depending on the context, it may\n  be more appropriate to override this attribute with `role=\"alertdialog\"`.\n\n  If `modal` is set, the element will prevent the focus from exiting the\n  element. It will also ensure that focus remains in the dialog.\n\n  @hero hero.svg\n  @demo demo/index.html\n  @polymerBehavior PaperDialogBehavior\n */\nexport const PaperDialogBehaviorImpl = {\n\n  hostAttributes: {'role': 'dialog', 'tabindex': '-1'},\n\n  properties: {\n\n    /**\n     * If `modal` is true, this implies `no-cancel-on-outside-click`,\n     * `no-cancel-on-esc-key` and `with-backdrop`.\n     */\n    modal: {type: Boolean, value: false},\n\n    __readied: {type: Boolean, value: false}\n\n  },\n\n  observers: ['_modalChanged(modal, __readied)'],\n\n  listeners: {'tap': '_onDialogClick'},\n\n  /**\n   * @return {void}\n   */\n  ready: function() {\n    // Only now these properties can be read.\n    this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n    this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n    this.__prevWithBackdrop = this.withBackdrop;\n    this.__readied = true;\n  },\n\n  _modalChanged: function(modal, readied) {\n    // modal implies noCancelOnOutsideClick, noCancelOnEscKey and withBackdrop.\n    // We need to wait for the element to be ready before we can read the\n    // properties values.\n    if (!readied) {\n      return;\n    }\n\n    if (modal) {\n      this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n      this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n      this.__prevWithBackdrop = this.withBackdrop;\n      this.noCancelOnOutsideClick = true;\n      this.noCancelOnEscKey = true;\n      this.withBackdrop = true;\n    } else {\n      // If the value was changed to false, let it false.\n      this.noCancelOnOutsideClick =\n          this.noCancelOnOutsideClick && this.__prevNoCancelOnOutsideClick;\n      this.noCancelOnEscKey =\n          this.noCancelOnEscKey && this.__prevNoCancelOnEscKey;\n      this.withBackdrop = this.withBackdrop && this.__prevWithBackdrop;\n    }\n  },\n\n  _updateClosingReasonConfirmed: function(confirmed) {\n    this.closingReason = this.closingReason || {};\n    this.closingReason.confirmed = confirmed;\n  },\n\n  /**\n   * Will dismiss the dialog if user clicked on an element with dialog-dismiss\n   * or dialog-confirm attribute.\n   */\n  _onDialogClick: function(event) {\n    // Search for the element with dialog-confirm or dialog-dismiss,\n    // from the root target until this (excluded).\n    var path = dom(event).path;\n    for (var i = 0, l = path.indexOf(this); i < l; i++) {\n      var target = path[i];\n      if (target.hasAttribute &&\n          (target.hasAttribute('dialog-dismiss') ||\n           target.hasAttribute('dialog-confirm'))) {\n        this._updateClosingReasonConfirmed(\n            target.hasAttribute('dialog-confirm'));\n        this.close();\n        event.stopPropagation();\n        break;\n      }\n    }\n  }\n\n};\n\n/** @polymerBehavior */\nexport const PaperDialogBehavior =\n    [IronOverlayBehavior, PaperDialogBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n### Styling\n\nThe following custom properties and mixins are available for styling.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dialog-background-color` | Dialog background color | `--primary-background-color`\n`--paper-dialog-color` | Dialog foreground color | `--primary-text-color`\n`--paper-dialog` | Mixin applied to the dialog | `{}`\n`--paper-dialog-title` | Mixin applied to the title (`<h2>`) element | `{}`\n`--paper-dialog-button-color` | Button area foreground color | `--default-primary-color`\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport '@polymer/paper-styles/shadow.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-dialog-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: block;\n        margin: 24px 40px;\n\n        background: var(--paper-dialog-background-color, var(--primary-background-color));\n        color: var(--paper-dialog-color, var(--primary-text-color));\n\n        @apply --paper-font-body1;\n        @apply --shadow-elevation-16dp;\n        @apply --paper-dialog;\n      }\n\n      :host > ::slotted(*) {\n        margin-top: 20px;\n        padding: 0 24px;\n      }\n\n      :host > ::slotted(.no-padding) {\n        padding: 0;\n      }\n\n      \n      :host > ::slotted(*:first-child) {\n        margin-top: 24px;\n      }\n\n      :host > ::slotted(*:last-child) {\n        margin-bottom: 24px;\n      }\n\n      /* In 1.x, this selector was \\`:host > ::content h2\\`. In 2.x <slot> allows\n      to select direct children only, which increases the weight of this\n      selector, so we have to re-define first-child/last-child margins below. */\n      :host > ::slotted(h2) {\n        position: relative;\n        margin: 0;\n\n        @apply --paper-font-title;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-top. */\n      :host > ::slotted(h2:first-child) {\n        margin-top: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-bottom. */\n      :host > ::slotted(h2:last-child) {\n        margin-bottom: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      :host > ::slotted(.paper-dialog-buttons),\n      :host > ::slotted(.buttons) {\n        position: relative;\n        padding: 8px 8px 8px 24px;\n        margin: 0;\n\n        color: var(--paper-dialog-button-color, var(--primary-color));\n\n        @apply --layout-horizontal;\n        @apply --layout-end-justified;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function (node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function (node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport type { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport type { Constructor } from \"../../types\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\") as Constructor<\n  PaperDialogElement\n>;\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\n// @ts-ignore\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js';\n\nimport {NeonAnimationRunnerBehavior} from '@polymer/neon-animation/neon-animation-runner-behavior.js';\nimport {PaperDialogBehavior} from '@polymer/paper-dialog-behavior/paper-dialog-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design:\n[Dialogs](https://www.google.com/design/spec/components/dialogs.html)\n\n`<paper-dialog>` is a dialog with Material Design styling and optional\nanimations when it is opened or closed. It provides styles for a header, content\narea, and an action area for buttons. You can use the\n`<paper-dialog-scrollable>` element (in its own repository) if you need a\nscrolling content area. To autofocus a specific child element after opening the\ndialog, give it the `autofocus` attribute. See `Polymer.PaperDialogBehavior` and\n`Polymer.IronOverlayBehavior` for specifics.\n\nFor example, the following code implements a dialog with a header, scrolling\ncontent area and buttons. Focus will be given to the `dialog-confirm` button\nwhen the dialog is opened.\n\n    <paper-dialog>\n      <h2>Header</h2>\n      <paper-dialog-scrollable>\n        Lorem ipsum...\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <paper-button dialog-dismiss>Cancel</paper-button>\n        <paper-button dialog-confirm autofocus>Accept</paper-button>\n      </div>\n    </paper-dialog>\n\n### Styling\n\nSee the docs for `Polymer.PaperDialogBehavior` for the custom properties\navailable for styling this element.\n\n### Animations\n\nSet the `entry-animation` and/or `exit-animation` attributes to add an animation\nwhen the dialog is opened or closed. See the documentation in\n[PolymerElements/neon-animation](https://github.com/PolymerElements/neon-animation)\nfor more info.\n\nFor example:\n\n    <script type=\"module\">\n      import '@polymer/neon-animation/animations/fade-out-animation.js';\n      import '@polymer/neon-animation/animations/scale-up-animation.js';\n    </script>\n\n    <paper-dialog entry-animation=\"scale-up-animation\"\n                  exit-animation=\"fade-out-animation\">\n      <h2>Header</h2>\n      <div>Dialog body</div>\n    </paper-dialog>\n\n### Accessibility\n\nSee the docs for `Polymer.PaperDialogBehavior` for accessibility features\nimplemented by this element.\n\n@group Paper Elements\n@element paper-dialog\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-dialog-shared-styles\"></style>\n    <slot></slot>\n`,\n\n  is: 'paper-dialog',\n  behaviors: [PaperDialogBehavior, NeonAnimationRunnerBehavior],\n  listeners: {'neon-animation-finish': '_onNeonAnimationFinish'},\n\n  _renderOpened: function() {\n    this.cancelAnimation();\n    this.playAnimation('entry');\n  },\n\n  _renderClosed: function() {\n    this.cancelAnimation();\n    this.playAnimation('exit');\n  },\n\n  _onNeonAnimationFinish: function() {\n    if (this.opened) {\n      this._finishRenderOpened();\n    } else {\n      this._finishRenderClosed();\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\nimport {IronValidatableBehavior} from '@polymer/iron-validatable-behavior/iron-validatable-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n`iron-autogrow-textarea` is an element containing a textarea that grows in\nheight as more lines of input are entered. Unless an explicit height or the\n`maxRows` property is set, it will never scroll.\n\nExample:\n\n    <iron-autogrow-textarea></iron-autogrow-textarea>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-autogrow-textarea` | Mixin applied to the textarea | `{}`\n`--iron-autogrow-textarea-placeholder` | Mixin applied to the textarea placeholder | `{}`\n\n@group Iron Elements\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        width: 400px;\n        border: 1px solid;\n        padding: 2px;\n        -moz-appearance: textarea;\n        -webkit-appearance: textarea;\n        overflow: hidden;\n      }\n\n      .mirror-text {\n        visibility: hidden;\n        word-wrap: break-word;\n        @apply --iron-autogrow-textarea;\n      }\n\n      .fit {\n        @apply --layout-fit;\n      }\n\n      textarea {\n        position: relative;\n        outline: none;\n        border: none;\n        resize: none;\n        background: inherit;\n        color: inherit;\n        /* see comments in template */\n        width: 100%;\n        height: 100%;\n        font-size: inherit;\n        font-family: inherit;\n        line-height: inherit;\n        text-align: inherit;\n        @apply --iron-autogrow-textarea;\n      }\n\n      textarea::-webkit-input-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n\n      textarea:-moz-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n\n      textarea::-moz-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n\n      textarea:-ms-input-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n    </style>\n\n    <!-- the mirror sizes the input/textarea so it grows with typing -->\n    <!-- use &#160; instead &nbsp; of to allow this element to be used in XHTML -->\n    <div id=\"mirror\" class=\"mirror-text\" aria-hidden=\"true\">&nbsp;</div>\n\n    <!-- size the input/textarea with a div, because the textarea has intrinsic size in ff -->\n    <div class=\"textarea-container fit\">\n      <textarea id=\"textarea\" name\\$=\"[[name]]\" aria-label\\$=\"[[label]]\" autocomplete\\$=\"[[autocomplete]]\" autofocus\\$=\"[[autofocus]]\" inputmode\\$=\"[[inputmode]]\" placeholder\\$=\"[[placeholder]]\" readonly\\$=\"[[readonly]]\" required\\$=\"[[required]]\" disabled\\$=\"[[disabled]]\" rows\\$=\"[[rows]]\" minlength\\$=\"[[minlength]]\" maxlength\\$=\"[[maxlength]]\"></textarea>\n    </div>\n`,\n\n  is: 'iron-autogrow-textarea',\n  behaviors: [IronValidatableBehavior, IronControlState],\n\n  properties: {\n    /**\n     * Use this property instead of `bind-value` for two-way data binding.\n     * @type {string|number}\n     */\n    value: {observer: '_valueChanged', type: String, notify: true},\n\n    /**\n     * This property is deprecated, and just mirrors `value`. Use `value`\n     * instead.\n     * @type {string|number}\n     */\n    bindValue: {observer: '_bindValueChanged', type: String, notify: true},\n\n    /**\n     * The initial number of rows.\n     *\n     * @attribute rows\n     * @type number\n     * @default 1\n     */\n    rows: {type: Number, value: 1, observer: '_updateCached'},\n\n    /**\n     * The maximum number of rows this element can grow to until it\n     * scrolls. 0 means no maximum.\n     *\n     * @attribute maxRows\n     * @type number\n     * @default 0\n     */\n    maxRows: {type: Number, value: 0, observer: '_updateCached'},\n\n    /**\n     * Bound to the textarea's `autocomplete` attribute.\n     */\n    autocomplete: {type: String, value: 'off'},\n\n    /**\n     * Bound to the textarea's `autofocus` attribute.\n     */\n    autofocus: {type: Boolean, value: false},\n\n    /**\n     * Bound to the textarea's `inputmode` attribute.\n     */\n    inputmode: {type: String},\n\n    /**\n     * Bound to the textarea's `placeholder` attribute.\n     */\n    placeholder: {type: String},\n\n    /**\n     * Bound to the textarea's `readonly` attribute.\n     */\n    readonly: {type: String},\n\n    /**\n     * Set to true to mark the textarea as required.\n     */\n    required: {type: Boolean},\n\n    /**\n     * The minimum length of the input value.\n     */\n    minlength: {type: Number},\n\n    /**\n     * The maximum length of the input value.\n     */\n    maxlength: {type: Number},\n\n    /**\n     * Bound to the textarea's `aria-label` attribute.\n     */\n    label: {type: String}\n\n  },\n\n  listeners: {'input': '_onInput'},\n\n  /**\n   * Returns the underlying textarea.\n   * @return {!HTMLTextAreaElement}\n   */\n  get textarea() {\n    return this.$.textarea;\n  },\n\n  /**\n   * Returns textarea's selection start.\n   * @return {number}\n   */\n  get selectionStart() {\n    return this.$.textarea.selectionStart;\n  },\n\n  /**\n   * Returns textarea's selection end.\n   * @return {number}\n   */\n  get selectionEnd() {\n    return this.$.textarea.selectionEnd;\n  },\n\n  /**\n   * Sets the textarea's selection start.\n   */\n  set selectionStart(value) {\n    this.$.textarea.selectionStart = value;\n  },\n\n  /**\n   * Sets the textarea's selection end.\n   */\n  set selectionEnd(value) {\n    this.$.textarea.selectionEnd = value;\n  },\n\n  attached: function() {\n    /* iOS has an arbitrary left margin of 3px that isn't present\n     * in any other browser, and means that the paper-textarea's cursor\n     * overlaps the label.\n     * See https://github.com/PolymerElements/paper-input/issues/468.\n     */\n    var IS_IOS = navigator.userAgent.match(/iP(?:[oa]d|hone)/);\n    if (IS_IOS) {\n      this.$.textarea.style.marginLeft = '-3px';\n    }\n  },\n\n  /**\n   * Returns true if `value` is valid. The validator provided in `validator`\n   * will be used first, if it exists; otherwise, the `textarea`'s validity\n   * is used.\n   * @return {boolean} True if the value is valid.\n   */\n  validate: function() {\n    // Use the nested input's native validity.\n    var valid = this.$.textarea.validity.valid;\n\n    // Only do extra checking if the browser thought this was valid.\n    if (valid) {\n      // Empty, required input is invalid\n      if (this.required && this.value === '') {\n        valid = false;\n      } else if (this.hasValidator()) {\n        valid = IronValidatableBehavior.validate.call(this, this.value);\n      }\n    }\n\n    this.invalid = !valid;\n    this.fire('iron-input-validate');\n    return valid;\n  },\n\n  _bindValueChanged: function(bindValue) {\n    this.value = bindValue;\n  },\n\n  _valueChanged: function(value) {\n    var textarea = this.textarea;\n    if (!textarea) {\n      return;\n    }\n\n    // If the bindValue changed manually, then we need to also update\n    // the underlying textarea's value. Otherwise this change was probably\n    // generated from the _onInput handler, and the two values are already\n    // the same.\n    if (textarea.value !== value) {\n      textarea.value = !(value || value === 0) ? '' : value;\n    }\n\n    this.bindValue = value;\n    this.$.mirror.innerHTML = this._valueForMirror();\n\n    // Manually notify because we don't want to notify until after setting\n    // value.\n    this.fire('bind-value-changed', {value: this.bindValue});\n  },\n\n  _onInput: function(event) {\n    var eventPath = dom(event).path;\n    this.value = eventPath ? eventPath[0].value : event.target.value;\n  },\n\n  _constrain: function(tokens) {\n    var _tokens;\n    tokens = tokens || [''];\n    // Enforce the min and max heights for a multiline input to avoid\n    // measurement\n    if (this.maxRows > 0 && tokens.length > this.maxRows) {\n      _tokens = tokens.slice(0, this.maxRows);\n    } else {\n      _tokens = tokens.slice(0);\n    }\n    while (this.rows > 0 && _tokens.length < this.rows) {\n      _tokens.push('');\n    }\n    // Use &#160; instead &nbsp; of to allow this element to be used in XHTML.\n    return _tokens.join('<br/>') + '&#160;';\n  },\n\n  _valueForMirror: function() {\n    var input = this.textarea;\n    if (!input) {\n      return;\n    }\n    this.tokens = (input && input.value) ? input.value.replace(/&/gm, '&amp;')\n                                               .replace(/\"/gm, '&quot;')\n                                               .replace(/'/gm, '&#39;')\n                                               .replace(/</gm, '&lt;')\n                                               .replace(/>/gm, '&gt;')\n                                               .split('\\n') :\n                                           [''];\n    return this._constrain(this.tokens);\n  },\n\n  _updateCached: function() {\n    this.$.mirror.innerHTML = this._constrain(this.tokens);\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js';\nimport './paper-input-char-counter.js';\nimport './paper-input-container.js';\nimport './paper-input-error.js';\n\nimport {IronFormElementBehavior} from '@polymer/iron-form-element-behavior/iron-form-element-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperInputBehavior} from './paper-input-behavior.js';\n\n/*\n`<paper-textarea>` is a multi-line text field with Material Design styling.\n\n    <paper-textarea label=\"Textarea label\"></paper-textarea>\n\nSee `Polymer.PaperInputBehavior` for more API docs.\n\n### Validation\n\nCurrently only `required` and `maxlength` validation is supported.\n\n### Styling\n\nSee `Polymer.PaperInputContainer` for a list of custom properties used to\nstyle this element.\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      label {\n        pointer-events: none;\n      }\n    </style>\n\n    <paper-input-container no-label-float$=\"[[noLabelFloat]]\" always-float-label=\"[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]\" auto-validate$=\"[[autoValidate]]\" disabled$=\"[[disabled]]\" invalid=\"[[invalid]]\">\n\n      <label hidden$=\"[[!label]]\" aria-hidden=\"true\" for$=\"[[_inputId]]\" slot=\"label\">[[label]]</label>\n\n      <iron-autogrow-textarea class=\"paper-input-input\" slot=\"input\" id$=\"[[_inputId]]\" aria-labelledby$=\"[[_ariaLabelledBy]]\" aria-describedby$=\"[[_ariaDescribedBy]]\" bind-value=\"{{value}}\" invalid=\"{{invalid}}\" validator$=\"[[validator]]\" disabled$=\"[[disabled]]\" autocomplete$=\"[[autocomplete]]\" autofocus$=\"[[autofocus]]\" inputmode$=\"[[inputmode]]\" name$=\"[[name]]\" placeholder$=\"[[placeholder]]\" readonly$=\"[[readonly]]\" required$=\"[[required]]\" minlength$=\"[[minlength]]\" maxlength$=\"[[maxlength]]\" autocapitalize$=\"[[autocapitalize]]\" rows$=\"[[rows]]\" max-rows$=\"[[maxRows]]\" on-change=\"_onChange\"></iron-autogrow-textarea>\n\n      <template is=\"dom-if\" if=\"[[errorMessage]]\">\n        <paper-input-error aria-live=\"assertive\" slot=\"add-on\">[[errorMessage]]</paper-input-error>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[charCounter]]\">\n        <paper-input-char-counter slot=\"add-on\"></paper-input-char-counter>\n      </template>\n\n    </paper-input-container>\n`,\n\n  is: 'paper-textarea',\n\n  behaviors: [\n    PaperInputBehavior,\n    IronFormElementBehavior,\n  ],\n\n  properties: {\n    _ariaLabelledBy: {\n      observer: '_ariaLabelledByChanged',\n      type: String,\n    },\n\n    _ariaDescribedBy: {\n      observer: '_ariaDescribedByChanged',\n      type: String,\n    },\n\n    value: {\n      // Required for the correct TypeScript type-generation\n      type: String,\n    },\n\n    /**\n     * The initial number of rows.\n     *\n     * @attribute rows\n     * @type {number}\n     * @default 1\n     */\n    rows: {\n      type: Number,\n      value: 1,\n    },\n\n    /**\n     * The maximum number of rows this element can grow to until it\n     * scrolls. 0 means no maximum.\n     *\n     * @attribute maxRows\n     * @type {number}\n     * @default 0\n     */\n    maxRows: {\n      type: Number,\n      value: 0,\n    },\n  },\n\n  /**\n   * @return {number}\n   */\n  get selectionStart() {\n    return this.$.input.textarea.selectionStart;\n  },\n\n  set selectionStart(start) {\n    this.$.input.textarea.selectionStart = start;\n  },\n\n  /**\n   * @return {number}\n   */\n  get selectionEnd() {\n    return this.$.input.textarea.selectionEnd;\n  },\n\n  set selectionEnd(end) {\n    this.$.input.textarea.selectionEnd = end;\n  },\n\n  _ariaLabelledByChanged: function(ariaLabelledBy) {\n    this._focusableElement.setAttribute('aria-labelledby', ariaLabelledBy);\n  },\n\n  _ariaDescribedByChanged: function(ariaDescribedBy) {\n    this._focusableElement.setAttribute('aria-describedby', ariaDescribedBy);\n  },\n\n  get _focusableElement() {\n    return this.inputElement.textarea;\n  }\n});\n","import \"@polymer/paper-input/paper-textarea\";\nimport { computeRTL } from \"../../../../common/util/compute_rtl\";\nimport { LovelaceCardConfig } from \"../../../../data/lovelace\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { createCardElement } from \"../../create-element/create-card-element\";\nimport { LovelaceCard } from \"../../types\";\nimport { ConfigError } from \"../types\";\nimport { createErrorCardConfig } from \"../../create-element/create-element-base\";\n\nexport class HuiCardPreview extends HTMLElement {\n  private _hass?: HomeAssistant;\n\n  private _element?: LovelaceCard;\n\n  private _config?: LovelaceCardConfig;\n\n  private get _error() {\n    return this._element?.tagName === \"HUI-ERROR-CARD\";\n  }\n\n  constructor() {\n    super();\n    this.addEventListener(\"ll-rebuild\", () => {\n      this._cleanup();\n      if (this._config) {\n        this.config = this._config;\n      }\n    });\n  }\n\n  set hass(hass: HomeAssistant) {\n    if (!this._hass || this._hass.language !== hass.language) {\n      this.style.direction = computeRTL(hass) ? \"rtl\" : \"ltr\";\n    }\n\n    this._hass = hass;\n    if (this._element) {\n      this._element.hass = hass;\n    }\n  }\n\n  set error(error: ConfigError) {\n    this._createCard(\n      createErrorCardConfig(`${error.type}: ${error.message}`, undefined)\n    );\n  }\n\n  set config(configValue: LovelaceCardConfig) {\n    const curConfig = this._config;\n    this._config = configValue;\n\n    if (!configValue) {\n      this._cleanup();\n      return;\n    }\n\n    if (!configValue.type) {\n      this._createCard(\n        createErrorCardConfig(\"No card type found\", configValue)\n      );\n      return;\n    }\n\n    if (!this._element) {\n      this._createCard(configValue);\n      return;\n    }\n\n    // in case the element was an error element we always want to recreate it\n    if (!this._error && curConfig && configValue.type === curConfig.type) {\n      try {\n        this._element.setConfig(configValue);\n      } catch (err) {\n        this._createCard(createErrorCardConfig(err.message, configValue));\n      }\n    } else {\n      this._createCard(configValue);\n    }\n  }\n\n  private _createCard(configValue: LovelaceCardConfig): void {\n    this._cleanup();\n    this._element = createCardElement(configValue);\n\n    if (this._hass) {\n      this._element!.hass = this._hass;\n    }\n\n    this.appendChild(this._element!);\n  }\n\n  private _cleanup() {\n    if (!this._element) {\n      return;\n    }\n    this.removeChild(this._element);\n    this._element = undefined;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-card-preview\": HuiCardPreview;\n  }\n}\n\ncustomElements.define(\"hui-card-preview\", HuiCardPreview);\n","import deepFreeze from \"deep-freeze\";\nimport {\n  css,\n  CSSResultArray,\n  customElement,\n  html,\n  LitElement,\n  property,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/dialog/ha-paper-dialog\";\nimport type { HaPaperDialog } from \"../../../../components/dialog/ha-paper-dialog\";\nimport type { LovelaceCardConfig } from \"../../../../data/lovelace\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport \"./hui-card-preview\";\nimport type { DeleteCardDialogParams } from \"./show-delete-card-dialog\";\n\n@customElement(\"hui-dialog-delete-card\")\nexport class HuiDialogDeleteCard extends LitElement {\n  @property() protected hass!: HomeAssistant;\n\n  @property() private _params?: DeleteCardDialogParams;\n\n  @property() private _cardConfig?: LovelaceCardConfig;\n\n  @query(\"ha-paper-dialog\") private _dialog!: HaPaperDialog;\n\n  public async showDialog(params: DeleteCardDialogParams): Promise<void> {\n    this._params = params;\n    this._cardConfig = params.cardConfig;\n    if (!Object.isFrozen(this._cardConfig)) {\n      this._cardConfig = deepFreeze(this._cardConfig);\n    }\n    await this.updateComplete;\n    fireEvent(this._dialog as HTMLElement, \"iron-resize\");\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n\n    return html`\n      <ha-paper-dialog with-backdrop opened modal>\n        <h2>\n          ${this.hass.localize(\"ui.panel.lovelace.cards.confirm_delete\")}\n        </h2>\n        <paper-dialog-scrollable>\n          ${this._cardConfig\n            ? html`\n                <div class=\"element-preview\">\n                  <hui-card-preview\n                    .hass=${this.hass}\n                    .config=\"${this._cardConfig}\"\n                  ></hui-card-preview>\n                </div>\n              `\n            : \"\"}\n        </paper-dialog-scrollable>\n        <div class=\"paper-dialog-buttons\">\n          <mwc-button @click=\"${this._close}\">\n            ${this.hass!.localize(\"ui.common.cancel\")}\n          </mwc-button>\n          <mwc-button class=\"warning\" @click=\"${this._delete}\">\n            ${this.hass!.localize(\"ui.common.delete\")}\n          </mwc-button>\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyleDialog,\n      css`\n        .element-preview {\n          position: relative;\n        }\n        hui-card-preview {\n          margin: 4px auto;\n          max-width: 500px;\n          display: block;\n          width: 100%;\n        }\n      `,\n    ];\n  }\n\n  private _close(): void {\n    this._params = undefined;\n    this._cardConfig = undefined;\n  }\n\n  private _delete(): void {\n    if (!this._params?.deleteCard) {\n      return;\n    }\n    this._params.deleteCard();\n    this._close();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-dialog-delete-card\": HuiDialogDeleteCard;\n  }\n}\n"],"sourceRoot":""}