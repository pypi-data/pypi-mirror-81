# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from cs3.sharing.ocm.v1beta1 import ocm_api_pb2 as cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2


class OcmAPIStub(object):
  """OCM Share Provider API

  The OCM Share Provider API is meant to manipulate share
  resources from the perspective of the creator or the share and
  from the perspective of the receiver of the share.

  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
  NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
  "OPTIONAL" in this document are to be interpreted as described in
  RFC 2119.

  The following are global requirements that apply to all methods:
  Any method MUST return CODE_OK on a succesful operation.
  Any method MAY return NOT_IMPLEMENTED.
  Any method MAY return INTERNAL.
  Any method MAY return UNKNOWN.
  Any method MAY return UNAUTHENTICATED.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateOCMShare = channel.unary_unary(
        '/cs3.sharing.ocm.v1beta1.OcmAPI/CreateOCMShare',
        request_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.CreateOCMShareRequest.SerializeToString,
        response_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.CreateOCMShareResponse.FromString,
        )
    self.RemoveOCMShare = channel.unary_unary(
        '/cs3.sharing.ocm.v1beta1.OcmAPI/RemoveOCMShare',
        request_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.RemoveOCMShareRequest.SerializeToString,
        response_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.RemoveOCMShareResponse.FromString,
        )
    self.GetOCMShare = channel.unary_unary(
        '/cs3.sharing.ocm.v1beta1.OcmAPI/GetOCMShare',
        request_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.GetOCMShareRequest.SerializeToString,
        response_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.GetOCMShareResponse.FromString,
        )
    self.ListOCMShares = channel.unary_unary(
        '/cs3.sharing.ocm.v1beta1.OcmAPI/ListOCMShares',
        request_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.ListOCMSharesRequest.SerializeToString,
        response_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.ListOCMSharesResponse.FromString,
        )
    self.UpdateOCMShare = channel.unary_unary(
        '/cs3.sharing.ocm.v1beta1.OcmAPI/UpdateOCMShare',
        request_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.UpdateOCMShareRequest.SerializeToString,
        response_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.UpdateOCMShareResponse.FromString,
        )
    self.ListReceivedOCMShares = channel.unary_unary(
        '/cs3.sharing.ocm.v1beta1.OcmAPI/ListReceivedOCMShares',
        request_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.ListReceivedOCMSharesRequest.SerializeToString,
        response_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.ListReceivedOCMSharesResponse.FromString,
        )
    self.UpdateReceivedOCMShare = channel.unary_unary(
        '/cs3.sharing.ocm.v1beta1.OcmAPI/UpdateReceivedOCMShare',
        request_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.UpdateReceivedOCMShareRequest.SerializeToString,
        response_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.UpdateReceivedOCMShareResponse.FromString,
        )
    self.GetReceivedOCMShare = channel.unary_unary(
        '/cs3.sharing.ocm.v1beta1.OcmAPI/GetReceivedOCMShare',
        request_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.GetReceivedOCMShareRequest.SerializeToString,
        response_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.GetReceivedOCMShareResponse.FromString,
        )


class OcmAPIServicer(object):
  """OCM Share Provider API

  The OCM Share Provider API is meant to manipulate share
  resources from the perspective of the creator or the share and
  from the perspective of the receiver of the share.

  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
  NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
  "OPTIONAL" in this document are to be interpreted as described in
  RFC 2119.

  The following are global requirements that apply to all methods:
  Any method MUST return CODE_OK on a succesful operation.
  Any method MAY return NOT_IMPLEMENTED.
  Any method MAY return INTERNAL.
  Any method MAY return UNKNOWN.
  Any method MAY return UNAUTHENTICATED.
  """

  def CreateOCMShare(self, request, context):
    """Creates a new ocm share.
    MUST return CODE_NOT_FOUND if the resource reference does not exist.
    MUST return CODE_ALREADY_EXISTS if the share already exists for the 4-tuple consisting of
    (owner, shared_resource, grantee).
    New shares MUST be created in the state SHARE_STATE_PENDING.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveOCMShare(self, request, context):
    """Removes a share.
    MUST return CODE_NOT_FOUND if the share reference does not exist.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOCMShare(self, request, context):
    """Gets share information for a single share.
    MUST return CODE_NOT_FOUND if the share reference does not exist.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListOCMShares(self, request, context):
    """List the shares the authenticated principal has created,
    both as owner and creator. If a filter is specified, only
    shares satisfying the filter MUST be returned.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateOCMShare(self, request, context):
    """Updates a share.
    MUST return CODE_NOT_FOUND if the share reference does not exist.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListReceivedOCMShares(self, request, context):
    """List all shares the authenticated principal has received.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateReceivedOCMShare(self, request, context):
    """Update the received share to change the share state or the display name.
    MUST return CODE_NOT_FOUND if the share reference does not exist.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetReceivedOCMShare(self, request, context):
    """Get the information for the given received share reference.
    MUST return CODE_NOT_FOUND if the received share reference does not exist.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OcmAPIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateOCMShare': grpc.unary_unary_rpc_method_handler(
          servicer.CreateOCMShare,
          request_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.CreateOCMShareRequest.FromString,
          response_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.CreateOCMShareResponse.SerializeToString,
      ),
      'RemoveOCMShare': grpc.unary_unary_rpc_method_handler(
          servicer.RemoveOCMShare,
          request_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.RemoveOCMShareRequest.FromString,
          response_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.RemoveOCMShareResponse.SerializeToString,
      ),
      'GetOCMShare': grpc.unary_unary_rpc_method_handler(
          servicer.GetOCMShare,
          request_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.GetOCMShareRequest.FromString,
          response_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.GetOCMShareResponse.SerializeToString,
      ),
      'ListOCMShares': grpc.unary_unary_rpc_method_handler(
          servicer.ListOCMShares,
          request_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.ListOCMSharesRequest.FromString,
          response_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.ListOCMSharesResponse.SerializeToString,
      ),
      'UpdateOCMShare': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateOCMShare,
          request_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.UpdateOCMShareRequest.FromString,
          response_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.UpdateOCMShareResponse.SerializeToString,
      ),
      'ListReceivedOCMShares': grpc.unary_unary_rpc_method_handler(
          servicer.ListReceivedOCMShares,
          request_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.ListReceivedOCMSharesRequest.FromString,
          response_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.ListReceivedOCMSharesResponse.SerializeToString,
      ),
      'UpdateReceivedOCMShare': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateReceivedOCMShare,
          request_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.UpdateReceivedOCMShareRequest.FromString,
          response_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.UpdateReceivedOCMShareResponse.SerializeToString,
      ),
      'GetReceivedOCMShare': grpc.unary_unary_rpc_method_handler(
          servicer.GetReceivedOCMShare,
          request_deserializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.GetReceivedOCMShareRequest.FromString,
          response_serializer=cs3_dot_sharing_dot_ocm_dot_v1beta1_dot_ocm__api__pb2.GetReceivedOCMShareResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'cs3.sharing.ocm.v1beta1.OcmAPI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
