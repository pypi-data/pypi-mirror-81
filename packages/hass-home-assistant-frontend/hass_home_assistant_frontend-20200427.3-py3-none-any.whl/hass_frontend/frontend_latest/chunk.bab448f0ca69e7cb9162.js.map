{"version":3,"sources":["webpack:///./src/panels/lovelace/common/validate-condition.ts","webpack:///./src/panels/lovelace/components/hui-conditional-base.ts","webpack:///./src/panels/lovelace/special-rows/hui-conditional-row.ts"],"names":["checkConditionsMet","conditions","hass","every","c","state","states","entity","state_not","validateConditionalConfig","__webpack_require__","d","__webpack_exports__","HuiConditionalBase","_decorate","customElement","_initialize","_UpdatingElement","F","[object Object]","args","super","this","kind","decorators","property","key","value","config","Error","Array","isArray","lastChild","removeChild","_config","_element","editMode","visible","style","setProperty","parentElement","appendChild","UpdatingElement","_HuiConditionalBase","validateConfig","row","createRowElement"],"mappings":"wFAQO,SAASA,EACdC,EACAC,GAEA,OAAOD,EAAWE,MAAOC,IACvB,MAAMC,EAAQH,EAAKI,OAAOF,EAAEG,QACxBL,EAAMI,OAAOF,EAAEG,QAAQF,MACvB,cAEJ,OAAOD,EAAEC,MAAQA,IAAUD,EAAEC,MAAQA,IAAUD,EAAEI,YAI9C,SAASC,EAA0BR,GACxC,OAAOA,EAAWE,MACfC,GAAQA,EAAEG,SAAWH,EAAEC,OAASD,EAAEI,YAfvCE,EAAAC,EAAAC,EAAA,sBAAAZ,IAAAU,EAAAC,EAAAC,EAAA,sBAAAH,y4CCGO,IAAMI,sqMAAbC,CAAA,CADCC,YAAc,yBACf,SAAAC,EAAAC,GAAA,OAAAC,EADA,cAAAD,EACwDE,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,QAAxDX,EAAA,EAAAY,KAAA,QAAAC,WAAA,CACGC,eADHC,IAAA,OAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAGGC,eAHHC,IAAA,WAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAKGC,eALHC,IAAA,UAAAC,WAAA,IAAAJ,KAAA,QAAAG,IAAA,WAAAC,WAAA,IAAAJ,KAAA,SAAAG,IAAA,iBAAAC,MASE,SACEC,GAEA,IAAKA,EAAO3B,WACV,MAAM,IAAI4B,MAAM,6BAGlB,IAAKC,MAAMC,QAAQH,EAAO3B,YACxB,MAAM,IAAI4B,MAAM,qCAGlB,IAAKpB,YAA0BmB,EAAO3B,YACpC,MAAM,IAAI4B,MAAM,2BAGdP,KAAKU,WACPV,KAAKW,YAAYX,KAAKU,WAGxBV,KAAKY,QAAUN,IA5BnB,CAAAL,KAAA,SAAAG,IAAA,SAAAC,MA+BE,WACE,IAAKL,KAAKa,WAAab,KAAKpB,OAASoB,KAAKY,QACxC,OAGFZ,KAAKa,SAASC,SAAWd,KAAKc,SAE9B,MAAMC,EACJf,KAAKc,UAAYpC,YAAmBsB,KAAKY,QAAQjC,WAAYqB,KAAKpB,MAEpEoB,KAAKgB,MAAMC,YAAY,UAAWF,EAAU,GAAK,QAE7CA,IACFf,KAAKa,SAASjC,KAAOoB,KAAKpB,KACrBoB,KAAKa,SAASK,eACjBlB,KAAKmB,YAAYnB,KAAKa,gBA9CUO,0hPCNvC3B,YAAc,+CAAf,cAAA4B,EAC0ExB,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,gDACxE,SAAiBM,GAGf,GAFAN,KAAKsB,eAAehB,IAEfA,EAAOiB,IACV,MAAM,IAAIhB,MAAM,sBAGlBP,KAAKa,SAAWW,YAAiBlB,EAAOiB,UARZhC","file":"chunk.bab448f0ca69e7cb9162.js","sourcesContent":["import { HomeAssistant } from \"../../../types\";\n\nexport interface Condition {\n  entity: string;\n  state?: string;\n  state_not?: string;\n}\n\nexport function checkConditionsMet(\n  conditions: Condition[],\n  hass: HomeAssistant\n): boolean {\n  return conditions.every((c) => {\n    const state = hass.states[c.entity]\n      ? hass!.states[c.entity].state\n      : \"unavailable\";\n\n    return c.state ? state === c.state : state !== c.state_not;\n  });\n}\n\nexport function validateConditionalConfig(conditions: Condition[]): boolean {\n  return conditions.every(\n    (c) => ((c.entity && (c.state || c.state_not)) as unknown) as boolean\n  );\n}\n","import { customElement, property, UpdatingElement } from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\nimport { ConditionalCardConfig } from \"../cards/types\";\nimport {\n  checkConditionsMet,\n  validateConditionalConfig,\n} from \"../common/validate-condition\";\nimport { ConditionalRowConfig, LovelaceRow } from \"../entity-rows/types\";\nimport { LovelaceCard } from \"../types\";\n\n@customElement(\"hui-conditional-base\")\nexport class HuiConditionalBase extends UpdatingElement {\n  @property() public hass?: HomeAssistant;\n\n  @property() public editMode?: boolean;\n\n  @property() protected _config?: ConditionalCardConfig | ConditionalRowConfig;\n\n  protected _element?: LovelaceCard | LovelaceRow;\n\n  protected validateConfig(\n    config: ConditionalCardConfig | ConditionalRowConfig\n  ): void {\n    if (!config.conditions) {\n      throw new Error(\"No conditions configured.\");\n    }\n\n    if (!Array.isArray(config.conditions)) {\n      throw new Error(\"Conditions should be in an array.\");\n    }\n\n    if (!validateConditionalConfig(config.conditions)) {\n      throw new Error(\"Conditions are invalid.\");\n    }\n\n    if (this.lastChild) {\n      this.removeChild(this.lastChild);\n    }\n\n    this._config = config;\n  }\n\n  protected update(): void {\n    if (!this._element || !this.hass || !this._config) {\n      return;\n    }\n\n    this._element.editMode = this.editMode;\n\n    const visible =\n      this.editMode || checkConditionsMet(this._config.conditions, this.hass);\n\n    this.style.setProperty(\"display\", visible ? \"\" : \"none\");\n\n    if (visible) {\n      this._element.hass = this.hass;\n      if (!this._element.parentElement) {\n        this.appendChild(this._element);\n      }\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-conditional-base\": HuiConditionalBase;\n  }\n}\n","import { customElement } from \"lit-element\";\nimport { HuiConditionalBase } from \"../components/hui-conditional-base\";\nimport { createRowElement } from \"../create-element/create-row-element\";\nimport { ConditionalRowConfig, LovelaceRow } from \"../entity-rows/types\";\n\n@customElement(\"hui-conditional-row\")\nclass HuiConditionalRow extends HuiConditionalBase implements LovelaceRow {\n  public setConfig(config: ConditionalRowConfig): void {\n    this.validateConfig(config);\n\n    if (!config.row) {\n      throw new Error(\"No row configured.\");\n    }\n\n    this._element = createRowElement(config.row) as LovelaceRow;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-conditional-row\": HuiConditionalRow;\n  }\n}\n"],"sourceRoot":""}