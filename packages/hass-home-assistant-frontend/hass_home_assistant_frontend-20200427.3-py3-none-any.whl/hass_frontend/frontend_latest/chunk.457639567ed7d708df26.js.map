{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-icon-button/paper-icon-button.js","webpack:///src/observer.ts","webpack:///src/utils.ts","webpack:///src/base-element.ts","webpack:///./src/resources/codemirror.ondemand.ts","webpack:///./src/components/ha-code-editor.ts","webpack:///./src/components/ha-dialog.ts","webpack:///./node_modules/@polymer/paper-behaviors/paper-inky-focus-behavior.js","webpack:///./node_modules/@polymer/paper-behaviors/paper-ripple-behavior.js","webpack:///./src/dialogs/zha-device-zigbee-signature-dialog/dialog-zha-device-zigbee-info.ts"],"names":["__webpack_require__","_polymer_paper_behaviors_paper_inky_focus_behavior_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","Polymer","is","_template","html","hostAttributes","role","tabindex","behaviors","PaperInkyFocusBehavior","registered","this","setAttribute","properties","src","type","String","icon","alt","observer","_altChanged","newValue","oldValue","label","getAttribute","proto","propName","constructor","_observers","hasOwnProperty","observers","Map","forEach","v","k","set","userUpdated","updated","changedProperties","call","get","undefined","addHasRemoveClass","element","addClass","className","classList","add","removeClass","remove","hasClass","contains","supportsPassive","fn","optionsBlock","passive","document","addEventListener","removeEventListener","d","__webpack_exports__","base_element_BaseElement","lit_element","[object Object]","mdcFoundation","destroy","mdcFoundationClass","createAdapter","init","createFoundation","loaded","_decorate","customElement","_initialize","_UpdatingElement","HaCodeEditor","args","super","F","kind","key","value","decorators","property","Boolean","_value","codemirror","getValue","shadowRoot","querySelector","_get","_getPrototypeOf","prototype","refresh","autofocus","focus","changedProps","has","setOption","mode","setValue","_calcGutters","_setScrollBarDirection","toggle","error","_load","async","Promise","all","e","then","bind","loadCodeMirror","codeMirror","attachShadow","innerHTML","codeMirrorCss","lineNumbers","tabSize","viewportMargin","Infinity","readOnly","extraKeys","Tab","Shift-Tab","gutters","on","_onChange","fireEvent","rtl","getWrapperElement","UpdatingElement","MwcDialog","customElements","createCloseHeading","hass","title","localize","_MwcDialog","static","style","css","PaperInkyFocusBehaviorImpl","_polymer_iron_behaviors_iron_button_state_js__WEBPACK_IMPORTED_MODULE_1__","_polymer_iron_behaviors_iron_control_state_js__WEBPACK_IMPORTED_MODULE_2__","_paper_ripple_behavior_js__WEBPACK_IMPORTED_MODULE_3__","_focusedChanged","receivedFocusFromKeyboard","ensureRipple","hasRipple","_ripple","holdDown","_createRipple","ripple","PaperRippleBehavior","id","IronButtonState","IronControlState","_polymer_iron_behaviors_iron_button_state_js__WEBPACK_IMPORTED_MODULE_2__","_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__","noink","_rippleContainer","Object","_buttonStateChanged","focused","_downHandler","event","IronButtonStateImpl","pressed","optTriggeringEvent","rippleContainer","root","dom","appendChild","domContainer","target","rootTarget","deepContains","uiDownAction","getRipple","createElement","_noinkChanged","_LitElement","params","_signature","JSON","stringify","assign","device","signature","manufacturer","model","class","quirk_class","_close","haStyleDialog","LitElement"],"mappings":";uFAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAA,QAAAC,EAAAD,EAAA,IAAAE,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GA8EAI,YAAQ,CACNC,GAAI,oBAEJC,UAAWC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA8DXC,eAAgB,CAACC,KAAM,SAAUC,SAAU,KAE3CC,UAAW,CAACC,KAEZC,WAAY,WACVC,KAAKR,UAAUS,aAAa,mBAAoB,KAGlDC,WAAY,CAKVC,IAAK,CAACC,KAAMC,QAOZC,KAAM,CAACF,KAAMC,QAKbE,IAAK,CAACH,KAAMC,OAAQG,SAAU,gBAGhCC,YAAa,SAASC,EAAUC,GAC9B,IAAIC,EAAQZ,KAAKa,aAAa,cAGzBD,GAASD,GAAYC,GACxBZ,KAAKC,aAAa,aAAcS,mDCzJ/B,MAAMF,EAAYA,GAErB,CAACM,EAAYC,KAEX,GAAKD,EAAME,YAAYC,YAahB,IAAKH,EAAME,YAAYE,eAAe,cAAe,CAC1D,MAAMC,EAAYL,EAAME,YAAYC,WACpCH,EAAME,YAAYC,WAAa,IAAIG,IACnCD,EAAUE,QAEN,CAACC,EAAQC,IAAmBT,EAAME,YAAYC,WAAWO,IAAID,EAAGD,SAlBnC,CACjCR,EAAME,YAAYC,WAAa,IAAIG,IACnC,MAAMK,EAAcX,EAAMY,QAC1BZ,EAAMY,QAAU,SAASC,GACvBF,EAAYG,KAAK5B,KAAM2B,GACvBA,EAAkBN,QAAQ,CAACC,EAAGC,KAC5B,MAAMf,EAAWR,KAAKgB,YAAYC,WAAWY,IAAIN,QAChCO,IAAbtB,GACFA,EAASoB,KAAK5B,KAAMA,KAAKuB,GAAID,MAarCR,EAAME,YAAYC,WAAWO,IAAIT,EAAUP,UCA3C,SAAUuB,EAAkBC,GAChC,MAAO,CACLC,SAAWC,IACTF,EAAQG,UAAUC,IAAIF,IAExBG,YAAcH,IACZF,EAAQG,UAAUG,OAAOJ,IAE3BK,SAAWL,GAAsBF,EAAQG,UAAUK,SAASN,IAIhE,IAAIO,GAAkB,EACtB,MAAMC,EAAK,OACLC,EAAwC,CAC5CC,cAEE,OADAH,GAAkB,GACX,IAGXI,SAASC,iBAAiB,IAAKJ,EAAIC,GACnCE,SAASE,oBAAoB,IAAKL,GCrElCxD,EAAA8D,EAAAC,EAAA,sBAAAC,IAAAhE,EAAA8D,EAAAC,EAAA,sBAAAzC,IAAAtB,EAAA8D,EAAAC,EAAA,sBAAAlB,IAyBM,MAAgBmB,UAAoBC,EAAA,EAkC9BC,wBACmBtB,IAAvB9B,KAAKqD,eACPrD,KAAKqD,cAAcC,UAErBtD,KAAKqD,cAAgB,IAAIrD,KAAKuD,mBAAmBvD,KAAKwD,iBACtDxD,KAAKqD,cAAcI,OAGXL,eACRpD,KAAK0D,0EC/DT,IAAIC,u3PCYJC,CAAA,CADCC,YAAc,mBACf,SAAAC,EAAAC,GADA,MACaC,UADbD,EACkDX,eAAAa,GAAAC,SAAAD,GAAAH,EAAA9D,OAAlD,OAAAmE,EAAaH,EAAbhB,EAAA,EAAAoB,KAAA,QAAAC,IAAA,aAAAC,WAAA,IAAAF,KAAA,QAAAG,WAAA,CAGGC,eAHHH,IAAA,OAAAC,WAAA,IAAAF,KAAA,QAAAG,WAAA,CAKGC,YAAS,CAAEpE,KAAMqE,WALpBJ,IAAA,YAAAC,MAAA,KAKkD,GALlD,CAAAF,KAAA,QAAAG,WAAA,CAOGC,YAAS,CAAEpE,KAAMqE,WAPpBJ,IAAA,WAAAC,MAAA,KAOiD,GAPjD,CAAAF,KAAA,QAAAG,WAAA,CASGC,eATHH,IAAA,MAAAC,MAAA,KAS2B,GAT3B,CAAAF,KAAA,QAAAG,WAAA,CAWGC,eAXHH,IAAA,QAAAC,MAAA,KAW6B,GAX7B,CAAAF,KAAA,QAAAG,WAAA,CAaGC,eAbHH,IAAA,SAAAC,MAAA,IAa+B,IAb/B,CAAAF,KAAA,MAAAC,IAAA,QAAAC,MAeE,SAAiBA,GACftE,KAAK0E,OAASJ,IAhBlB,CAAAF,KAAA,MAAAC,IAAA,QAAAC,MAmBE,WACE,OAAOtE,KAAK2E,WAAa3E,KAAK2E,WAAWC,WAAa5E,KAAK0E,SApB/D,CAAAN,KAAA,MAAAC,IAAA,cAAAC,MAuBE,WACE,QAAStE,KAAK6E,WAAYC,cAAc,qBAxB5C,CAAAV,KAAA,SAAAC,IAAA,oBAAAC,MA2BE,WACES,EAAAC,EA5BShB,EA4BTiB,WAAA,oBAAAjF,MAAA4B,KAAA5B,MACKA,KAAK2E,aAGV3E,KAAK2E,WAAWO,WACO,IAAnBlF,KAAKmF,WACPnF,KAAK2E,WAAWS,WAlCtB,CAAAhB,KAAA,SAAAC,IAAA,SAAAC,MAsCE,SAAiBe,GACfN,EAAAC,EAvCShB,EAuCTiB,WAAA,SAAAjF,MAAA4B,KAAA5B,KAAaqF,GAERrF,KAAK2E,aAINU,EAAaC,IAAI,SACnBtF,KAAK2E,WAAWY,UAAU,OAAQvF,KAAKwF,MAErCH,EAAaC,IAAI,cACnBtF,KAAK2E,WAAWY,UAAU,aAAgC,IAAnBvF,KAAKmF,WAE1CE,EAAaC,IAAI,WAAatF,KAAK0E,SAAW1E,KAAKsE,OACrDtE,KAAK2E,WAAWc,SAASzF,KAAK0E,QAE5BW,EAAaC,IAAI,SACnBtF,KAAK2E,WAAWY,UAAU,UAAWvF,KAAK0F,gBAC1C1F,KAAK2F,0BAEHN,EAAaC,IAAI,UACnBtF,KAAKmC,UAAUyD,OAAO,cAAe5F,KAAK6F,UA3DhD,CAAAzB,KAAA,SAAAC,IAAA,eAAAC,MA+DE,SAAuBe,GACrBN,EAAAC,EAhEShB,EAgETiB,WAAA,eAAAjF,MAAA4B,KAAA5B,KAAmBqF,GACnBrF,KAAK8F,UAjET,CAAA1B,KAAA,SAAAC,IAAA,QAAAC,MAoEEyB,iBACE,MAAMpC,OD/EoBoC,WACvBpC,IACHA,EAASqC,QAAAC,IAAA,CAAA/G,EAAAgH,EAAA,KAAAhH,EAAAgH,EAAA,MAAAC,KAAAjH,EAAAkH,KAAA,YAEJzC,GC2EgB0C,GAEfC,EAAa3C,EAAO2C,WAEpBzB,EAAa7E,KAAKuG,aAAa,CAAEf,KAAM,SAE7CX,EAAY2B,kCAER7C,EAAO8C,ijCA+BXzG,KAAK2E,WAAa2B,EAAWzB,EAAY,CACvCP,MAAOtE,KAAK0E,OACZgC,aAAa,EACbC,QAAS,EACTnB,KAAMxF,KAAKwF,KACXL,WAA8B,IAAnBnF,KAAKmF,UAChByB,eAAgBC,IAChBC,SAAU9G,KAAK8G,SACfC,UAAW,CACTC,IAAK,aACLC,YAAa,cAEfC,QAASlH,KAAK0F,iBAEhB1F,KAAK2F,yBACL3F,KAAK2E,WAAYwC,GAAG,UAAW,IAAMnH,KAAKoH,eA3H9C,CAAAhD,KAAA,SAAAC,IAAA,YAAAC,MA8HE,WACE,MAAM5D,EAAWV,KAAKsE,MAClB5D,IAAaV,KAAK0E,SAGtB1E,KAAK0E,OAAShE,EACd2G,YAAUrH,KAAM,gBAAiB,CAAEsE,MAAOtE,KAAK0E,YApInD,CAAAN,KAAA,SAAAC,IAAA,eAAAC,MAuIE,WACE,OAAOtE,KAAKsH,IAAM,CAAC,aAAc,0BAA4B,KAxIjE,CAAAlD,KAAA,SAAAC,IAAA,yBAAAC,MA2IE,WACMtE,KAAK2E,YACP3E,KAAK2E,WAAW4C,oBAAoBpF,UAAUyD,OAAO,MAAO5F,KAAKsH,UA7IrCE,05CCVlC,MAAMC,EAAYC,eAAe7F,IAAI,cAExB8F,EAAqB,CAACC,EAAqBC,IAAkBpI;IACtEoI;;iBAEaD,EAAKE,SAAS;;;;;gqMAQ/BlE,CAAA,CADCC,YAAc,cACf,SAAAC,EAAAiE,GAAA,OAAA5D,EADA,cAAA4D,EACwC3E,eAAAa,GAAAC,SAAAD,GAAAH,EAAA9D,QAAxCgD,EAAA,EAAAoB,KAAA,MAAA4D,QAAA,EAAA3D,IAAA,SAAAC,MACE,WACE,MAAO,CACL2D,IACAC;;;;;;;;;;;;;;;;cAJwBT,oCCpB9BvI,EAAA8D,EAAAC,EAAA,sBAAAkF,IAAAjJ,EAAA8D,EAAAC,EAAA,sBAAAnD,IAAAZ,EAAA,OAAAkJ,EAAAlJ,EAAA,IAAAmJ,EAAAnJ,EAAA,IAAAoJ,EAAApJ,EAAA,IAuBO,MAAMiJ,EAA6B,CACxChH,UAAW,CAAC,8CAEZoH,gBAAiB,SAASC,GACpBA,GACFxI,KAAKyI,eAEHzI,KAAK0I,cACP1I,KAAK2I,QAAQC,SAAWJ,IAI5BK,cAAe,WACb,IAAIC,EAASC,IAAoBF,gBAIjC,OAHAC,EAAOE,GAAK,MACZF,EAAO7I,aAAa,SAAU,IAC9B6I,EAAO3G,UAAUC,IAAI,UACd0G,IAKEhJ,EAAyB,CACpCmJ,IACAC,IACAH,IACAZ,oCCjDFjJ,EAAA8D,EAAAC,EAAA,sBAAA8F,IAAA7J,EAAA,GAAAA,EAAA,SAAAiK,EAAAjK,EAAA,IAAAkK,EAAAlK,EAAA,GAyBO,MAAM6J,EAAsB,CACjC7I,WAAY,CAKVmJ,MAAO,CAACjJ,KAAMqE,QAASjE,SAAU,iBAKjC8I,iBAAkB,CAChBlJ,KAAMmJ,SAQVC,oBAAqB,WACfxJ,KAAKyJ,SACPzJ,KAAKyI,gBAQTiB,aAAc,SAASC,GACrBC,IAAoBF,aAAa9H,KAAK5B,KAAM2J,GACxC3J,KAAK6J,SACP7J,KAAKyI,aAAakB,IAUtBlB,aAAc,SAASqB,GACrB,IAAK9J,KAAK0I,YAAa,CACrB1I,KAAK2I,QAAU3I,KAAK6I,gBACpB7I,KAAK2I,QAAQU,MAAQrJ,KAAKqJ,MAC1B,IAAIU,EAAkB/J,KAAKsJ,kBAAoBtJ,KAAKgK,KAIpD,GAHID,GACFE,YAAIF,GAAiBG,YAAYlK,KAAK2I,SAEpCmB,EAAoB,CAItB,IAAIK,EAAeF,YAAIjK,KAAKsJ,kBAAoBtJ,MAC5CoK,EAASH,YAAIH,GAAoBO,WACjCF,EAAaG,aAAkCF,IACjDpK,KAAK2I,QAAQ4B,aAAaT,MAYlCU,UAAW,WAET,OADAxK,KAAKyI,eACEzI,KAAK2I,SAOdD,UAAW,WACT,OAAOjE,QAAQzE,KAAK2I,UAQtBE,cAAe,WAGb,OADIhG,SAAS4H,cAAc,iBAI7BC,cAAe,SAASrB,GAClBrJ,KAAK0I,cACP1I,KAAK2I,QAAQU,MAAQA,kiPC3G1BxF,YAAc,yDAAf,cAAA8G,EACmDvH,eAAAa,GAAAC,SAAAD,GAAAH,EAAA9D,qCAChDwE,kEAEAA,oFAEDuB,eACE6E,GAEA5K,KAAK6K,WAAaC,KAAKC,UAALxB,OAAAyB,OAAA,GAEXJ,EAAOK,OAAOC,UAFH,CAGdC,aAAcP,EAAOK,OAAOE,aAC5BC,MAAOR,EAAOK,OAAOG,MACrBC,MAAOT,EAAOK,OAAOK,cAEvB,KACA,uCAIJ,WACE,OAAKtL,KAAK6K,WAIHpL;;;;oBAISO,KAAKuL;mBACN5D,YACT3H,KAAK4H,KACL5H,KAAK4H,KAAKE,SAAU;;sDAGwB9H,KAAK6K;;;MAb9CpL,0CAmBX,WACEO,KAAK6K,gBAAa/I,6CAGpB,WACE,OAAO0J,SA9C6BC","file":"chunk.457639567ed7d708df26.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/paper-styles/default-theme.js';\n\nimport {PaperInkyFocusBehavior} from '@polymer/paper-behaviors/paper-inky-focus-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design: [Icon\ntoggles](https://www.google.com/design/spec/components/buttons.html#buttons-toggle-buttons)\n\n`paper-icon-button` is a button with an image placed at the center. When the\nuser touches the button, a ripple effect emanates from the center of the button.\n\n`paper-icon-button` does not include a default icon set. To use icons from the\ndefault set, include `PolymerElements/iron-icons/iron-icons.html`, and use the\n`icon` attribute to specify which icon from the icon set to use.\n\n    <paper-icon-button icon=\"menu\"></paper-icon-button>\n\nSee [`iron-iconset`](iron-iconset) for more information about\nhow to use a custom icon set.\n\nExample:\n\n    <script type=\"module\">\n      import '@polymer/iron-icons/iron-icons.js';\n    </script>\n\n    <paper-icon-button icon=\"favorite\"></paper-icon-button>\n    <paper-icon-button src=\"star.png\"></paper-icon-button>\n\nTo use `paper-icon-button` as a link, wrap it in an anchor tag. Since\n`paper-icon-button` will already receive focus, you may want to prevent the\nanchor tag from receiving focus as well by setting its tabindex to -1.\n\n    <a href=\"https://www.polymer-project.org\" tabindex=\"-1\">\n      <paper-icon-button icon=\"polymer\"></paper-icon-button>\n    </a>\n\n### Styling\n\nStyle the button with CSS as you would a normal DOM element. If you are using\nthe icons provided by `iron-icons`, they will inherit the foreground color of\nthe button.\n\n    /* make a red \"favorite\" button *\\/\n    <paper-icon-button icon=\"favorite\" style=\"color: red;\"></paper-icon-button>\n\nBy default, the ripple is the same color as the foreground at 25% opacity. You\nmay customize the color using the `--paper-icon-button-ink-color` custom\nproperty.\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-icon-button-disabled-text` | The color of the disabled button | `--disabled-text-color`\n`--paper-icon-button-ink-color` | Selected/focus ripple color | `--primary-text-color`\n`--paper-icon-button` | Mixin for a button | `{}`\n`--paper-icon-button-disabled` | Mixin for a disabled button | `{}`\n`--paper-icon-button-hover` | Mixin for button on hover | `{}`\n\n@group Paper Elements\n@element paper-icon-button\n@demo demo/index.html\n*/\nPolymer({\n  is: 'paper-icon-button',\n\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        padding: 8px;\n        outline: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        cursor: pointer;\n        z-index: 0;\n        line-height: 1;\n\n        width: 40px;\n        height: 40px;\n\n        /*\n          NOTE: Both values are needed, since some phones require the value to\n          be \\`transparent\\`.\n        */\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n        -webkit-tap-highlight-color: transparent;\n\n        /* Because of polymer/2558, this style has lower specificity than * */\n        box-sizing: border-box !important;\n\n        @apply --paper-icon-button;\n      }\n\n      :host #ink {\n        color: var(--paper-icon-button-ink-color, var(--primary-text-color));\n        opacity: 0.6;\n      }\n\n      :host([disabled]) {\n        color: var(--paper-icon-button-disabled-text, var(--disabled-text-color));\n        pointer-events: none;\n        cursor: auto;\n\n        @apply --paper-icon-button-disabled;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      :host(:hover) {\n        @apply --paper-icon-button-hover;\n      }\n\n      iron-icon {\n        --iron-icon-width: 100%;\n        --iron-icon-height: 100%;\n      }\n    </style>\n\n    <iron-icon id=\"icon\" src=\"[[src]]\" icon=\"[[icon]]\"\n               alt$=\"[[alt]]\"></iron-icon>\n  `,\n\n  hostAttributes: {role: 'button', tabindex: '0'},\n\n  behaviors: [PaperInkyFocusBehavior],\n\n  registered: function() {\n    this._template.setAttribute('strip-whitespace', '');\n  },\n\n  properties: {\n    /**\n     * The URL of an image for the icon. If the src property is specified,\n     * the icon property should not be.\n     */\n    src: {type: String},\n\n    /**\n     * Specifies the icon name or index in the set of icons available in\n     * the icon's icon set. If the icon property is specified,\n     * the src property should not be.\n     */\n    icon: {type: String},\n\n    /**\n     * Specifies the alternate text for the button, for accessibility.\n     */\n    alt: {type: String, observer: '_altChanged'}\n  },\n\n  _altChanged: function(newValue, oldValue) {\n    var label = this.getAttribute('aria-label');\n\n    // Don't stomp over a user-set aria-label.\n    if (!label || oldValue == label) {\n      this.setAttribute('aria-label', newValue);\n    }\n  }\n});\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport {PropertyValues} from 'lit-element/lib/updating-element';\n\nexport interface Observer {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (value: any, old: any): void;\n}\n\nexport const observer = (observer: Observer) =>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (proto: any, propName: PropertyKey) => {\n      // if we haven't wrapped `updated` in this class, do so\n      if (!proto.constructor._observers) {\n        proto.constructor._observers = new Map<PropertyKey, Observer>();\n        const userUpdated = proto.updated;\n        proto.updated = function(changedProperties: PropertyValues) {\n          userUpdated.call(this, changedProperties);\n          changedProperties.forEach((v, k) => {\n            const observer = this.constructor._observers.get(k);\n            if (observer !== undefined) {\n              observer.call(this, this[k], v);\n            }\n          });\n        };\n        // clone any existing observers (superclasses)\n      } else if (!proto.constructor.hasOwnProperty('_observers')) {\n        const observers = proto.constructor._observers;\n        proto.constructor._observers = new Map();\n        observers.forEach(\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (v: any, k: PropertyKey) => proto.constructor._observers.set(k, v));\n      }\n      // set this method\n      proto.constructor._observers.set(propName, observer);\n    };\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * Return an element assigned to a given slot that matches the given selector\n */\n\nimport {matches} from '@material/dom/ponyfill';\n\n/**\n * Determines whether a node is an element.\n *\n * @param node Node to check\n */\nexport const isNodeElement = (node: Node): node is Element => {\n  return node.nodeType === Node.ELEMENT_NODE;\n};\n\nexport function findAssignedElement(slot: HTMLSlotElement, selector: string) {\n  for (const node of slot.assignedNodes({flatten: true})) {\n    if (isNodeElement(node)) {\n      const el = (node as HTMLElement);\n      if (matches(el, selector)) {\n        return el;\n      }\n    }\n  }\n\n  return null;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Constructor<T> = new (...args: any[]) => T;\n\nexport function addHasRemoveClass(element: HTMLElement) {\n  return {\n    addClass: (className: string) => {\n      element.classList.add(className);\n    },\n    removeClass: (className: string) => {\n      element.classList.remove(className);\n    },\n    hasClass: (className: string) => element.classList.contains(className),\n  };\n}\n\nlet supportsPassive = false;\nconst fn = () => { /* empty listener */ };\nconst optionsBlock: AddEventListenerOptions = {\n  get passive() {\n    supportsPassive = true;\n    return false;\n  }\n};\ndocument.addEventListener('x', fn, optionsBlock);\ndocument.removeEventListener('x', fn);\n/**\n * Do event listeners suport the `passive` option?\n */\nexport const supportsPassiveEventListener = supportsPassive;\n\nexport const deepActiveElementPath = (doc = window.document): Element[] => {\n  let activeElement = doc.activeElement;\n  const path: Element[] = [];\n\n  if (!activeElement) {\n    return path;\n  }\n\n  while (activeElement) {\n    path.push(activeElement);\n    if (activeElement.shadowRoot) {\n      activeElement = activeElement.shadowRoot.activeElement;\n    } else {\n      break;\n    }\n  }\n\n  return path;\n};\n\nexport const doesElementContainFocus = (element: HTMLElement): boolean => {\n  const activePath = deepActiveElementPath();\n\n  if (!activePath.length) {\n    return false;\n  }\n\n  const deepActiveElement = activePath[activePath.length - 1];\n  const focusEv =\n      new Event('check-if-focused', {bubbles: true, composed: true});\n  let composedPath: EventTarget[] = [];\n  const listener = (ev: Event) => {\n    composedPath = ev.composedPath();\n  };\n\n  document.body.addEventListener('check-if-focused', listener);\n  deepActiveElement.dispatchEvent(focusEv);\n  document.body.removeEventListener('check-if-focused', listener);\n\n  return composedPath.indexOf(element) !== -1;\n};\n","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport {MDCFoundation} from '@material/base';\nimport {LitElement} from 'lit-element';\n\nimport {Constructor} from './utils.js';\nexport {observer} from './observer.js';\nexport {addHasRemoveClass} from './utils.js';\nexport * from '@material/base/types.js';\n\nexport abstract class BaseElement extends LitElement {\n  /**\n   * Root element for MDC Foundation usage.\n   *\n   * Define in your component with the `@query` decorator\n   */\n  protected abstract mdcRoot: HTMLElement;\n\n  /**\n   * Return the foundation class for this component\n   */\n  protected abstract readonly mdcFoundationClass: Constructor<MDCFoundation>;\n\n  /**\n   * An instance of the MDC Foundation class to attach to the root element\n   */\n  protected abstract mdcFoundation: MDCFoundation;\n\n  /**\n   * Create the adapter for the `mdcFoundation`.\n   *\n   * Override and return an object with the Adapter's functions implemented:\n   *\n   *    {\n   *      addClass: () => {},\n   *      removeClass: () => {},\n   *      ...\n   *    }\n   */\n  protected abstract createAdapter(): {}\n\n  /**\n   * Create and attach the MDC Foundation to the instance\n   */\n  protected createFoundation() {\n    if (this.mdcFoundation !== undefined) {\n      this.mdcFoundation.destroy();\n    }\n    this.mdcFoundation = new this.mdcFoundationClass(this.createAdapter());\n    this.mdcFoundation.init();\n  }\n\n  protected firstUpdated() {\n    this.createFoundation();\n  }\n}\n","interface LoadedCodeMirror {\n  codeMirror: any;\n  codeMirrorCss: any;\n}\n\nlet loaded: Promise<LoadedCodeMirror>;\n\nexport const loadCodeMirror = async (): Promise<LoadedCodeMirror> => {\n  if (!loaded) {\n    loaded = import(/* webpackChunkName: \"codemirror\" */ \"./codemirror\");\n  }\n  return loaded;\n};\n","import { Editor } from \"codemirror\";\nimport {\n  customElement,\n  property,\n  PropertyValues,\n  UpdatingElement,\n} from \"lit-element\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { loadCodeMirror } from \"../resources/codemirror.ondemand\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"editor-save\": undefined;\n  }\n}\n\n@customElement(\"ha-code-editor\")\nexport class HaCodeEditor extends UpdatingElement {\n  public codemirror?: Editor;\n\n  @property() public mode?: string;\n\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ type: Boolean }) public readOnly = false;\n\n  @property() public rtl = false;\n\n  @property() public error = false;\n\n  @property() private _value = \"\";\n\n  public set value(value: string) {\n    this._value = value;\n  }\n\n  public get value(): string {\n    return this.codemirror ? this.codemirror.getValue() : this._value;\n  }\n\n  public get hasComments(): boolean {\n    return !!this.shadowRoot!.querySelector(\"span.cm-comment\");\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (!this.codemirror) {\n      return;\n    }\n    this.codemirror.refresh();\n    if (this.autofocus !== false) {\n      this.codemirror.focus();\n    }\n  }\n\n  protected update(changedProps: PropertyValues): void {\n    super.update(changedProps);\n\n    if (!this.codemirror) {\n      return;\n    }\n\n    if (changedProps.has(\"mode\")) {\n      this.codemirror.setOption(\"mode\", this.mode);\n    }\n    if (changedProps.has(\"autofocus\")) {\n      this.codemirror.setOption(\"autofocus\", this.autofocus !== false);\n    }\n    if (changedProps.has(\"_value\") && this._value !== this.value) {\n      this.codemirror.setValue(this._value);\n    }\n    if (changedProps.has(\"rtl\")) {\n      this.codemirror.setOption(\"gutters\", this._calcGutters());\n      this._setScrollBarDirection();\n    }\n    if (changedProps.has(\"error\")) {\n      this.classList.toggle(\"error-state\", this.error);\n    }\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._load();\n  }\n\n  private async _load(): Promise<void> {\n    const loaded = await loadCodeMirror();\n\n    const codeMirror = loaded.codeMirror;\n\n    const shadowRoot = this.attachShadow({ mode: \"open\" });\n\n    shadowRoot!.innerHTML = `\n    <style>\n      ${loaded.codeMirrorCss}\n      .CodeMirror {\n        height: var(--code-mirror-height, auto);\n        direction: var(--code-mirror-direction, ltr);\n      }\n      .CodeMirror-scroll {\n        max-height: var(--code-mirror-max-height, --code-mirror-height);\n      }\n      .CodeMirror-gutters {\n        border-right: 1px solid var(--paper-input-container-color, var(--secondary-text-color));\n        background-color: var(--paper-dialog-background-color, var(--primary-background-color));\n        transition: 0.2s ease border-right;\n      }\n      :host(.error-state) .CodeMirror-gutters {\n        border-color: var(--error-state-color, red);\n      }\n      .CodeMirror-focused .CodeMirror-gutters {\n        border-right: 2px solid var(--paper-input-container-focus-color, var(--primary-color));\n      }\n      .CodeMirror-linenumber {\n        color: var(--paper-dialog-color, var(--primary-text-color));\n      }\n      .rtl .CodeMirror-vscrollbar {\n        right: auto;\n        left: 0px;\n      }\n      .rtl-gutter {\n        width: 20px;\n      }\n    </style>`;\n\n    this.codemirror = codeMirror(shadowRoot, {\n      value: this._value,\n      lineNumbers: true,\n      tabSize: 2,\n      mode: this.mode,\n      autofocus: this.autofocus !== false,\n      viewportMargin: Infinity,\n      readOnly: this.readOnly,\n      extraKeys: {\n        Tab: \"indentMore\",\n        \"Shift-Tab\": \"indentLess\",\n      },\n      gutters: this._calcGutters(),\n    });\n    this._setScrollBarDirection();\n    this.codemirror!.on(\"changes\", () => this._onChange());\n  }\n\n  private _onChange(): void {\n    const newValue = this.value;\n    if (newValue === this._value) {\n      return;\n    }\n    this._value = newValue;\n    fireEvent(this, \"value-changed\", { value: this._value });\n  }\n\n  private _calcGutters(): string[] {\n    return this.rtl ? [\"rtl-gutter\", \"CodeMirror-linenumbers\"] : [];\n  }\n\n  private _setScrollBarDirection(): void {\n    if (this.codemirror) {\n      this.codemirror.getWrapperElement().classList.toggle(\"rtl\", this.rtl);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-code-editor\": HaCodeEditor;\n  }\n}\n","import \"@material/mwc-dialog\";\nimport type { Dialog } from \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { css, CSSResult, customElement, html } from \"lit-element\";\nimport type { Constructor, HomeAssistant } from \"../types\";\n\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <paper-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    icon=\"hass:close\"\n    dialogAction=\"close\"\n    class=\"close_button\"\n  ></paper-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronButtonState} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\n\nimport {PaperRippleBehavior} from './paper-ripple-behavior.js';\n\n/**\n * `PaperInkyFocusBehavior` implements a ripple when the element has keyboard\n * focus.\n *\n * @polymerBehavior PaperInkyFocusBehavior\n */\nexport const PaperInkyFocusBehaviorImpl = {\n  observers: ['_focusedChanged(receivedFocusFromKeyboard)'],\n\n  _focusedChanged: function(receivedFocusFromKeyboard) {\n    if (receivedFocusFromKeyboard) {\n      this.ensureRipple();\n    }\n    if (this.hasRipple()) {\n      this._ripple.holdDown = receivedFocusFromKeyboard;\n    }\n  },\n\n  _createRipple: function() {\n    var ripple = PaperRippleBehavior._createRipple();\n    ripple.id = 'ink';\n    ripple.setAttribute('center', '');\n    ripple.classList.add('circle');\n    return ripple;\n  }\n};\n\n/** @polymerBehavior */\nexport const PaperInkyFocusBehavior = [\n  IronButtonState,\n  IronControlState,\n  PaperRippleBehavior,\n  PaperInkyFocusBehaviorImpl\n];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-ripple/paper-ripple.js';\n\nimport {IronButtonStateImpl} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * `PaperRippleBehavior` dynamically implements a ripple when the element has\n * focus via pointer or keyboard.\n *\n * NOTE: This behavior is intended to be used in conjunction with and after\n * `IronButtonState` and `IronControlState`.\n *\n * @polymerBehavior PaperRippleBehavior\n */\nexport const PaperRippleBehavior = {\n  properties: {\n    /**\n     * If true, the element will not produce a ripple effect when interacted\n     * with via the pointer.\n     */\n    noink: {type: Boolean, observer: '_noinkChanged'},\n\n    /**\n     * @type {Element|undefined}\n     */\n    _rippleContainer: {\n      type: Object,\n    }\n  },\n\n  /**\n   * Ensures a `<paper-ripple>` element is available when the element is\n   * focused.\n   */\n  _buttonStateChanged: function() {\n    if (this.focused) {\n      this.ensureRipple();\n    }\n  },\n\n  /**\n   * In addition to the functionality provided in `IronButtonState`, ensures\n   * a ripple effect is created when the element is in a `pressed` state.\n   */\n  _downHandler: function(event) {\n    IronButtonStateImpl._downHandler.call(this, event);\n    if (this.pressed) {\n      this.ensureRipple(event);\n    }\n  },\n\n  /**\n   * Ensures this element contains a ripple effect. For startup efficiency\n   * the ripple effect is dynamically on demand when needed.\n   * @param {!Event=} optTriggeringEvent (optional) event that triggered the\n   * ripple.\n   */\n  ensureRipple: function(optTriggeringEvent) {\n    if (!this.hasRipple()) {\n      this._ripple = this._createRipple();\n      this._ripple.noink = this.noink;\n      var rippleContainer = this._rippleContainer || this.root;\n      if (rippleContainer) {\n        dom(rippleContainer).appendChild(this._ripple);\n      }\n      if (optTriggeringEvent) {\n        // Check if the event happened inside of the ripple container\n        // Fall back to host instead of the root because distributed text\n        // nodes are not valid event targets\n        var domContainer = dom(this._rippleContainer || this);\n        var target = dom(optTriggeringEvent).rootTarget;\n        if (domContainer.deepContains(/** @type {Node} */ (target))) {\n          this._ripple.uiDownAction(optTriggeringEvent);\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the `<paper-ripple>` element used by this element to create\n   * ripple effects. The element's ripple is created on demand, when\n   * necessary, and calling this method will force the\n   * ripple to be created.\n   */\n  getRipple: function() {\n    this.ensureRipple();\n    return this._ripple;\n  },\n\n  /**\n   * Returns true if this element currently contains a ripple effect.\n   * @return {boolean}\n   */\n  hasRipple: function() {\n    return Boolean(this._ripple);\n  },\n\n  /**\n   * Create the element's ripple effect via creating a `<paper-ripple>`.\n   * Override this method to customize the ripple element.\n   * @return {!PaperRippleElement} Returns a `<paper-ripple>` element.\n   */\n  _createRipple: function() {\n    var element = /** @type {!PaperRippleElement} */ (\n        document.createElement('paper-ripple'));\n    return element;\n  },\n\n  _noinkChanged: function(noink) {\n    if (this.hasRipple()) {\n      this._ripple.noink = noink;\n    }\n  }\n};\n","import {\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../../components/ha-code-editor\";\nimport { createCloseHeading } from \"../../components/ha-dialog\";\nimport { haStyleDialog } from \"../../resources/styles\";\nimport { HomeAssistant } from \"../../types\";\nimport { ZHADeviceZigbeeInfoDialogParams } from \"./show-dialog-zha-device-zigbee-info\";\n\n@customElement(\"dialog-zha-device-zigbee-info\")\nclass DialogZHADeviceZigbeeInfo extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _signature: any;\n\n  public async showDialog(\n    params: ZHADeviceZigbeeInfoDialogParams\n  ): Promise<void> {\n    this._signature = JSON.stringify(\n      {\n        ...params.device.signature,\n        manufacturer: params.device.manufacturer,\n        model: params.device.model,\n        class: params.device.quirk_class,\n      },\n      null,\n      2\n    );\n  }\n\n  protected render(): TemplateResult {\n    if (!this._signature) {\n      return html``;\n    }\n\n    return html`\n      <ha-dialog\n        open\n        hideActions\n        @closing=\"${this._close}\"\n        .heading=${createCloseHeading(\n          this.hass,\n          this.hass.localize(`ui.dialogs.zha_device_info.device_signature`)\n        )}\n      >\n        <ha-code-editor mode=\"yaml\" readonly .value=${this._signature}>\n        </ha-code-editor>\n      </ha-dialog>\n    `;\n  }\n\n  private _close(): void {\n    this._signature = undefined;\n  }\n\n  static get styles(): CSSResult {\n    return haStyleDialog;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-zha-device-zigbee-info\": DialogZHADeviceZigbeeInfo;\n  }\n}\n"],"sourceRoot":""}