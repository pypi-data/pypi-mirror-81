{"version":3,"sources":["webpack:///./src/common/dom/dynamic-element-directive.ts","webpack:///./src/dialogs/generic/show-dialog-box.ts","webpack:///./src/components/ha-switch.ts","webpack:///./src/components/ha-dialog.ts","webpack:///./src/components/ha-icon-input.ts","webpack:///./src/panels/config/helpers/dialog-helper-detail.ts"],"names":["dynamicElement","directive","tag","properties","part","NodePart","Error","element","value","undefined","toUpperCase","tagName","document","createElement","Object","entries","forEach","_ref3","_ref4","_slicedToArray","key","setValue","_ref","_ref2","__webpack_require__","d","__webpack_exports__","showAlertDialog","showConfirmationDialog","showPromptDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","loadGenericDialog","Promise","all","e","then","bind","showDialogHelper","dialogParams","extra","resolve","origCancel","cancel","origConfirm","confirm","fireEvent","dialogTag","dialogImport","assign","prompt","out","confirmation","MwcSwitch","customElements","get","_decorate","customElement","_initialize","_MwcSwitch","HaSwitch","_MwcSwitch2","_inherits","_super","_createSuper","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","F","kind","decorators","property","type","Boolean","query","_this2","_get","_getPrototypeOf","prototype","style","setProperty","classList","toggle","_slot","assignedNodes","addEventListener","haptic","forwardHaptic","html","_templateObject","ripple","interactionNode","_haChangeHandler","static","css","_templateObject2","mdcFoundation","handleChange","checked","formElement","MwcDialog","createCloseHeading","hass","title","localize","_MwcDialog","_MwcDialog2","HaDialog","_LitElement","_LitElement2","HaIconInput","attribute","label","placeholder","_valueChanged","disabled","errorMessage","ev","detail","bubbles","composed","_templateObject3","LitElement","HELPERS","input_boolean","createInputBoolean","input_text","createInputText","input_number","createInputNumber","input_datetime","createInputDateTime","input_select","createInputSelect","DialogHelperDetail","_showDialog","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","_platform","_item","_opened","updateComplete","stop","_error","closeDialog","classMap","button-left","item","new","_createItem","_submitting","_goBack","_templateObject4","keys","map","platform","isLoaded","isComponentLoaded","_templateObject5","_platformPicked","_handleEnter","domainIcon","_templateObject6","_createItem2","_callee2","_context2","abrupt","t0","message","finish","keyCode","stopPropagation","preventDefault","currentTarget","_focusForm","_focusForm2","_callee3","_this$_form","_context3","_form","lastElementChild","focus","haStyleDialog","_templateObject7"],"mappings":"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","file":"chunk.7a08248fce571a43d1c8.js","sourcesContent":["import { directive, NodePart, Part } from \"lit-html\";\n\nexport const dynamicElement = directive(\n  (tag: string, properties?: { [key: string]: any }) => (part: Part): void => {\n    if (!(part instanceof NodePart)) {\n      throw new Error(\n        \"dynamicElementDirective can only be used in content bindings\"\n      );\n    }\n\n    let element = part.value as HTMLElement | undefined;\n\n    if (\n      element !== undefined &&\n      tag.toUpperCase() === (element as HTMLElement).tagName\n    ) {\n      if (properties) {\n        Object.entries(properties).forEach(([key, value]) => {\n          element![key] = value;\n        });\n      }\n      return;\n    }\n\n    element = document.createElement(tag);\n    if (properties) {\n      Object.entries(properties).forEach(([key, value]) => {\n        element![key] = value;\n      });\n    }\n    part.setValue(element);\n  }\n);\n","import { TemplateResult } from \"lit-html\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\ninterface BaseDialogParams {\n  confirmText?: string;\n  text?: string | TemplateResult;\n  title?: string;\n}\n\nexport interface AlertDialogParams extends BaseDialogParams {\n  confirm?: () => void;\n}\n\nexport interface ConfirmationDialogParams extends BaseDialogParams {\n  dismissText?: string;\n  confirm?: () => void;\n  cancel?: () => void;\n}\n\nexport interface PromptDialogParams extends BaseDialogParams {\n  inputLabel?: string;\n  inputType?: string;\n  defaultValue?: string;\n  confirm?: (out?: string) => void;\n}\n\nexport interface DialogParams\n  extends ConfirmationDialogParams,\n    PromptDialogParams {\n  confirm?: (out?: string) => void;\n  confirmation?: boolean;\n  prompt?: boolean;\n}\n\nexport const loadGenericDialog = () =>\n  import(/* webpackChunkName: \"confirmation\" */ \"./dialog-box\");\n\nconst showDialogHelper = (\n  element: HTMLElement,\n  dialogParams: DialogParams,\n  extra?: {\n    confirmation?: DialogParams[\"confirmation\"];\n    prompt?: DialogParams[\"prompt\"];\n  }\n) =>\n  new Promise((resolve) => {\n    const origCancel = dialogParams.cancel;\n    const origConfirm = dialogParams.confirm;\n\n    fireEvent(element, \"show-dialog\", {\n      dialogTag: \"dialog-box\",\n      dialogImport: loadGenericDialog,\n      dialogParams: {\n        ...dialogParams,\n        ...extra,\n        cancel: () => {\n          resolve(extra?.prompt ? null : false);\n          if (origCancel) {\n            origCancel();\n          }\n        },\n        confirm: (out) => {\n          resolve(extra?.prompt ? out : true);\n          if (origConfirm) {\n            origConfirm(out);\n          }\n        },\n      },\n    });\n  });\n\nexport const showAlertDialog = (\n  element: HTMLElement,\n  dialogParams: AlertDialogParams\n) => showDialogHelper(element, dialogParams);\n\nexport const showConfirmationDialog = (\n  element: HTMLElement,\n  dialogParams: ConfirmationDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { confirmation: true }) as Promise<\n    boolean\n  >;\n\nexport const showPromptDialog = (\n  element: HTMLElement,\n  dialogParams: PromptDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { prompt: true }) as Promise<\n    null | string\n  >;\n","import { ripple } from \"@material/mwc-ripple/ripple-directive\";\nimport \"@material/mwc-switch\";\nimport type { Switch } from \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  property,\n  query,\n} from \"lit-element\";\nimport { forwardHaptic } from \"../data/haptics\";\nimport { Constructor } from \"../types\";\n\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  // Generate a haptic vibration.\n  // Only set to true if the new value of the switch is applied right away when toggling.\n  // Do not add haptic when a user is required to press save.\n  @property({ type: Boolean }) public haptic = false;\n\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\n      \"--mdc-theme-secondary\",\n      \"var(--switch-checked-color)\"\n    );\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n    this.addEventListener(\"change\", () => {\n      if (this.haptic) {\n        forwardHaptic(\"light\");\n      }\n    });\n  }\n\n  protected render() {\n    return html`\n      <div class=\"mdc-switch\">\n        <div class=\"mdc-switch__track\"></div>\n        <div\n          class=\"mdc-switch__thumb-underlay\"\n          .ripple=\"${ripple({\n            interactionNode: this,\n          })}\"\n        >\n          <div class=\"mdc-switch__thumb\">\n            <input\n              type=\"checkbox\"\n              id=\"basic-switch\"\n              class=\"mdc-switch__native-control\"\n              role=\"switch\"\n              @change=\"${this._haChangeHandler}\"\n            />\n          </div>\n        </div>\n      </div>\n      <label for=\"basic-switch\"><slot></slot></label>\n    `;\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\n          background-color: var(--switch-checked-button-color);\n          border-color: var(--switch-checked-button-color);\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__track {\n          background-color: var(--switch-checked-track-color);\n          border-color: var(--switch-checked-track-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--switch-unchecked-button-color);\n          border-color: var(--switch-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--switch-unchecked-track-color);\n          border-color: var(--switch-unchecked-track-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n\n  private _haChangeHandler(e: Event) {\n    this.mdcFoundation.handleChange(e);\n    // catch \"click\" event and sync properties\n    this.checked = this.formElement.checked;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","import \"@material/mwc-dialog\";\nimport type { Dialog } from \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { css, CSSResult, customElement, html } from \"lit-element\";\nimport type { Constructor, HomeAssistant } from \"../types\";\n\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <paper-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    icon=\"hass:close\"\n    dialogAction=\"close\"\n    class=\"close_button\"\n  ></paper-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport \"./ha-icon\";\n\n@customElement(\"ha-icon-input\")\nexport class HaIconInput extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public placeholder?: string;\n\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-input\n        .value=${this.value}\n        .label=${this.label}\n        .placeholder=${this.placeholder}\n        @value-changed=${this._valueChanged}\n        .disabled=${this.disabled}\n        auto-validate\n        .errorMessage=${this.errorMessage}\n        pattern=\"^\\\\S+:\\\\S+$\"\n      >\n        ${this.value || this.placeholder\n          ? html`\n              <ha-icon .icon=${this.value || this.placeholder} slot=\"suffix\">\n              </ha-icon>\n            `\n          : \"\"}\n      </paper-input>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    this.value = ev.detail.value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: ev.detail.value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  static get styles() {\n    return css`\n      ha-icon {\n        position: relative;\n        bottom: 4px;\n      }\n    `;\n  }\n}\n","import \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport { dynamicElement } from \"../../../common/dom/dynamic-element-directive\";\nimport { domainIcon } from \"../../../common/entity/domain_icon\";\nimport \"../../../components/ha-dialog\";\nimport { createInputBoolean } from \"../../../data/input_boolean\";\nimport { createInputDateTime } from \"../../../data/input_datetime\";\nimport { createInputNumber } from \"../../../data/input_number\";\nimport { createInputSelect } from \"../../../data/input_select\";\nimport { createInputText } from \"../../../data/input_text\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { Helper } from \"./const\";\nimport \"./forms/ha-input_boolean-form\";\nimport \"./forms/ha-input_datetime-form\";\nimport \"./forms/ha-input_number-form\";\nimport \"./forms/ha-input_select-form\";\nimport \"./forms/ha-input_text-form\";\n\nconst HELPERS = {\n  input_boolean: createInputBoolean,\n  input_text: createInputText,\n  input_number: createInputNumber,\n  input_datetime: createInputDateTime,\n  input_select: createInputSelect,\n};\n\n@customElement(\"dialog-helper-detail\")\nexport class DialogHelperDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _item?: Helper;\n\n  @property() private _opened = false;\n\n  @property() private _platform?: string;\n\n  @property() private _error?: string;\n\n  @property() private _submitting = false;\n\n  @query(\".form\") private _form?: HTMLDivElement;\n\n  public async showDialog(): Promise<void> {\n    this._platform = undefined;\n    this._item = undefined;\n    this._opened = true;\n    await this.updateComplete;\n  }\n\n  public closeDialog(): void {\n    this._opened = false;\n    this._error = \"\";\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-dialog\n        .open=${this._opened}\n        @closing=${this.closeDialog}\n        class=${classMap({ \"button-left\": !this._platform })}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${this._platform\n          ? this.hass.localize(\n              \"ui.panel.config.helpers.dialog.add_platform\",\n              \"platform\",\n              this.hass.localize(\n                `ui.panel.config.helpers.types.${this._platform}`\n              ) || this._platform\n            )\n          : this.hass.localize(\"ui.panel.config.helpers.dialog.add_helper\")}\n      >\n        ${this._platform\n          ? html`\n              <div class=\"form\" @value-changed=${this._valueChanged}>\n                ${this._error\n                  ? html` <div class=\"error\">${this._error}</div> `\n                  : \"\"}\n                ${dynamicElement(`ha-${this._platform}-form`, {\n                  hass: this.hass,\n                  item: this._item,\n                  new: true,\n                })}\n              </div>\n              <mwc-button\n                slot=\"primaryAction\"\n                @click=\"${this._createItem}\"\n                .disabled=${this._submitting}\n              >\n                ${this.hass!.localize(\"ui.panel.config.helpers.dialog.create\")}\n              </mwc-button>\n              <mwc-button\n                slot=\"secondaryAction\"\n                @click=\"${this._goBack}\"\n                .disabled=${this._submitting}\n              >\n                Back\n              </mwc-button>\n            `\n          : html`\n              ${Object.keys(HELPERS).map((platform: string) => {\n                const isLoaded = isComponentLoaded(this.hass, platform);\n                return html`\n                  <div class=\"form\">\n                    <paper-icon-item\n                      .disabled=${!isLoaded}\n                      @click=${this._platformPicked}\n                      @keydown=${this._handleEnter}\n                      .platform=${platform}\n                      dialogInitialFocus\n                    >\n                      <ha-icon\n                        slot=\"item-icon\"\n                        .icon=${domainIcon(platform)}\n                      ></ha-icon>\n                      <span class=\"item-text\">\n                        ${this.hass.localize(\n                          `ui.panel.config.helpers.types.${platform}`\n                        ) || platform}\n                      </span>\n                    </paper-icon-item>\n                    ${!isLoaded\n                      ? html`\n                          <paper-tooltip\n                            >${this.hass.localize(\n                              \"ui.dialogs.helper_settings.platform_not_loaded\",\n                              \"platform\",\n                              platform\n                            )}</paper-tooltip\n                          >\n                        `\n                      : \"\"}\n                  </div>\n                `;\n              })}\n              <mwc-button slot=\"primaryAction\" @click=\"${this.closeDialog}\">\n                ${this.hass!.localize(\"ui.common.cancel\")}\n              </mwc-button>\n            `}\n      </ha-dialog>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    this._item = ev.detail.value;\n  }\n\n  private async _createItem(): Promise<void> {\n    if (!this._platform || !this._item) {\n      return;\n    }\n    this._submitting = true;\n    this._error = \"\";\n    try {\n      await HELPERS[this._platform](this.hass, this._item);\n      this.closeDialog();\n    } catch (err) {\n      this._error = err.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _handleEnter(ev: KeyboardEvent) {\n    if (ev.keyCode !== 13) {\n      return;\n    }\n    ev.stopPropagation();\n    ev.preventDefault();\n    this._platformPicked(ev);\n  }\n\n  private _platformPicked(ev: Event): void {\n    this._platform = (ev.currentTarget! as any).platform;\n    this._focusForm();\n  }\n\n  private async _focusForm(): Promise<void> {\n    await this.updateComplete;\n    (this._form?.lastElementChild as HTMLElement).focus();\n  }\n\n  private _goBack() {\n    this._platform = undefined;\n    this._item = undefined;\n    this._error = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        ha-dialog.button-left {\n          --justify-action-buttons: flex-start;\n        }\n        paper-icon-item {\n          cursor: pointer;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-helper-detail\": DialogHelperDetail;\n  }\n}\n"],"sourceRoot":""}