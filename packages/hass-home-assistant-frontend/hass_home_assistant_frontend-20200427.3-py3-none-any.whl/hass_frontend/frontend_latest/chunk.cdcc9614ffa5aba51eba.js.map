{"version":3,"sources":["webpack:///./src/common/datetime/seconds_to_duration.ts","webpack:///./src/common/entity/timer_time_remaining.ts","webpack:///./src/common/datetime/duration_to_seconds.ts","webpack:///./src/components/ha-label-badge.ts","webpack:///./src/components/entity/ha-state-label-badge.ts","webpack:///./src/panels/lovelace/cards/hui-picture-elements-card.ts"],"names":["__webpack_require__","d","__webpack_exports__","secondsToDuration","leftPad","num","h","Math","floor","m","s","timerTimeRemaining","stateObj","timeRemaining","duration","parts","split","map","Number","durationToSeconds","attributes","remaining","state","now","Date","getTime","madeActive","last_changed","max","HaLabelBadge","_LitElement","[object Object]","args","super","_initialize","this","property","html","classMap","value","big","Boolean","length","icon","image","label","description","css","changedProperties","_get","_getPrototypeOf","prototype","call","has","shadowRoot","getElementById","style","backgroundImage","LitElement","customElements","define","_decorate","customElement","HaStateLabelBadge","F","kind","decorators","key","_connected","startInterval","clearInterval","hass","localize","domain","computeStateDomain","has-unit_of_measurement","_computeValue","_computeIcon","entity_picture","_computeLabel","_timerTimeRemaining","name","computeStateName","unit_of_measurement","computeStateDisplay","language","domainIcon","stateIcon","includes","_clearInterval","apply","arguments","toString","_updateRemaining","undefined","calculateTimerRemaining","window","setInterval","static","HuiPictureElementsCard","entities","entitiesFallback","type","elements","entity","findEntities","top","left","config","Error","camera_image","state_image","Array","isArray","_config","changedProps","el","from","querySelectorAll","oldHass","get","oldConfig","themes","theme","applyThemesOnElement","title","state_filter","camera_view","aspect_ratio","elementConfig","element","createStyledHuiElement"],"mappings":"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","file":"chunk.cdcc9614ffa5aba51eba.js","sourcesContent":["const leftPad = (num: number) => (num < 10 ? `0${num}` : num);\n\nexport default function secondsToDuration(d: number) {\n  const h = Math.floor(d / 3600);\n  const m = Math.floor((d % 3600) / 60);\n  const s = Math.floor((d % 3600) % 60);\n\n  if (h > 0) {\n    return `${h}:${leftPad(m)}:${leftPad(s)}`;\n  }\n  if (m > 0) {\n    return `${m}:${leftPad(s)}`;\n  }\n  if (s > 0) {\n    return \"\" + s;\n  }\n  return null;\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport durationToSeconds from \"../datetime/duration_to_seconds\";\n\nexport const timerTimeRemaining = (stateObj: HassEntity) => {\n  let timeRemaining = durationToSeconds(stateObj.attributes.remaining);\n\n  if (stateObj.state === \"active\") {\n    const now = new Date().getTime();\n    const madeActive = new Date(stateObj.last_changed).getTime();\n    timeRemaining = Math.max(timeRemaining - (now - madeActive) / 1000, 0);\n  }\n\n  return timeRemaining;\n};\n","export default function durationToSeconds(duration: string): number {\n  const parts = duration.split(\":\").map(Number);\n  return parts[0] * 3600 + parts[1] * 60 + parts[2];\n}\n","import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport \"./ha-icon\";\n\nclass HaLabelBadge extends LitElement {\n  @property() public value?: string;\n\n  @property() public icon?: string;\n\n  @property() public label?: string;\n\n  @property() public description?: string;\n\n  @property() public image?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"badge-container\">\n        <div class=\"label-badge\" id=\"badge\">\n          <div\n            class=\"${classMap({\n              value: true,\n              big: Boolean(this.value && this.value.length > 4),\n            })}\"\n          >\n            ${this.icon && !this.value && !this.image\n              ? html` <ha-icon .icon=\"${this.icon}\"></ha-icon> `\n              : \"\"}\n            ${this.value && !this.image\n              ? html` <span>${this.value}</span> `\n              : \"\"}\n          </div>\n          ${this.label\n            ? html`\n                <div\n                  class=\"${classMap({\n                    label: true,\n                    big: this.label.length > 5,\n                  })}\"\n                >\n                  <span>${this.label}</span>\n                </div>\n              `\n            : \"\"}\n        </div>\n        ${this.description\n          ? html` <div class=\"title\">${this.description}</div> `\n          : \"\"}\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      css`\n        .badge-container {\n          display: inline-block;\n          text-align: center;\n          vertical-align: top;\n          padding: var(--ha-label-badge-padding, 0 0 0 0);\n        }\n        .label-badge {\n          position: relative;\n          display: block;\n          margin: 0 auto;\n          width: var(--ha-label-badge-size, 2.5em);\n          text-align: center;\n          height: var(--ha-label-badge-size, 2.5em);\n          line-height: var(--ha-label-badge-size, 2.5em);\n          font-size: var(--ha-label-badge-font-size, 1.5em);\n          border-radius: 50%;\n          border: 0.1em solid var(--ha-label-badge-color, var(--primary-color));\n          color: var(--label-badge-text-color, rgb(76, 76, 76));\n\n          white-space: nowrap;\n          background-color: var(--label-badge-background-color, white);\n          background-size: cover;\n          transition: border 0.3s ease-in-out;\n        }\n        .label-badge .value {\n          font-size: 90%;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n        .label-badge .value.big {\n          font-size: 70%;\n        }\n        .label-badge .label {\n          position: absolute;\n          bottom: -1em;\n          /* Make the label as wide as container+border. (parent_borderwidth / font-size) */\n          left: -0.2em;\n          right: -0.2em;\n          line-height: 1em;\n          font-size: 0.5em;\n        }\n        .label-badge .label span {\n          box-sizing: border-box;\n          max-width: 100%;\n          display: inline-block;\n          background-color: var(--ha-label-badge-color, var(--primary-color));\n          color: var(--ha-label-badge-label-color, white);\n          border-radius: 1em;\n          padding: 9% 16% 8% 16%; /* mostly apitalized text, not much descenders => bit more top margin */\n          font-weight: 500;\n          overflow: hidden;\n          text-transform: uppercase;\n          text-overflow: ellipsis;\n          transition: background-color 0.3s ease-in-out;\n          text-transform: var(--ha-label-badge-label-text-transform, uppercase);\n        }\n        .label-badge .label.big span {\n          font-size: 90%;\n          padding: 10% 12% 7% 12%; /* push smaller text a bit down to center vertically */\n        }\n        .badge-container .title {\n          margin-top: 1em;\n          font-size: var(--ha-label-badge-title-font-size, 0.9em);\n          width: var(--ha-label-badge-title-width, 5em);\n          font-weight: var(--ha-label-badge-title-font-weight, 400);\n          overflow: hidden;\n          text-overflow: ellipsis;\n          line-height: normal;\n        }\n      `,\n    ];\n  }\n\n  protected updated(changedProperties: PropertyValues): void {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"image\")) {\n      this.shadowRoot!.getElementById(\"badge\")!.style.backgroundImage = this\n        .image\n        ? `url(${this.image})`\n        : \"\";\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-label-badge\": HaLabelBadge;\n  }\n}\n\ncustomElements.define(\"ha-label-badge\", HaLabelBadge);\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport secondsToDuration from \"../../common/datetime/seconds_to_duration\";\nimport { computeStateDisplay } from \"../../common/entity/compute_state_display\";\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { domainIcon } from \"../../common/entity/domain_icon\";\nimport { stateIcon } from \"../../common/entity/state_icon\";\nimport { timerTimeRemaining } from \"../../common/entity/timer_time_remaining\";\nimport { HomeAssistant } from \"../../types\";\nimport \"../ha-label-badge\";\n\n@customElement(\"ha-state-label-badge\")\nexport class HaStateLabelBadge extends LitElement {\n  @property() public hass?: HomeAssistant;\n\n  @property() public state?: HassEntity;\n\n  @property() public name?: string;\n\n  @property() public icon?: string;\n\n  @property() public image?: string;\n\n  @property() private _timerTimeRemaining?: number;\n\n  private _connected?: boolean;\n\n  private _updateRemaining?: number;\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    this._connected = true;\n    this.startInterval(this.state);\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this._connected = false;\n    this.clearInterval();\n  }\n\n  protected render(): TemplateResult {\n    const state = this.state;\n\n    if (!state) {\n      return html`\n        <ha-label-badge\n          class=\"warning\"\n          label=\"${this.hass!.localize(\"state_badge.default.error\")}\"\n          icon=\"hass:alert\"\n          description=\"${this.hass!.localize(\n            \"state_badge.default.entity_not_found\"\n          )}\"\n        ></ha-label-badge>\n      `;\n    }\n\n    const domain = computeStateDomain(state);\n\n    return html`\n      <ha-label-badge\n        class=\"${classMap({\n          [domain]: true,\n          \"has-unit_of_measurement\": \"unit_of_measurement\" in state.attributes,\n        })}\"\n        .value=\"${this._computeValue(domain, state)}\"\n        .icon=\"${this.icon ? this.icon : this._computeIcon(domain, state)}\"\n        .image=\"${this.icon\n          ? \"\"\n          : this.image\n          ? this.image\n          : state.attributes.entity_picture}\"\n        .label=\"${this._computeLabel(domain, state, this._timerTimeRemaining)}\"\n        .description=\"${this.name ? this.name : computeStateName(state)}\"\n      ></ha-label-badge>\n    `;\n  }\n\n  protected updated(changedProperties: PropertyValues): void {\n    super.updated(changedProperties);\n\n    if (this._connected && changedProperties.has(\"state\")) {\n      this.startInterval(this.state);\n    }\n  }\n\n  private _computeValue(domain: string, state: HassEntity) {\n    switch (domain) {\n      case \"binary_sensor\":\n      case \"device_tracker\":\n      case \"person\":\n      case \"updater\":\n      case \"sun\":\n      case \"alarm_control_panel\":\n      case \"timer\":\n        return null;\n      case \"sensor\":\n      default:\n        return state.state === \"unknown\"\n          ? \"-\"\n          : state.attributes.unit_of_measurement\n          ? state.state\n          : computeStateDisplay(\n              this.hass!.localize,\n              state,\n              this.hass!.language\n            );\n    }\n  }\n\n  private _computeIcon(domain: string, state: HassEntity) {\n    if (state.state === \"unavailable\") {\n      return null;\n    }\n    switch (domain) {\n      case \"alarm_control_panel\":\n        if (state.state === \"pending\") {\n          return \"hass:clock-fast\";\n        }\n        if (state.state === \"armed_away\") {\n          return \"hass:nature\";\n        }\n        if (state.state === \"armed_home\") {\n          return \"hass:home-variant\";\n        }\n        if (state.state === \"armed_night\") {\n          return \"hass:weather-night\";\n        }\n        if (state.state === \"armed_custom_bypass\") {\n          return \"hass:shield-home\";\n        }\n        if (state.state === \"triggered\") {\n          return \"hass:alert-circle\";\n        }\n        // state == 'disarmed'\n        return domainIcon(domain, state.state);\n      case \"binary_sensor\":\n      case \"device_tracker\":\n      case \"updater\":\n      case \"person\":\n        return stateIcon(state);\n      case \"sun\":\n        return state.state === \"above_horizon\"\n          ? domainIcon(domain)\n          : \"hass:brightness-3\";\n      case \"timer\":\n        return state.state === \"active\" ? \"hass:timer\" : \"hass:timer-off\";\n      default:\n        return null;\n    }\n  }\n\n  private _computeLabel(domain, state, _timerTimeRemaining) {\n    if (\n      state.state === \"unavailable\" ||\n      [\"device_tracker\", \"alarm_control_panel\", \"person\"].includes(domain)\n    ) {\n      // Localize the state with a special state_badge namespace, which has variations of\n      // the state translations that are truncated to fit within the badge label. Translations\n      // are only added for device_tracker, alarm_control_panel and person.\n      return (\n        this.hass!.localize(`state_badge.${domain}.${state.state}`) ||\n        this.hass!.localize(`state_badge.default.${state.state}`) ||\n        state.state\n      );\n    }\n    if (domain === \"timer\") {\n      return secondsToDuration(_timerTimeRemaining);\n    }\n    return state.attributes.unit_of_measurement || null;\n  }\n\n  private clearInterval() {\n    if (this._updateRemaining) {\n      clearInterval(this._updateRemaining);\n      this._updateRemaining = undefined;\n    }\n  }\n\n  private startInterval(stateObj) {\n    this.clearInterval();\n    if (stateObj && computeStateDomain(stateObj) === \"timer\") {\n      this.calculateTimerRemaining(stateObj);\n\n      if (stateObj.state === \"active\") {\n        this._updateRemaining = window.setInterval(\n          () => this.calculateTimerRemaining(this.state),\n          1000\n        );\n      }\n    }\n  }\n\n  private calculateTimerRemaining(stateObj) {\n    this._timerTimeRemaining = timerTimeRemaining(stateObj);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        cursor: pointer;\n      }\n\n      ha-label-badge {\n        --ha-label-badge-color: var(--label-badge-red, #df4c1e);\n      }\n      ha-label-badge.has-unit_of_measurement {\n        --ha-label-badge-label-text-transform: none;\n      }\n\n      ha-label-badge.binary_sensor,\n      ha-label-badge.updater {\n        --ha-label-badge-color: var(--label-badge-blue, #039be5);\n      }\n\n      .red {\n        --ha-label-badge-color: var(--label-badge-red, #df4c1e);\n      }\n\n      .blue {\n        --ha-label-badge-color: var(--label-badge-blue, #039be5);\n      }\n\n      .green {\n        --ha-label-badge-color: var(--label-badge-green, #0da035);\n      }\n\n      .yellow {\n        --ha-label-badge-color: var(--label-badge-yellow, #f4b400);\n      }\n\n      .grey {\n        --ha-label-badge-color: var(--label-badge-grey, var(--paper-grey-500));\n      }\n\n      .warning {\n        --ha-label-badge-color: var(--label-badge-yellow, #fce588);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-state-label-badge\": HaStateLabelBadge;\n  }\n}\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport \"../../../components/ha-card\";\nimport { HomeAssistant } from \"../../../types\";\nimport { findEntities } from \"../common/find-entites\";\nimport { LovelaceElement, LovelaceElementConfig } from \"../elements/types\";\nimport { LovelaceCard } from \"../types\";\nimport { createStyledHuiElement } from \"./picture-elements/create-styled-hui-element\";\nimport { PictureElementsCardConfig } from \"./types\";\n\n@customElement(\"hui-picture-elements-card\")\nclass HuiPictureElementsCard extends LitElement implements LovelaceCard {\n  @property() public hass?: HomeAssistant;\n\n  public static getStubConfig(\n    hass: HomeAssistant,\n    entities: string[],\n    entitiesFallback: string[]\n  ): PictureElementsCardConfig {\n    const maxEntities = 1;\n    const foundEntities = findEntities(\n      hass,\n      maxEntities,\n      entities,\n      entitiesFallback,\n      [\"sensor\", \"binary_sensor\"]\n    );\n\n    return {\n      type: \"picture-elements\",\n      elements: [\n        {\n          type: \"state-badge\",\n          entity: foundEntities[0] || \"\",\n          style: {\n            top: \"32%\",\n            left: \"40%\",\n          },\n        },\n      ],\n      image: \"https://demo.home-assistant.io/stub_config/floorplan.png\",\n    };\n  }\n\n  @property() private _config?: PictureElementsCardConfig;\n\n  public getCardSize(): number {\n    return 4;\n  }\n\n  public setConfig(config: PictureElementsCardConfig): void {\n    if (!config) {\n      throw new Error(\"Invalid Configuration\");\n    } else if (\n      !(config.image || config.camera_image || config.state_image) ||\n      (config.state_image && !config.entity)\n    ) {\n      throw new Error(\"Invalid Configuration: image required\");\n    } else if (!Array.isArray(config.elements)) {\n      throw new Error(\"Invalid Configuration: elements required\");\n    }\n\n    this._config = config;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._config || !this.hass) {\n      return;\n    }\n\n    if (changedProps.has(\"hass\")) {\n      for (const el of Array.from(\n        this.shadowRoot!.querySelectorAll(\"#root > *\")\n      )) {\n        const element = el as LovelaceElement;\n        element.hass = this.hass;\n      }\n    }\n\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProps.get(\"_config\") as\n      | PictureElementsCardConfig\n      | undefined;\n\n    if (\n      !oldHass ||\n      !oldConfig ||\n      oldHass.themes !== this.hass.themes ||\n      oldConfig.theme !== this._config.theme\n    ) {\n      applyThemesOnElement(this, this.hass.themes, this._config.theme);\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    return html`\n      <ha-card .header=${this._config.title}>\n        <div id=\"root\">\n          <hui-image\n            .hass=${this.hass}\n            .image=${this._config.image}\n            .stateImage=${this._config.state_image}\n            .stateFilter=${this._config.state_filter}\n            .cameraImage=${this._config.camera_image}\n            .cameraView=${this._config.camera_view}\n            .entity=${this._config.entity}\n            .aspectRatio=${this._config.aspect_ratio}\n          ></hui-image>\n          ${this._config.elements.map(\n            (elementConfig: LovelaceElementConfig) => {\n              const element = createStyledHuiElement(elementConfig);\n              element.hass = this.hass;\n\n              return element;\n            }\n          )}\n        </div>\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      #root {\n        position: relative;\n      }\n\n      .element {\n        position: absolute;\n        transform: translate(-50%, -50%);\n      }\n\n      ha-card {\n        overflow: hidden;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-picture-elements-card\": HuiPictureElementsCard;\n  }\n}\n"],"sourceRoot":""}