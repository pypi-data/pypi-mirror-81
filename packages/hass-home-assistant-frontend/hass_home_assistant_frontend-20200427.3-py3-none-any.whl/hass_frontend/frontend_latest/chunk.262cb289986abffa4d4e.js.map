{"version":3,"sources":["webpack:///./src/data/graph.ts","webpack:///./src/panels/lovelace/common/graph/coordinates.ts","webpack:///./src/panels/lovelace/common/graph/get-path.ts","webpack:///./src/panels/lovelace/components/hui-graph-base.ts","webpack:///./src/panels/lovelace/header-footer/hui-graph-header-footer.ts"],"names":["average","items","reduce","sum","entry","parseFloat","state","length","lastValue","coordinates","history","hours","width","detail","forEach","item","Number","filter","isNaN","min","Math","map","max","now","Date","getTime","res","point","age","last_changed","key","abs","floor","round","toString","push","coords","yRatio","xRatio","isFinite","first","Boolean","last","getCoords","i","offset","depth","subItem","index","x","y","height","calcPoints","midPoint","_Ax","_Ay","_Bx","_By","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","d","kind","decorators","property","value","html","_path","svg","changedProps","has","next","Z","path","coord","getPath","static","css","LitElement","HuiGraphHeaderFooter","hui_graph_header_footer_decorate","config","entity","split","Error","cardConfig","Object","assign","hours_to_show","_config","hass","_coordinates","hasConfigOrEntityChanged","_fetching","oldConfig","get","_stateHistory","_getCoordinates","_date","async","_this$_stateHistory","endTime","startTime","setHours","getHours","stateHistory","fetchRecent"],"mappings":"0HAAO,MCEDA,EAAWC,GAEbA,EAAMC,OAAO,CAACC,EAAKC,IAAUD,EAAME,WAAWD,EAAME,OAAQ,GAC5DL,EAAMM,OAIJC,EAAaP,GACVI,WAAWJ,EAAMA,EAAMM,OAAS,GAAGD,QAAU,EAkDzCG,EAAc,CACzBC,EACAC,EACAC,EACAC,KAEAH,EAAQI,QAASC,IACfA,EAAKT,MAAQU,OAAOD,EAAKT,SAE3BI,EAAUA,EAAQO,OAAQF,IAAUC,OAAOE,MAAMH,EAAKT,QAEtD,MAAMa,EAAMC,KAAKD,OAAOT,EAAQW,IAAKN,GAASA,EAAKT,QAC7CgB,EAAMF,KAAKE,OAAOZ,EAAQW,IAAKN,GAASA,EAAKT,QAC7CiB,GAAM,IAAIC,MAAOC,UAEjBvB,EAAS,CAACwB,EAAKX,EAAMY,KACzB,MAAMC,EAAML,EAAM,IAAIC,KAAKT,EAAKc,cAAcJ,UAE9C,IAAIK,EAAMV,KAAKW,IAAIH,EAAG,KAAmBjB,GAWzC,OAVIgB,GACFG,EAAgC,IAAzBA,EAAMV,KAAKY,MAAMF,IACxBA,EAAMd,QAA+B,GAAvBI,KAAKa,MAAMH,EAAM,KAAUI,WAAW,KAEpDJ,EAAMV,KAAKY,MAAMF,GAEdJ,EAAII,KACPJ,EAAII,GAAO,IAEbJ,EAAII,GAAKK,KAAKpB,GACPW,GAUT,GAPAhB,EAAUA,EAAQR,OAAO,CAACwB,EAAKX,IAASb,EAAOwB,EAAKX,GAAM,GAAQ,IAC9DF,EAAS,IACXH,EAAUA,EAAQW,IAAKjB,GACrBA,EAAMF,OAAO,CAACwB,EAAKX,IAASb,EAAOwB,EAAKX,GAAM,GAAO,MAIpDL,EAAQH,OAIb,MA1FiB,EACjBG,EACAC,EACAC,EACAC,EACAM,EACAG,KAEA,MAAMc,EAAS,GAEf,IAAIC,GAAUf,EAAMH,GADL,GAEfkB,EAAoB,IAAXA,EAAeA,EAFT,GAGf,IAAIC,EAAS1B,GAASD,GAAoB,IAAXE,EAAe,EAAI,IAClDyB,EAASC,SAASD,GAAUA,EAAS1B,EAErC,MAAM4B,EAAQ9B,EAAQO,OAAOwB,SAAS,GACtC,IAAIC,EAAO,CAAC1C,EAAQwC,GAAQhC,EAAUgC,IAEtC,MAAMG,EAAY,CAAC5B,EAAa6B,EAAWC,EAAS,EAAGC,EAAQ,KAC7D,GAAIA,EAAQ,GAAK/B,EACf,OAAOA,EAAKD,QAAQ,CAACiC,EAASC,IAC5BL,EAAUI,EAASH,EAAGI,EAAOF,EAAQ,IAIzC,MAAMG,EAAIX,GAAUM,EAAIC,EAAS,GAE7B9B,IACF2B,EAAO,CAAC1C,EAAQe,GAAOP,EAAUO,KAEnC,MAAMmC,EACJC,OAA6BpC,EAAO2B,EAAK,GAAKA,EAAK,IAAMvB,GAAOkB,EAClE,OAAOD,EAAOD,KAAK,CAACc,EAAGC,KAGzB,IAAK,IAAIN,EAAI,EAAGA,EAAIlC,EAAQH,OAAQqC,GAAK,EACvCD,EAAUjC,EAAQkC,GAAIA,EAAG,EAAG/B,GAQ9B,OALsB,IAAlBuB,EAAO7B,SACT6B,EAAO,GAAK,CAACxB,EAAOwB,EAAO,GAAG,KAGhCA,EAAOD,KAAK,CAACvB,EAAOwB,EAAOA,EAAO7B,OAAS,GAAG,KACvC6B,GA8CAgB,CAAW1C,EAASC,EAAOC,EAAOC,EAAQM,EAAKG,iBCvGxD,MAAM+B,EAAW,CACfC,EACAC,EACAC,EACAC,KAIA,MAAO,EAFMH,EAAME,GAAO,EAAIA,GACjBD,EAAME,GAAO,EAAIA,i9OCQhCC,CAAA,CADCC,YAAc,mBACf,SAAAC,EAAAC,GAAA,OAAAC,EADA,cAAAD,EAC6CE,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,QAA7CC,EAAA,EAAAC,KAAA,QAAAC,WAAA,CACGC,eADHxC,IAAA,cAAAyC,WAAA,IAAAH,KAAA,QAAAC,WAAA,CAGGC,eAHHxC,IAAA,QAAAyC,WAAA,IAAAH,KAAA,SAAAtC,IAAA,SAAAyC,MAKE,WACE,OAAOC;QACHN,KAAKO,MACHC;;;;;;qBAMWR,KAAKO;;;;;;;;gCH7BC;;;oBGwCPP,KAAKO;;;;;gBAMfC;QA/BV,CAAAN,KAAA,SAAAtC,IAAA,UAAAyC,MAmCE,SAAkBI,GACXT,KAAKzD,aAINkE,EAAaC,IAAI,iBACnBV,KAAKO,MD7CarC,KACtB,IAAKA,EAAO7B,OACV,MAAO,GAGT,IAAIsE,EACAC,EAGJ,IAAIC,EAAO,GACPrC,EAAON,EAAOnB,OAAOwB,SAAS,GAElCsC,QAAarC,EALH,MAKcA,EAJd,KAMV,IAAK,MAAMsC,KAAS5C,EAClByC,EAAOG,EAEPD,QADAD,EAAIzB,EAASX,EATL,GAScA,EARd,GAQuBmC,EATvB,GASgCA,EARhC,KADA,MAUYC,EATZ,KAURC,QAAaF,EAXL,MAWgBA,EAVhB,KAWRnC,EAAOmC,EAIT,OADAE,OAAYF,EAfF,MAecA,EAdd,MCqCOI,CAAQf,KAAKzD,gBAzChC,CAAA2D,KAAA,MAAAc,QAAA,EAAApD,IAAA,SAAAyC,MA6CE,WACE,OAAOY;;;;;;;;WA9CuBC,u2CCS3B,IAAMC,sqMAAbC,CAAA,CADC3B,YAAc,4BACf,SAAAC,EAAAC,GAAA,OAAAC,EADA,cAAAD,EAEkCE,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,QADlCC,EAAA,EAAAC,KAAA,SAAAc,QAAA,EAAApD,IAAA,gBAAAyC,MAEE,WACE,MAAO,KAHX,CAAAH,KAAA,QAAAC,WAAA,CAMGC,eANHxC,IAAA,OAAAyC,WAAA,IAAAH,KAAA,QAAAC,WAAA,CAQGC,eARHxC,IAAA,UAAAyC,WAAA,IAAAH,KAAA,QAAAC,WAAA,CAUGC,eAVHxC,IAAA,eAAAyC,WAAA,IAAAH,KAAA,QAAAtC,IAAA,QAAAyC,WAAA,IAAAH,KAAA,QAAAtC,IAAA,gBAAAyC,WAAA,IAAAH,KAAA,QAAAtC,IAAA,YAAAyC,MAAA,KAgBsB,GAhBtB,CAAAH,KAAA,SAAAtC,IAAA,YAAAyC,MAkBE,SAAiBgB,GACf,KAAKA,aAAD,EAACA,EAAQC,SAA0C,WAAhCD,EAAOC,OAAOC,MAAM,KAAK,GAC9C,MAAM,IAAIC,MACR,2EAIJ,MAAMC,EAAUC,OAAAC,OAAA,CACdhF,OAAQ,EACRiF,cAAe,IACZP,GAGLI,EAAWG,cAAgB9E,OAAO2E,EAAWG,eAC7CH,EAAW9E,OACa,IAAtB8E,EAAW9E,QAAsC,IAAtB8E,EAAW9E,OAClC8E,EAAW9E,OACX,EAENqD,KAAK6B,QAAUJ,IArCnB,CAAAvB,KAAA,SAAAtC,IAAA,SAAAyC,MAwCE,WACE,OAAKL,KAAK6B,SAAY7B,KAAK8B,KAItB9B,KAAK+B,aAQN/B,KAAK+B,aAAa1F,OAAS,EACtBiE;;;;;;QASFA;qCAC0BN,KAAK+B;MAlB7BzB;;;;QAJAA,QA1Cb,CAAAJ,KAAA,SAAAtC,IAAA,eAAAyC,MAoEE,SAAuBI,GACrB,OAAOuB,YAAyBhC,KAAMS,KArE1C,CAAAP,KAAA,SAAAtC,IAAA,UAAAyC,MAwEE,SAAkBI,GAChB,GACGT,KAAK6B,SACL7B,KAAK8B,QACL9B,KAAKiC,WAAcxB,EAAaC,IAAI,YAKvC,GAAID,EAAaC,IAAI,WAAY,CAC/B,MAAMwB,EAAYzB,EAAa0B,IAAI,WAC9BD,GAAaA,EAAUZ,SAAWtB,KAAK6B,QAAQP,SAClDtB,KAAKoC,cAAgB,IAGvBpC,KAAKqC,uBACI/E,KAAKD,MAAQ2C,KAAKsC,MAAO/E,WA5FzB,KA6FTyC,KAAKqC,oBAzFX,CAAAnC,KAAA,SAAAtC,IAAA,kBAAAyC,MA6FEkC,iBAA+C,IAAAC,EAC7CxC,KAAKiC,WAAY,EACjB,MAAMQ,EAAU,IAAInF,KACdoF,EACH1C,KAAKsC,QAAS,QAAAE,EAACxC,KAAKoC,qBAAN,IAAAI,OAAA,EAACA,EAAoBnG,QAMhC2D,KAAKsC,MALL,IAAIhF,MACF,IAAIA,MAAOqF,SACTF,EAAQG,WAAa5C,KAAK6B,QAASD,gBAKzC5B,KAAKoC,cAAe/F,SACtB2D,KAAKoC,cAAgBpC,KAAKoC,cAAerF,OACtCuE,GACCmB,EAAQlF,UAAY,IAAID,KAAKgE,EAAO3D,cAAcJ,WA/GhD,QAmHR,MAAMsF,QAAqBC,YACzB9C,KAAK8B,KACL9B,KAAK6B,QAASP,OACdoB,EACAD,EACAlE,QAAQyB,KAAKoC,cAAe/F,SAG1BwG,EAAaxG,QAAUwG,EAAa,GAAGxG,QACzC2D,KAAKoC,cAAenE,QAAQ4E,EAAa,IAG3C7C,KAAK+B,aAAexF,EAClByD,KAAKoC,cACLpC,KAAK6B,QAASD,cACd,IACA5B,KAAK6B,QAASlF,QAGhBqD,KAAKsC,MAAQG,EACbzC,KAAKiC,WAAY,IApIrB,CAAA/B,KAAA,MAAAc,QAAA,EAAApD,IAAA,SAAAyC,MAuIE,WACE,OAAOY;;;;;;;;;;;;;;;;WAxI+BC","file":"chunk.262cb289986abffa4d4e.js","sourcesContent":["export const strokeWidth = 5;\n","import { strokeWidth } from \"../../../../data/graph\";\n\nconst average = (items: any[]): number => {\n  return (\n    items.reduce((sum, entry) => sum + parseFloat(entry.state), 0) /\n    items.length\n  );\n};\n\nconst lastValue = (items: any[]): number => {\n  return parseFloat(items[items.length - 1].state) || 0;\n};\n\nconst calcPoints = (\n  history: any,\n  hours: number,\n  width: number,\n  detail: number,\n  min: number,\n  max: number\n): number[][] => {\n  const coords = [] as number[][];\n  const height = 80;\n  let yRatio = (max - min) / height;\n  yRatio = yRatio !== 0 ? yRatio : height;\n  let xRatio = width / (hours - (detail === 1 ? 1 : 0));\n  xRatio = isFinite(xRatio) ? xRatio : width;\n\n  const first = history.filter(Boolean)[0];\n  let last = [average(first), lastValue(first)];\n\n  const getCoords = (item: any[], i: number, offset = 0, depth = 1) => {\n    if (depth > 1 && item) {\n      return item.forEach((subItem, index) =>\n        getCoords(subItem, i, index, depth - 1)\n      );\n    }\n\n    const x = xRatio * (i + offset / 6);\n\n    if (item) {\n      last = [average(item), lastValue(item)];\n    }\n    const y =\n      height + strokeWidth / 2 - ((item ? last[0] : last[1]) - min) / yRatio;\n    return coords.push([x, y]);\n  };\n\n  for (let i = 0; i < history.length; i += 1) {\n    getCoords(history[i], i, 0, detail);\n  }\n\n  if (coords.length === 1) {\n    coords[1] = [width, coords[0][1]];\n  }\n\n  coords.push([width, coords[coords.length - 1][1]]);\n  return coords;\n};\n\nexport const coordinates = (\n  history: any,\n  hours: number,\n  width: number,\n  detail: number\n): number[][] | undefined => {\n  history.forEach((item) => {\n    item.state = Number(item.state);\n  });\n  history = history.filter((item) => !Number.isNaN(item.state));\n\n  const min = Math.min(...history.map((item) => item.state));\n  const max = Math.max(...history.map((item) => item.state));\n  const now = new Date().getTime();\n\n  const reduce = (res, item, point) => {\n    const age = now - new Date(item.last_changed).getTime();\n\n    let key = Math.abs(age / (1000 * 3600) - hours);\n    if (point) {\n      key = (key - Math.floor(key)) * 60;\n      key = Number((Math.round(key / 10) * 10).toString()[0]);\n    } else {\n      key = Math.floor(key);\n    }\n    if (!res[key]) {\n      res[key] = [];\n    }\n    res[key].push(item);\n    return res;\n  };\n\n  history = history.reduce((res, item) => reduce(res, item, false), []);\n  if (detail > 1) {\n    history = history.map((entry) =>\n      entry.reduce((res, item) => reduce(res, item, true), [])\n    );\n  }\n\n  if (!history.length) {\n    return undefined;\n  }\n\n  return calcPoints(history, hours, width, detail, min, max);\n};\n","const midPoint = (\n  _Ax: number,\n  _Ay: number,\n  _Bx: number,\n  _By: number\n): number[] => {\n  const _Zx = (_Ax - _Bx) / 2 + _Bx;\n  const _Zy = (_Ay - _By) / 2 + _By;\n  return [_Zx, _Zy];\n};\n\nexport const getPath = (coords: number[][]): string => {\n  if (!coords.length) {\n    return \"\";\n  }\n\n  let next: number[];\n  let Z: number[];\n  const X = 0;\n  const Y = 1;\n  let path = \"\";\n  let last = coords.filter(Boolean)[0];\n\n  path += `M ${last[X]},${last[Y]}`;\n\n  for (const coord of coords) {\n    next = coord;\n    Z = midPoint(last[X], last[Y], next[X], next[Y]);\n    path += ` ${Z[X]},${Z[Y]}`;\n    path += ` Q${next[X]},${next[Y]}`;\n    last = next;\n  }\n\n  path += ` ${next![X]},${next![Y]}`;\n  return path;\n};\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  svg,\n  TemplateResult,\n} from \"lit-element\";\nimport { strokeWidth } from \"../../../data/graph\";\nimport { getPath } from \"../common/graph/get-path\";\n\n@customElement(\"hui-graph-base\")\nexport class HuiGraphBase extends LitElement {\n  @property() public coordinates?: any;\n\n  @property() private _path?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      ${this._path\n        ? svg`<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 500 100\">\n          <g>\n            <mask id=\"fill\">\n              <path\n                class='fill'\n                fill='white'\n                d=\"${this._path} L 500, 100 L 0, 100 z\"\n              />\n            </mask>\n            <rect height=\"100%\" width=\"100%\" id=\"fill-rect\" fill=\"var(--accent-color)\" mask=\"url(#fill)\"></rect>\n            <mask id=\"line\">\n              <path\n                fill=\"none\"\n                stroke=\"var(--accent-color)\"\n                stroke-width=\"${strokeWidth}\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                d=${this._path}\n              ></path>\n            </mask>\n            <rect height=\"100%\" width=\"100%\" id=\"rect\" fill=\"var(--accent-color)\" mask=\"url(#line)\"></rect>\n          </g>\n        </svg>`\n        : svg`<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 500 100\"></svg>`}\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (!this.coordinates) {\n      return;\n    }\n\n    if (changedProps.has(\"coordinates\")) {\n      this._path = getPath(this.coordinates);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: flex;\n        width: 100%;\n      }\n      .fill {\n        opacity: 0.1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-graph-base\": HuiGraphBase;\n  }\n}\n","import \"@polymer/paper-spinner/paper-spinner\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { fetchRecent } from \"../../../data/history\";\nimport { HomeAssistant } from \"../../../types\";\nimport { coordinates } from \"../common/graph/coordinates\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-graph-base\";\nimport { LovelaceHeaderFooter } from \"../types\";\nimport { GraphHeaderFooterConfig } from \"./types\";\n\nconst MINUTE = 60000;\nconst DAY = 86400000;\n\n@customElement(\"hui-graph-header-footer\")\nexport class HuiGraphHeaderFooter extends LitElement\n  implements LovelaceHeaderFooter {\n  public static getStubConfig(): object {\n    return {};\n  }\n\n  @property() public hass?: HomeAssistant;\n\n  @property() protected _config?: GraphHeaderFooterConfig;\n\n  @property() private _coordinates?: number[][];\n\n  private _date?: Date;\n\n  private _stateHistory?: HassEntity[];\n\n  private _fetching = false;\n\n  public setConfig(config: GraphHeaderFooterConfig): void {\n    if (!config?.entity || config.entity.split(\".\")[0] !== \"sensor\") {\n      throw new Error(\n        \"Invalid Configuration: An entity from within the sensor domain required\"\n      );\n    }\n\n    const cardConfig = {\n      detail: 1,\n      hours_to_show: 24,\n      ...config,\n    };\n\n    cardConfig.hours_to_show = Number(cardConfig.hours_to_show);\n    cardConfig.detail =\n      cardConfig.detail === 1 || cardConfig.detail === 2\n        ? cardConfig.detail\n        : 1;\n\n    this._config = cardConfig;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    if (!this._coordinates) {\n      return html`\n        <div class=\"container\">\n          <paper-spinner active></paper-spinner>\n        </div>\n      `;\n    }\n\n    if (this._coordinates.length < 1) {\n      return html`\n        <div class=\"container\">\n          <div class=\"info\">\n            No state history found.\n          </div>\n        </div>\n      `;\n    }\n\n    return html`\n      <hui-graph-base .coordinates=${this._coordinates}></hui-graph-base>\n    `;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (\n      !this._config ||\n      !this.hass ||\n      (this._fetching && !changedProps.has(\"_config\"))\n    ) {\n      return;\n    }\n\n    if (changedProps.has(\"_config\")) {\n      const oldConfig = changedProps.get(\"_config\") as GraphHeaderFooterConfig;\n      if (!oldConfig || oldConfig.entity !== this._config.entity) {\n        this._stateHistory = [];\n      }\n\n      this._getCoordinates();\n    } else if (Date.now() - this._date!.getTime() >= MINUTE) {\n      this._getCoordinates();\n    }\n  }\n\n  private async _getCoordinates(): Promise<void> {\n    this._fetching = true;\n    const endTime = new Date();\n    const startTime =\n      !this._date || !this._stateHistory?.length\n        ? new Date(\n            new Date().setHours(\n              endTime.getHours() - this._config!.hours_to_show!\n            )\n          )\n        : this._date;\n\n    if (this._stateHistory!.length) {\n      this._stateHistory = this._stateHistory!.filter(\n        (entity) =>\n          endTime.getTime() - new Date(entity.last_changed).getTime() <= DAY\n      );\n    }\n\n    const stateHistory = await fetchRecent(\n      this.hass!,\n      this._config!.entity,\n      startTime,\n      endTime,\n      Boolean(this._stateHistory!.length)\n    );\n\n    if (stateHistory.length && stateHistory[0].length) {\n      this._stateHistory!.push(...stateHistory[0]);\n    }\n\n    this._coordinates = coordinates(\n      this._stateHistory,\n      this._config!.hours_to_show!,\n      500,\n      this._config!.detail!\n    );\n\n    this._date = endTime;\n    this._fetching = false;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-spinner {\n        position: absolute;\n        top: calc(50% - 28px);\n      }\n      .container {\n        display: flex;\n        justify-content: center;\n        position: relative;\n        padding-bottom: 20%;\n      }\n      .info {\n        position: absolute;\n        top: calc(50% - 16px);\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-graph-header-footer\": HuiGraphHeaderFooter;\n  }\n}\n"],"sourceRoot":""}