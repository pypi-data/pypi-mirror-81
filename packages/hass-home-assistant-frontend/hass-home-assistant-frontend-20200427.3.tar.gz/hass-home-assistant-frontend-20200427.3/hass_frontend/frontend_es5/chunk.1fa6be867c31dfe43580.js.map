{"version":3,"sources":["webpack:///./src/mixins/localize-mixin.js","webpack:///./node_modules/@polymer/paper-spinner/paper-spinner.js","webpack:///./src/resources/codemirror.ondemand.ts","webpack:///./src/components/ha-code-editor.ts","webpack:///./src/panels/developer-tools/template/developer-tools-template.js"],"names":["dedupingMixin","superClass","_superClass","_inherits","_class","_super","_createSuper","_classCallCheck","this","apply","arguments","key","get","hass","Object","localize","type","Function","computed","value","template","html","_templateObject","setAttribute","Polymer","_template","is","behaviors","PaperSpinnerBehavior","loaded","loadCodeMirror","_ref","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Promise","all","__webpack_require__","e","then","bind","abrupt","stop","_decorate","customElement","_initialize","_UpdatingElement","HaCodeEditor","_UpdatingElement2","_this","_len","length","args","Array","_key","call","concat","_assertThisInitialized","F","d","kind","decorators","property","Boolean","_value","codemirror","getValue","shadowRoot","querySelector","_get","_getPrototypeOf","prototype","refresh","autofocus","focus","changedProps","has","setOption","mode","setValue","_calcGutters","_setScrollBarDirection","classList","toggle","error","_load","_load2","codeMirror","_this2","sent","attachShadow","innerHTML","codeMirrorCss","lineNumbers","tabSize","viewportMargin","Infinity","readOnly","extraKeys","Tab","Shift-Tab","gutters","on","_onChange","newValue","fireEvent","rtl","getWrapperElement","UpdatingElement","HaPanelDevTemplate","LocalizeMixin","PolymerElement","rendering","String","processed","renderTemplate","narrow","ev","detail","_debouncer","Debouncer","debounce","timeOut","after","callApi","body","message","customElements","define"],"mappings":"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","file":"chunk.1fa6be867c31dfe43580.js","sourcesContent":["import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/color.js';\nimport './paper-spinner-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperSpinnerBehavior} from './paper-spinner-behavior.js';\n\nconst template = html`\n  <style include=\"paper-spinner-styles\"></style>\n\n  <div id=\"spinnerContainer\" class-name=\"[[__computeContainerClasses(active, __coolingDown)]]\" on-animationend=\"__reset\" on-webkit-animation-end=\"__reset\">\n    <div class=\"spinner-layer layer-1\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-2\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-3\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-4\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n  </div>\n`;\ntemplate.setAttribute('strip-whitespace', '');\n\n/**\nMaterial design: [Progress &\nactivity](https://www.google.com/design/spec/components/progress-activity.html)\n\nElement providing a multiple color material design circular spinner.\n\n    <paper-spinner active></paper-spinner>\n\nThe default spinner cycles between four layers of colors; by default they are\nblue, red, yellow and green. It can be customized to cycle between four\ndifferent colors. Use <paper-spinner-lite> for single color spinners.\n\n### Accessibility\n\nAlt attribute should be set to provide adequate context for accessibility. If\nnot provided, it defaults to 'loading'. Empty alt can be provided to mark the\nelement as decorative if alternative content is provided in another form (e.g. a\ntext block following the spinner).\n\n    <paper-spinner alt=\"Loading contacts list\" active></paper-spinner>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-spinner-layer-1-color` | Color of the first spinner rotation | `--google-blue-500`\n`--paper-spinner-layer-2-color` | Color of the second spinner rotation | `--google-red-500`\n`--paper-spinner-layer-3-color` | Color of the third spinner rotation | `--google-yellow-500`\n`--paper-spinner-layer-4-color` | Color of the fourth spinner rotation | `--google-green-500`\n`--paper-spinner-stroke-width` | The width of the spinner stroke | 3px\n\n@group Paper Elements\n@element paper-spinner\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: template,\n\n  is: 'paper-spinner',\n\n  behaviors: [PaperSpinnerBehavior]\n});\n","interface LoadedCodeMirror {\n  codeMirror: any;\n  codeMirrorCss: any;\n}\n\nlet loaded: Promise<LoadedCodeMirror>;\n\nexport const loadCodeMirror = async (): Promise<LoadedCodeMirror> => {\n  if (!loaded) {\n    loaded = import(/* webpackChunkName: \"codemirror\" */ \"./codemirror\");\n  }\n  return loaded;\n};\n","import { Editor } from \"codemirror\";\nimport {\n  customElement,\n  property,\n  PropertyValues,\n  UpdatingElement,\n} from \"lit-element\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { loadCodeMirror } from \"../resources/codemirror.ondemand\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"editor-save\": undefined;\n  }\n}\n\n@customElement(\"ha-code-editor\")\nexport class HaCodeEditor extends UpdatingElement {\n  public codemirror?: Editor;\n\n  @property() public mode?: string;\n\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ type: Boolean }) public readOnly = false;\n\n  @property() public rtl = false;\n\n  @property() public error = false;\n\n  @property() private _value = \"\";\n\n  public set value(value: string) {\n    this._value = value;\n  }\n\n  public get value(): string {\n    return this.codemirror ? this.codemirror.getValue() : this._value;\n  }\n\n  public get hasComments(): boolean {\n    return !!this.shadowRoot!.querySelector(\"span.cm-comment\");\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (!this.codemirror) {\n      return;\n    }\n    this.codemirror.refresh();\n    if (this.autofocus !== false) {\n      this.codemirror.focus();\n    }\n  }\n\n  protected update(changedProps: PropertyValues): void {\n    super.update(changedProps);\n\n    if (!this.codemirror) {\n      return;\n    }\n\n    if (changedProps.has(\"mode\")) {\n      this.codemirror.setOption(\"mode\", this.mode);\n    }\n    if (changedProps.has(\"autofocus\")) {\n      this.codemirror.setOption(\"autofocus\", this.autofocus !== false);\n    }\n    if (changedProps.has(\"_value\") && this._value !== this.value) {\n      this.codemirror.setValue(this._value);\n    }\n    if (changedProps.has(\"rtl\")) {\n      this.codemirror.setOption(\"gutters\", this._calcGutters());\n      this._setScrollBarDirection();\n    }\n    if (changedProps.has(\"error\")) {\n      this.classList.toggle(\"error-state\", this.error);\n    }\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._load();\n  }\n\n  private async _load(): Promise<void> {\n    const loaded = await loadCodeMirror();\n\n    const codeMirror = loaded.codeMirror;\n\n    const shadowRoot = this.attachShadow({ mode: \"open\" });\n\n    shadowRoot!.innerHTML = `\n    <style>\n      ${loaded.codeMirrorCss}\n      .CodeMirror {\n        height: var(--code-mirror-height, auto);\n        direction: var(--code-mirror-direction, ltr);\n      }\n      .CodeMirror-scroll {\n        max-height: var(--code-mirror-max-height, --code-mirror-height);\n      }\n      .CodeMirror-gutters {\n        border-right: 1px solid var(--paper-input-container-color, var(--secondary-text-color));\n        background-color: var(--paper-dialog-background-color, var(--primary-background-color));\n        transition: 0.2s ease border-right;\n      }\n      :host(.error-state) .CodeMirror-gutters {\n        border-color: var(--error-state-color, red);\n      }\n      .CodeMirror-focused .CodeMirror-gutters {\n        border-right: 2px solid var(--paper-input-container-focus-color, var(--primary-color));\n      }\n      .CodeMirror-linenumber {\n        color: var(--paper-dialog-color, var(--primary-text-color));\n      }\n      .rtl .CodeMirror-vscrollbar {\n        right: auto;\n        left: 0px;\n      }\n      .rtl-gutter {\n        width: 20px;\n      }\n    </style>`;\n\n    this.codemirror = codeMirror(shadowRoot, {\n      value: this._value,\n      lineNumbers: true,\n      tabSize: 2,\n      mode: this.mode,\n      autofocus: this.autofocus !== false,\n      viewportMargin: Infinity,\n      readOnly: this.readOnly,\n      extraKeys: {\n        Tab: \"indentMore\",\n        \"Shift-Tab\": \"indentLess\",\n      },\n      gutters: this._calcGutters(),\n    });\n    this._setScrollBarDirection();\n    this.codemirror!.on(\"changes\", () => this._onChange());\n  }\n\n  private _onChange(): void {\n    const newValue = this.value;\n    if (newValue === this._value) {\n      return;\n    }\n    this._value = newValue;\n    fireEvent(this, \"value-changed\", { value: this._value });\n  }\n\n  private _calcGutters(): string[] {\n    return this.rtl ? [\"rtl-gutter\", \"CodeMirror-linenumbers\"] : [];\n  }\n\n  private _setScrollBarDirection(): void {\n    if (this.codemirror) {\n      this.codemirror.getWrapperElement().classList.toggle(\"rtl\", this.rtl);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-code-editor\": HaCodeEditor;\n  }\n}\n","import \"@polymer/paper-spinner/paper-spinner\";\nimport { timeOut } from \"@polymer/polymer/lib/utils/async\";\nimport { Debouncer } from \"@polymer/polymer/lib/utils/debounce\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\n/* eslint-plugin-disable lit */\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport \"../../../components/ha-code-editor\";\nimport LocalizeMixin from \"../../../mixins/localize-mixin\";\nimport \"../../../resources/ha-style\";\n\nclass HaPanelDevTemplate extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"ha-style iron-flex iron-positioning\"></style>\n      <style>\n        :host {\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n        }\n\n        .content {\n          padding: 16px;\n          direction: ltr;\n        }\n\n        .edit-pane {\n          margin-right: 16px;\n        }\n\n        .edit-pane a {\n          color: var(--dark-primary-color);\n        }\n\n        .horizontal .edit-pane {\n          max-width: 50%;\n        }\n\n        .render-pane {\n          position: relative;\n          max-width: 50%;\n        }\n\n        .render-spinner {\n          position: absolute;\n          top: 8px;\n          right: 8px;\n        }\n\n        .rendered {\n          @apply --paper-font-code1;\n          clear: both;\n          white-space: pre-wrap;\n        }\n\n        .rendered.error {\n          color: red;\n        }\n      </style>\n\n      <div class$=\"[[computeFormClasses(narrow)]]\">\n        <div class=\"edit-pane\">\n          <p>\n            [[localize('ui.panel.developer-tools.tabs.templates.description')]]\n          </p>\n          <ul>\n            <li>\n              <a\n                href=\"http://jinja.pocoo.org/docs/dev/templates/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                >[[localize('ui.panel.developer-tools.tabs.templates.jinja_documentation')]]</a\n              >\n            </li>\n            <li>\n              <a\n                href=\"https://home-assistant.io/docs/configuration/templating/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                >[[localize('ui.panel.developer-tools.tabs.templates.template_extensions')]]</a\n              >\n            </li>\n          </ul>\n          <p>[[localize('ui.panel.developer-tools.tabs.templates.editor')]]</p>\n          <ha-code-editor\n            mode=\"jinja2\"\n            value=\"[[template]]\"\n            error=\"[[error]]\"\n            autofocus\n            on-value-changed=\"templateChanged\"\n          ></ha-code-editor>\n        </div>\n\n        <div class=\"render-pane\">\n          <paper-spinner\n            class=\"render-spinner\"\n            active=\"[[rendering]]\"\n          ></paper-spinner>\n          <pre class$=\"[[computeRenderedClasses(error)]]\">[[processed]]</pre>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      error: {\n        type: Boolean,\n        value: false,\n      },\n\n      rendering: {\n        type: Boolean,\n        value: false,\n      },\n\n      template: {\n        type: String,\n        /* eslint-disable max-len */\n        value: `Imitate available variables:\n{% set my_test_json = {\n  \"temperature\": 25,\n  \"unit\": \"°C\"\n} %}\n\nThe temperature is {{ my_test_json.temperature }} {{ my_test_json.unit }}.\n\n{% if is_state(\"device_tracker.paulus\", \"home\") and\n      is_state(\"device_tracker.anne_therese\", \"home\") -%}\n  You are both home, you silly\n{%- else -%}\n  Anne Therese is at {{ states(\"device_tracker.anne_therese\") }}\n  Paulus is at {{ states(\"device_tracker.paulus\") }}\n{%- endif %}\n\nFor loop example:\n{% for state in states.sensor -%}\n  {%- if loop.first %}The {% elif loop.last %} and the {% else %}, the {% endif -%}\n  {{ state.name | lower }} is {{state.state_with_unit}}\n{%- endfor %}.`,\n        /* eslint-enable max-len */\n      },\n\n      processed: {\n        type: String,\n        value: \"\",\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.renderTemplate();\n  }\n\n  computeFormClasses(narrow) {\n    return narrow ? \"content fit\" : \"content fit layout horizontal\";\n  }\n\n  computeRenderedClasses(error) {\n    return error ? \"error rendered\" : \"rendered\";\n  }\n\n  templateChanged(ev) {\n    this.template = ev.detail.value;\n    if (this.error) {\n      this.error = false;\n    }\n    this._debouncer = Debouncer.debounce(\n      this._debouncer,\n      timeOut.after(500),\n      () => {\n        this.renderTemplate();\n      }\n    );\n  }\n\n  renderTemplate() {\n    this.rendering = true;\n\n    this.hass.callApi(\"POST\", \"template\", { template: this.template }).then(\n      function (processed) {\n        this.processed = processed;\n        this.rendering = false;\n      }.bind(this),\n      function (error) {\n        this.processed =\n          (error && error.body && error.body.message) ||\n          this.hass.localize(\n            \"ui.panel.developer-tools.tabs.templates.unknown_error_template\"\n          );\n        this.error = true;\n        this.rendering = false;\n      }.bind(this)\n    );\n  }\n}\n\ncustomElements.define(\"developer-tools-template\", HaPanelDevTemplate);\n"],"sourceRoot":""}