{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-markdown-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","configElementStyle","html","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","decorators","property","key","label","hass","localize","_changed","Object","keys","themes","sort","map","theme","static","css","ev","target","selected","fireEvent","LitElement","cardConfigStruct","type","title","content","HuiMarkdownCardEditor","config","_config","_title","_valueChanged","_content","_theme","configValue","assign"],"mappings":"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","file":"chunk.875d2790ca3772620fce.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n        `${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.generic.theme\"\n        )} (${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.config.optional\"\n        )})`}\n        dynamic-align\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=${this.value}\n          attr-for-selected=\"theme\"\n          @iron-select=${this._changed}\n        >\n          <paper-item theme=\"remove\"\n            >${this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.generic.no_theme\"\n            )}</paper-item\n          >\n          ${Object.keys(this.hass!.themes.themes)\n            .sort()\n            .map((theme) => {\n              return html` <paper-item theme=${theme}>${theme}</paper-item> `;\n            })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.selected === \"\") {\n      return;\n    }\n    this.value = ev.target.selected === \"remove\" ? \"\" : ev.target.selected;\n    fireEvent(this, \"value-changed\", { value: this.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-input/paper-textarea\";\nimport {\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { MarkdownCardConfig } from \"../../cards/types\";\nimport { struct } from \"../../common/structs/struct\";\nimport \"../../components/hui-theme-select-editor\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { EditorTarget, EntitiesEditorEvent } from \"../types\";\nimport { configElementStyle } from \"./config-elements-style\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  content: \"string\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-markdown-card-editor\")\nexport class HuiMarkdownCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MarkdownCardConfig;\n\n  public setConfig(config: MarkdownCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _content(): string {\n    return this._config!.content || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"\";\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <paper-textarea\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.markdown.content\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .value=\"${this._content}\"\n          .configValue=\"${\"content\"}\"\n          @value-changed=\"${this._valueChanged}\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          spellcheck=\"false\"\n        ></paper-textarea>\n        <hui-theme-select-editor\n          .hass=${this.hass}\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\" && target.configValue !== \"content\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-markdown-card-editor\": HuiMarkdownCardEditor;\n  }\n}\n"],"sourceRoot":""}