# remove cells with less than 200 genes expressed
doTrimCells=True
minGenes = 3

# remove genes expressed in less than 3 cells
doTrimGenes = True
minCells = 3

# remove cells with too much mitochondrial expression?
doFilterMito = True
mitoMax = 0.05
# map gene IDs to symbols to find mitochondrial genes
# use 'symbols' if gene IDs in matrix are already symbols
# other possible values: 'auto', 'gencode-human', 'gencode-mouse'
geneIdType = "auto"

# remove cells with too few or too many expressed genes
doFilterGenes = True
filterMaxGenes=15000
filterMinGenes = 10

# normalize expression counts
doNormalize = True
countsPerCell = 10000

# keep only most variable genes
doTrimVarGenes = True
varMinMean = 0.0125
varMaxMean = 3
varMinDisp = 0.5

# when exporting the expression values and genes for the cell browser
# use the raw input data (often read counts) and not the filtered/normalized
# data. This has the advantage that you can color on any gene
useRaw = True

# log2 the data? If the input is read counts, the usual recommendation is not log2
doLog = True

# regress out UMIs and percent mitochondrial expression?
doRegress = False

# number of PCs to use for t-SNE
# Estimating number of useful PCs based on Shekar et al, Cell 2016
# PC weight cutoff used is (sqrt(# of Genes/# of cells) + 1)^2
# See http://www.cell.com/cell/fulltext/S0092-8674(16)31007-8, STAR methods
#pcCount = 'auto'
pcCount = 20

# number of neighbors to use when doing Louvain clustering and Louvain clustering resolution
louvainNeighbors = 5
louvainRes = 1.0

# the layout algorithms to run. Possible values are:
# "pagaFa", "umap", "phate" or one of the igraph layouts as explained in the scanpy docs:
#     ‘fa’ (ForceAtlas2) or any valid igraph layout. Of particular interest are
#     ‘fr’ (Fruchterman Reingold), ‘grid_fr’ (Grid Fruchterman Reingold, faster
#     than ‘fr’), ‘kk’ (Kamadi Kawai’, slower than ‘fr’), ‘lgl’ (Large Graph, very
#     fast), ‘drl’ (Distributed Recursive Layout, pretty fast) and ‘rt’ (Reingold
#     Tilford tree layout).
# You can also set doLayouts="all" to generate our favorite layouts, which is
# everything above except lgl/rt as they do not seem useful or grid_fr which
# is sometimes tricky to install.
doLayouts = ["fa", "umap"]

# find top marker genes per cluster?
doMarkers = True
# number of marker genes to output, per cluster
markerCount = 50
