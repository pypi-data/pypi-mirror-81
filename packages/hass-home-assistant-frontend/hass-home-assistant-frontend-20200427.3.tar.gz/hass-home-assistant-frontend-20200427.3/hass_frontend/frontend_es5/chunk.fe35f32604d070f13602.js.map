{"version":3,"sources":["webpack:///./src/panels/lovelace/cards/hui-error-card.ts"],"names":["HuiErrorCard","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","_inherits","_super","_createSuper","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","d","kind","key","value","decorators","property","config","_config","html","_templateObject2","error","origConfig","_templateObject3","safeDump","_templateObject","static","css","_templateObject4","LitElement"],"mappings":"0kGAeO,IAAMA,sqMAAbC,CAAA,CADCC,YAAc,mBACf,SAAAC,EAAAC,GAAA,OAAAC,EAAA,SAAAC,sOAAAC,CAAAP,EAAAI,GAAA,IAAAI,EAAAC,EAAAT,GAAA,SAAAA,IAAA,IAAAU,+FAAAC,CAAAC,KAAAZ,GAAA,QAAAa,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAF,EAAAW,KAAAC,MAAAZ,EAAA,CAAAI,MAAAS,OAAAL,IAAAb,EAAAmB,EAAAZ,MAAA,OAAAV,EAAA,GAAAuB,EAAA,EAAAC,KAAA,QAAAC,IAAA,OAAAC,WAAA,IAAAF,KAAA,QAAAG,WAAA,CAGGC,eAHHH,IAAA,UAAAC,WAAA,IAAAF,KAAA,SAAAC,IAAA,cAAAC,MAKE,WACE,OAAO,IANX,CAAAF,KAAA,SAAAC,IAAA,YAAAC,MASE,SAAiBG,GACfjB,KAAKkB,QAAUD,IAVnB,CAAAL,KAAA,SAAAC,IAAA,SAAAC,MAaE,WACE,OAAKd,KAAKkB,QAIHC,YAAPC,IACIpB,KAAKkB,QAAQG,MACbrB,KAAKkB,QAAQI,WACXH,YADFI,IACcC,mBAASxB,KAAKkB,QAAQI,aAClC,IAPGH,YAAPM,OAfN,CAAAb,KAAA,MAAAc,QAAA,EAAAb,IAAA,SAAAC,MA0BE,WACE,OAAOa,YAAPC,UA3B8BC","file":"chunk.fe35f32604d070f13602.js","sourcesContent":["import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\nimport { LovelaceCard } from \"../types\";\nimport { ErrorCardConfig } from \"./types\";\nimport { safeDump } from \"js-yaml\";\n\n@customElement(\"hui-error-card\")\nexport class HuiErrorCard extends LitElement implements LovelaceCard {\n  public hass?: HomeAssistant;\n\n  @property() private _config?: ErrorCardConfig;\n\n  public getCardSize(): number {\n    return 4;\n  }\n\n  public setConfig(config: ErrorCardConfig): void {\n    this._config = config;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config) {\n      return html``;\n    }\n\n    return html`\n      ${this._config.error}\n      ${this._config.origConfig\n        ? html`<pre>${safeDump(this._config.origConfig)}</pre>`\n        : \"\"}\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        background-color: #ef5350;\n        color: white;\n        padding: 8px;\n        font-weight: 500;\n        user-select: text;\n        cursor: default;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-error-card\": HuiErrorCard;\n  }\n}\n"],"sourceRoot":""}