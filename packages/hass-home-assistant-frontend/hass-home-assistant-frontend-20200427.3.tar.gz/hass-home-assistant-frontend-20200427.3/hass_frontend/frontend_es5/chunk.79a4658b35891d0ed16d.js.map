{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-dropdown-menu/paper-dropdown-menu.js","webpack:///./node_modules/@polymer/paper-dropdown-menu/paper-dropdown-menu-icons.js","webpack:///./node_modules/@polymer/paper-dropdown-menu/paper-dropdown-menu-shared-styles.js","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/common/config/is_component_loaded.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-shopping-list-editor.ts"],"names":["Polymer","_template","html","_templateObject","is","behaviors","IronButtonState","IronControlState","IronFormElementBehavior","IronValidatableBehavior","properties","selectedItemLabel","type","String","notify","readOnly","selectedItem","Object","value","label","placeholder","errorMessage","opened","Boolean","observer","allowOutsideScroll","noLabelFloat","reflectToAttribute","alwaysFloatLabel","noAnimations","horizontalAlign","verticalAlign","verticalOffset","Number","dynamicAlign","restoreFocusOnClose","listeners","tap","keyBindings","up down","esc","hostAttributes","role","aria-autocomplete","aria-haspopup","observers","attached","contentElement","this","_setSelectedItem","nodes","dom","$","content","getDistributedNodes","i","l","length","nodeType","Node","ELEMENT_NODE","open","menuButton","close","_onIronSelect","event","detail","item","_onIronDeselect","_onTap","gestures","_selectedItemChanged","getAttribute","textContent","trim","_setSelectedItemLabel","_computeMenuVerticalOffset","opt_verticalOffset","_getValidity","_value","disabled","required","_openedChanged","openState","e","setAttribute","__webpack_require__","$_documentContainer","document","createElement","innerHTML","head","appendChild","d","__webpack_exports__","struct","superstruct","types","entity-id","includes","icon","isComponentLoaded","hass","component","config","components","indexOf","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","_inherits","HuiThemeSelectEditor","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","concat","_assertThisInitialized","kind","decorators","property","key","localize","_changed","keys","themes","sort","map","theme","_templateObject2","static","css","_templateObject3","ev","target","selected","fireEvent","LitElement","cardConfigStruct","title","HuiShoppingListEditor","_config","_title","_valueChanged","_theme","configValue","assign","_templateObject4"],"mappings":"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","file":"chunk.79a4658b35891d0ed16d.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport '@polymer/iron-icon/iron-icon.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-menu-button/paper-menu-button.js';\nimport '@polymer/paper-ripple/paper-ripple.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport './paper-dropdown-menu-icons.js';\nimport './paper-dropdown-menu-shared-styles.js';\n\nimport {IronButtonState} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\nimport {IronFormElementBehavior} from '@polymer/iron-form-element-behavior/iron-form-element-behavior.js';\nimport {IronValidatableBehavior} from '@polymer/iron-validatable-behavior/iron-validatable-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport * as gestures from '@polymer/polymer/lib/utils/gestures.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design: [Dropdown\nmenus](https://www.google.com/design/spec/components/buttons.html#buttons-dropdown-buttons)\n\n`paper-dropdown-menu` is similar to a native browser select element.\n`paper-dropdown-menu` works with selectable content. The currently selected\nitem is displayed in the control. If no item is selected, the `label` is\ndisplayed instead.\n\nExample:\n\n    <paper-dropdown-menu label=\"Your favourite pastry\">\n      <paper-listbox slot=\"dropdown-content\">\n        <paper-item>Croissant</paper-item>\n        <paper-item>Donut</paper-item>\n        <paper-item>Financier</paper-item>\n        <paper-item>Madeleine</paper-item>\n      </paper-listbox>\n    </paper-dropdown-menu>\n\nThis example renders a dropdown menu with 4 options.\n\nThe child element with the slot `dropdown-content` is used as the dropdown\nmenu. This can be a [`paper-listbox`](paper-listbox), or any other or\nelement that acts like an [`iron-selector`](iron-selector).\n\nSpecifically, the menu child must fire an\n[`iron-select`](iron-selector#event-iron-select) event when one of its\nchildren is selected, and an\n[`iron-deselect`](iron-selector#event-iron-deselect) event when a child is\ndeselected. The selected or deselected item must be passed as the event's\n`detail.item` property.\n\nApplications can listen for the `iron-select` and `iron-deselect` events\nto react when options are selected and deselected.\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dropdown-menu` | A mixin that is applied to the element host | `{}`\n`--paper-dropdown-menu-disabled` | A mixin that is applied to the element host when disabled | `{}`\n`--paper-dropdown-menu-ripple` | A mixin that is applied to the internal ripple | `{}`\n`--paper-dropdown-menu-button` | A mixin that is applied to the internal menu button | `{}`\n`--paper-dropdown-menu-input` | A mixin that is applied to the internal paper input | `{}`\n`--paper-dropdown-menu-icon` | A mixin that is applied to the internal icon | `{}`\n\nYou can also use any of the `paper-input-container` and `paper-menu-button`\nstyle mixins and custom properties to style the internal input and menu button\nrespectively.\n\n@group Paper Elements\n@element paper-dropdown-menu\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-dropdown-menu-shared-styles\"></style>\n\n    <!-- this div fulfills an a11y requirement for combobox, do not remove -->\n    <span role=\"button\"></span>\n    <paper-menu-button id=\"menuButton\" vertical-align=\"[[verticalAlign]]\" horizontal-align=\"[[horizontalAlign]]\" dynamic-align=\"[[dynamicAlign]]\" vertical-offset=\"[[_computeMenuVerticalOffset(noLabelFloat, verticalOffset)]]\" disabled=\"[[disabled]]\" no-animations=\"[[noAnimations]]\" on-iron-select=\"_onIronSelect\" on-iron-deselect=\"_onIronDeselect\" opened=\"{{opened}}\" close-on-activate allow-outside-scroll=\"[[allowOutsideScroll]]\" restore-focus-on-close=\"[[restoreFocusOnClose]]\">\n      <!-- support hybrid mode: user might be using paper-menu-button 1.x which distributes via <content> -->\n      <div class=\"dropdown-trigger\" slot=\"dropdown-trigger\">\n        <paper-ripple></paper-ripple>\n        <!-- paper-input has type=\"text\" for a11y, do not remove -->\n        <paper-input type=\"text\" invalid=\"[[invalid]]\" readonly disabled=\"[[disabled]]\" value=\"[[value]]\" placeholder=\"[[placeholder]]\" error-message=\"[[errorMessage]]\" always-float-label=\"[[alwaysFloatLabel]]\" no-label-float=\"[[noLabelFloat]]\" label=\"[[label]]\">\n          <!-- support hybrid mode: user might be using paper-input 1.x which distributes via <content> -->\n          <iron-icon icon=\"paper-dropdown-menu:arrow-drop-down\" suffix slot=\"suffix\"></iron-icon>\n        </paper-input>\n      </div>\n      <slot id=\"content\" name=\"dropdown-content\" slot=\"dropdown-content\"></slot>\n    </paper-menu-button>\n`,\n\n  is: 'paper-dropdown-menu',\n\n  behaviors: [\n    IronButtonState,\n    IronControlState,\n    IronFormElementBehavior,\n    IronValidatableBehavior\n  ],\n\n  properties: {\n    /**\n     * The derived \"label\" of the currently selected item. This value\n     * is the `label` property on the selected item if set, or else the\n     * trimmed text content of the selected item.\n     */\n    selectedItemLabel: {type: String, notify: true, readOnly: true},\n\n    /**\n     * The last selected item. An item is selected if the dropdown menu has\n     * a child with slot `dropdown-content`, and that child triggers an\n     * `iron-select` event with the selected `item` in the `detail`.\n     *\n     * @type {?Object}\n     */\n    selectedItem: {type: Object, notify: true, readOnly: true},\n\n    /**\n     * The value for this element that will be used when submitting in\n     * a form. It reflects the value of `selectedItemLabel`. If set directly,\n     * it will not update the `selectedItemLabel` value.\n     */\n    value: {\n      type: String,\n      notify: true,\n    },\n\n    /**\n     * The label for the dropdown.\n     */\n    label: {type: String},\n\n    /**\n     * The placeholder for the dropdown.\n     */\n    placeholder: {type: String},\n\n    /**\n     * The error message to display when invalid.\n     */\n    errorMessage: {type: String},\n\n    /**\n     * True if the dropdown is open. Otherwise, false.\n     */\n    opened:\n        {type: Boolean, notify: true, value: false, observer: '_openedChanged'},\n\n    /**\n     * By default, the dropdown will constrain scrolling on the page\n     * to itself when opened.\n     * Set to true in order to prevent scroll from being constrained\n     * to the dropdown when it opens.\n     */\n    allowOutsideScroll: {type: Boolean, value: false},\n\n    /**\n     * Set to true to disable the floating label. Bind this to the\n     * `<paper-input-container>`'s `noLabelFloat` property.\n     */\n    noLabelFloat: {type: Boolean, value: false, reflectToAttribute: true},\n\n    /**\n     * Set to true to always float the label. Bind this to the\n     * `<paper-input-container>`'s `alwaysFloatLabel` property.\n     */\n    alwaysFloatLabel: {type: Boolean, value: false},\n\n    /**\n     * Set to true to disable animations when opening and closing the\n     * dropdown.\n     */\n    noAnimations: {type: Boolean, value: false},\n\n    /**\n     * The orientation against which to align the menu dropdown\n     * horizontally relative to the dropdown trigger.\n     */\n    horizontalAlign: {type: String, value: 'right'},\n\n    /**\n     * The orientation against which to align the menu dropdown\n     * vertically relative to the dropdown trigger.\n     */\n    verticalAlign: {type: String, value: 'top'},\n\n    /**\n     * Overrides the vertical offset computed in\n     * _computeMenuVerticalOffset.\n     */\n    verticalOffset: Number,\n\n    /**\n     * If true, the `horizontalAlign` and `verticalAlign` properties will\n     * be considered preferences instead of strict requirements when\n     * positioning the dropdown and may be changed if doing so reduces\n     * the area of the dropdown falling outside of `fitInto`.\n     */\n    dynamicAlign: {type: Boolean},\n\n    /**\n     * Whether focus should be restored to the dropdown when the menu closes.\n     */\n    restoreFocusOnClose: {type: Boolean, value: true},\n  },\n\n  listeners: {'tap': '_onTap'},\n\n  /**\n   * @type {!Object}\n   */\n  keyBindings: {'up down': 'open', 'esc': 'close'},\n\n  hostAttributes:\n      {role: 'combobox', 'aria-autocomplete': 'none', 'aria-haspopup': 'true'},\n\n  observers: ['_selectedItemChanged(selectedItem)'],\n\n  attached: function() {\n    // NOTE(cdata): Due to timing, a preselected value in a `IronSelectable`\n    // child will cause an `iron-select` event to fire while the element is\n    // still in a `DocumentFragment`. This has the effect of causing\n    // handlers not to fire. So, we double check this value on attached:\n    var contentElement = this.contentElement;\n    if (contentElement && contentElement.selectedItem) {\n      this._setSelectedItem(contentElement.selectedItem);\n    }\n  },\n\n  /**\n   * The content element that is contained by the dropdown menu, if any.\n   */\n  get contentElement() {\n    // Polymer 2.x returns slot.assignedNodes which can contain text nodes.\n    var nodes = dom(this.$.content).getDistributedNodes();\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      if (nodes[i].nodeType === Node.ELEMENT_NODE) {\n        return nodes[i];\n      }\n    }\n  },\n\n  /**\n   * Show the dropdown content.\n   */\n  open: function() {\n    this.$.menuButton.open();\n  },\n\n  /**\n   * Hide the dropdown content.\n   */\n  close: function() {\n    this.$.menuButton.close();\n  },\n\n  /**\n   * A handler that is called when `iron-select` is fired.\n   *\n   * @param {CustomEvent} event An `iron-select` event.\n   */\n  _onIronSelect: function(event) {\n    this._setSelectedItem(event.detail.item);\n  },\n\n  /**\n   * A handler that is called when `iron-deselect` is fired.\n   *\n   * @param {CustomEvent} event An `iron-deselect` event.\n   */\n  _onIronDeselect: function(event) {\n    this._setSelectedItem(null);\n  },\n\n  /**\n   * A handler that is called when the dropdown is tapped.\n   *\n   * @param {CustomEvent} event A tap event.\n   */\n  _onTap: function(event) {\n    if (gestures.findOriginalTarget(event) === this) {\n      this.open();\n    }\n  },\n\n  /**\n   * Compute the label for the dropdown given a selected item.\n   *\n   * @param {Element} selectedItem A selected Element item, with an\n   * optional `label` property.\n   */\n  _selectedItemChanged: function(selectedItem) {\n    var value = '';\n    if (!selectedItem) {\n      value = '';\n    } else {\n      value = selectedItem.label || selectedItem.getAttribute('label') ||\n          selectedItem.textContent.trim();\n    }\n\n    this.value = value;\n    this._setSelectedItemLabel(value);\n  },\n\n  /**\n   * Compute the vertical offset of the menu based on the value of\n   * `noLabelFloat`.\n   *\n   * @param {boolean} noLabelFloat True if the label should not float\n   * @param {number=} opt_verticalOffset Optional offset from the user\n   * above the input, otherwise false.\n   */\n  _computeMenuVerticalOffset: function(noLabelFloat, opt_verticalOffset) {\n    // Override offset if it's passed from the user.\n    if (opt_verticalOffset) {\n      return opt_verticalOffset;\n    }\n\n    // NOTE(cdata): These numbers are somewhat magical because they are\n    // derived from the metrics of elements internal to `paper-input`'s\n    // template. The metrics will change depending on whether or not the\n    // input has a floating label.\n    return noLabelFloat ? -4 : 8;\n  },\n\n  /**\n   * Returns false if the element is required and does not have a selection,\n   * and true otherwise.\n   * @param {*=} _value Ignored.\n   * @return {boolean} true if `required` is false, or if `required` is true\n   * and the element has a valid selection.\n   */\n  _getValidity: function(_value) {\n    return this.disabled || !this.required || (this.required && !!this.value);\n  },\n\n  _openedChanged: function() {\n    var openState = this.opened ? 'true' : 'false';\n    var e = this.contentElement;\n    if (e) {\n      e.setAttribute('aria-expanded', openState);\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-iconset-svg/iron-iconset-svg.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML =\n    `<iron-iconset-svg name=\"paper-dropdown-menu\" size=\"24\">\n<svg><defs>\n<g id=\"arrow-drop-down\"><path d=\"M7 10l5 5 5-5z\"></path></g>\n</defs></svg>\n</iron-iconset-svg>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/paper-styles/default-theme.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML =\n    `<dom-module id=\"paper-dropdown-menu-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        text-align: left;\n\n        /* NOTE(cdata): Both values are needed, since some phones require the\n         * value to be \\`transparent\\`.\n         */\n        -webkit-tap-highlight-color: rgba(0,0,0,0);\n        -webkit-tap-highlight-color: transparent;\n\n        --paper-input-container-input: {\n          overflow: hidden;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          max-width: 100%;\n          box-sizing: border-box;\n          cursor: pointer;\n        };\n\n        @apply --paper-dropdown-menu;\n      }\n\n      :host([disabled]) {\n        @apply --paper-dropdown-menu-disabled;\n      }\n\n      :host([noink]) paper-ripple {\n        display: none;\n      }\n\n      :host([no-label-float]) paper-ripple {\n        top: 8px;\n      }\n\n      paper-ripple {\n        top: 12px;\n        left: 0px;\n        bottom: 8px;\n        right: 0px;\n\n        @apply --paper-dropdown-menu-ripple;\n      }\n\n      paper-menu-button {\n        display: block;\n        padding: 0;\n\n        @apply --paper-dropdown-menu-button;\n      }\n\n      paper-input {\n        @apply --paper-dropdown-menu-input;\n      }\n\n      iron-icon {\n        color: var(--disabled-text-color);\n\n        @apply --paper-dropdown-menu-icon;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { HomeAssistant } from \"../../types\";\n\n/** Return if a component is loaded. */\nexport const isComponentLoaded = (\n  hass: HomeAssistant,\n  component: string\n): boolean => hass && hass.config.components.indexOf(component) !== -1;\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n        `${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.generic.theme\"\n        )} (${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.config.optional\"\n        )})`}\n        dynamic-align\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=${this.value}\n          attr-for-selected=\"theme\"\n          @iron-select=${this._changed}\n        >\n          <paper-item theme=\"remove\"\n            >${this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.generic.no_theme\"\n            )}</paper-item\n          >\n          ${Object.keys(this.hass!.themes.themes)\n            .sort()\n            .map((theme) => {\n              return html` <paper-item theme=${theme}>${theme}</paper-item> `;\n            })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.selected === \"\") {\n      return;\n    }\n    this.value = ev.target.selected === \"remove\" ? \"\" : ev.target.selected;\n    fireEvent(this, \"value-changed\", { value: this.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { isComponentLoaded } from \"../../../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { ShoppingListCardConfig } from \"../../cards/types\";\nimport { struct } from \"../../common/structs/struct\";\nimport \"../../components/hui-theme-select-editor\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { EditorTarget, EntitiesEditorEvent } from \"../types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-shopping-list-card-editor\")\nexport class HuiShoppingListEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: ShoppingListCardConfig;\n\n  public setConfig(config: ShoppingListCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"\";\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"card-config\">\n        ${!isComponentLoaded(this.hass, \"shopping_list\")\n          ? html`\n              <div class=\"error\">\n                ${this.hass.localize(\n                  \"ui.panel.lovelace.editor.card.shopping-list.integration_not_loaded\"\n                )}\n              </div>\n            `\n          : \"\"}\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <hui-theme-select-editor\n          .hass=${this.hass}\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .error {\n        color: var(--google-red-500);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-shopping-list-card-editor\": HuiShoppingListEditor;\n  }\n}\n"],"sourceRoot":""}