# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  testall:

    runs-on: ubuntu-latest
    if: always()
    strategy:
      matrix:
        # seems like a waste to create multiple test environments for such a simple package...
        #python-version: [3.6, 3.7, 3.8]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    - name: Test for help
      run: multigifview -h
    - name: Check formatting with black
      run: |
        pip install black
        black --check .


  deploy:

    runs-on: ubuntu-latest
    needs: testall

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel twine
        sudo apt-get install help2man
        pip install -e .
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        git fetch --tags --unshallow
        help2man -N multigifview > man/multigifview.1
        python setup.py sdist bdist_wheel
        twine upload dist/*
