{"version":3,"sources":["webpack:///./src/components/ha-label-badge.ts","webpack:///./src/panels/lovelace/cards/hui-alarm-panel-card.ts","webpack:///./src/data/alarm_control_panel.ts"],"names":["HaLabelBadge","_LitElement","[object Object]","args","super","_initialize","this","property","html","classMap","value","big","Boolean","length","icon","image","label","description","css","changedProperties","_get","_getPrototypeOf","prototype","call","has","shadowRoot","getElementById","style","backgroundImage","LitElement","customElements","define","ICONS","armed_away","armed_custom_bypass","armed_home","armed_night","disarmed","pending","triggered","BUTTONS","customElement","HuiAlarmPanelCard","async","Promise","all","__webpack_require__","e","then","bind","document","createElement","hass","entities","entitiesFallback","type","states","entity","findEntities","query","_config","stateObj","attributes","code_format","config","split","Error","Object","assign","changedProps","oldHass","get","oldConfig","themes","theme","applyThemesOnElement","language","name","friendly_name","_stateDisplay","state","_stateIconLabel","_handleMoreInfo","map","_handleActionClick","_actionDisplay","_handlePadClick","localize","stateLabel","pop","val","currentTarget","_input","input","action","code","undefined","callService","entity_id","fireEvent","entityId"],"mappings":"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","file":"chunk.dd77747b7b6fc7fa2878.js","sourcesContent":["import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport \"./ha-icon\";\n\nclass HaLabelBadge extends LitElement {\n  @property() public value?: string;\n\n  @property() public icon?: string;\n\n  @property() public label?: string;\n\n  @property() public description?: string;\n\n  @property() public image?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"badge-container\">\n        <div class=\"label-badge\" id=\"badge\">\n          <div\n            class=\"${classMap({\n              value: true,\n              big: Boolean(this.value && this.value.length > 4),\n            })}\"\n          >\n            ${this.icon && !this.value && !this.image\n              ? html` <ha-icon .icon=\"${this.icon}\"></ha-icon> `\n              : \"\"}\n            ${this.value && !this.image\n              ? html` <span>${this.value}</span> `\n              : \"\"}\n          </div>\n          ${this.label\n            ? html`\n                <div\n                  class=\"${classMap({\n                    label: true,\n                    big: this.label.length > 5,\n                  })}\"\n                >\n                  <span>${this.label}</span>\n                </div>\n              `\n            : \"\"}\n        </div>\n        ${this.description\n          ? html` <div class=\"title\">${this.description}</div> `\n          : \"\"}\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      css`\n        .badge-container {\n          display: inline-block;\n          text-align: center;\n          vertical-align: top;\n          padding: var(--ha-label-badge-padding, 0 0 0 0);\n        }\n        .label-badge {\n          position: relative;\n          display: block;\n          margin: 0 auto;\n          width: var(--ha-label-badge-size, 2.5em);\n          text-align: center;\n          height: var(--ha-label-badge-size, 2.5em);\n          line-height: var(--ha-label-badge-size, 2.5em);\n          font-size: var(--ha-label-badge-font-size, 1.5em);\n          border-radius: 50%;\n          border: 0.1em solid var(--ha-label-badge-color, var(--primary-color));\n          color: var(--label-badge-text-color, rgb(76, 76, 76));\n\n          white-space: nowrap;\n          background-color: var(--label-badge-background-color, white);\n          background-size: cover;\n          transition: border 0.3s ease-in-out;\n        }\n        .label-badge .value {\n          font-size: 90%;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n        .label-badge .value.big {\n          font-size: 70%;\n        }\n        .label-badge .label {\n          position: absolute;\n          bottom: -1em;\n          /* Make the label as wide as container+border. (parent_borderwidth / font-size) */\n          left: -0.2em;\n          right: -0.2em;\n          line-height: 1em;\n          font-size: 0.5em;\n        }\n        .label-badge .label span {\n          box-sizing: border-box;\n          max-width: 100%;\n          display: inline-block;\n          background-color: var(--ha-label-badge-color, var(--primary-color));\n          color: var(--ha-label-badge-label-color, white);\n          border-radius: 1em;\n          padding: 9% 16% 8% 16%; /* mostly apitalized text, not much descenders => bit more top margin */\n          font-weight: 500;\n          overflow: hidden;\n          text-transform: uppercase;\n          text-overflow: ellipsis;\n          transition: background-color 0.3s ease-in-out;\n          text-transform: var(--ha-label-badge-label-text-transform, uppercase);\n        }\n        .label-badge .label.big span {\n          font-size: 90%;\n          padding: 10% 12% 7% 12%; /* push smaller text a bit down to center vertically */\n        }\n        .badge-container .title {\n          margin-top: 1em;\n          font-size: var(--ha-label-badge-title-font-size, 0.9em);\n          width: var(--ha-label-badge-title-width, 5em);\n          font-weight: var(--ha-label-badge-title-font-weight, 400);\n          overflow: hidden;\n          text-overflow: ellipsis;\n          line-height: normal;\n        }\n      `,\n    ];\n  }\n\n  protected updated(changedProperties: PropertyValues): void {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"image\")) {\n      this.shadowRoot!.getElementById(\"badge\")!.style.backgroundImage = this\n        .image\n        ? `url(${this.image})`\n        : \"\";\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-label-badge\": HaLabelBadge;\n  }\n}\n\ncustomElements.define(\"ha-label-badge\", HaLabelBadge);\n","import \"@polymer/paper-input/paper-input\";\nimport type { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-label-badge\";\nimport {\n  callAlarmAction,\n  FORMAT_NUMBER,\n} from \"../../../data/alarm_control_panel\";\nimport type { HomeAssistant } from \"../../../types\";\nimport { findEntities } from \"../common/find-entites\";\nimport \"../components/hui-warning\";\nimport type { LovelaceCard } from \"../types\";\nimport { AlarmPanelCardConfig } from \"./types\";\n\nconst ICONS = {\n  armed_away: \"hass:shield-lock\",\n  armed_custom_bypass: \"hass:security\",\n  armed_home: \"hass:shield-home\",\n  armed_night: \"hass:shield-home\",\n  disarmed: \"hass:shield-check\",\n  pending: \"hass:shield-outline\",\n  triggered: \"hass:bell-ring\",\n};\n\nconst BUTTONS = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"\", \"0\", \"clear\"];\n\n@customElement(\"hui-alarm-panel-card\")\nclass HuiAlarmPanelCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement() {\n    await import(\n      /* webpackChunkName: \"hui-alarm-panel-card-editor\" */ \"../editor/config-elements/hui-alarm-panel-card-editor\"\n    );\n    return document.createElement(\"hui-alarm-panel-card-editor\");\n  }\n\n  public static getStubConfig(\n    hass: HomeAssistant,\n    entities: string[],\n    entitiesFallback: string[]\n  ): AlarmPanelCardConfig {\n    const includeDomains = [\"alarm_control_panel\"];\n    const maxEntities = 1;\n    const foundEntities = findEntities(\n      hass,\n      maxEntities,\n      entities,\n      entitiesFallback,\n      includeDomains\n    );\n\n    return {\n      type: \"alarm-panel\",\n      states: [\"arm_home\", \"arm_away\"],\n      entity: foundEntities[0] || \"\",\n    };\n  }\n\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: AlarmPanelCardConfig;\n\n  @query(\"#alarmCode\") private _input?: PaperInputElement;\n\n  public getCardSize(): number {\n    if (!this._config || !this.hass) {\n      return 0;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    return !stateObj || stateObj.attributes.code_format !== FORMAT_NUMBER\n      ? 3\n      : 8;\n  }\n\n  public setConfig(config: AlarmPanelCardConfig): void {\n    if (\n      !config ||\n      !config.entity ||\n      config.entity.split(\".\")[0] !== \"alarm_control_panel\"\n    ) {\n      throw new Error(\"Invalid card configuration\");\n    }\n\n    const defaults = {\n      states: [\"arm_away\", \"arm_home\"],\n    };\n\n    this._config = { ...defaults, ...config };\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProps.get(\"_config\") as\n      | AlarmPanelCardConfig\n      | undefined;\n\n    if (\n      !oldHass ||\n      !oldConfig ||\n      oldHass.themes !== this.hass.themes ||\n      oldConfig.theme !== this._config.theme\n    ) {\n      applyThemesOnElement(this, this.hass.themes, this._config.theme);\n    }\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (changedProps.has(\"_config\")) {\n      return true;\n    }\n\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n\n    if (\n      !oldHass ||\n      oldHass.themes !== this.hass!.themes ||\n      oldHass.language !== this.hass!.language\n    ) {\n      return true;\n    }\n    return (\n      oldHass.states[this._config!.entity] !==\n      this.hass!.states[this._config!.entity]\n    );\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning\n          >${this.hass.localize(\n            \"ui.panel.lovelace.warning.entity_not_found\",\n            \"entity\",\n            this._config.entity\n          )}</hui-warning\n        >\n      `;\n    }\n\n    return html`\n      <ha-card\n        .header=\"${this._config.name ||\n        stateObj.attributes.friendly_name ||\n        this._stateDisplay(stateObj.state)}\"\n      >\n        <ha-label-badge\n          class=\"${classMap({ [stateObj.state]: true })}\"\n          .icon=\"${ICONS[stateObj.state] || \"hass:shield-outline\"}\"\n          .label=\"${this._stateIconLabel(stateObj.state)}\"\n          @click=${this._handleMoreInfo}\n        ></ha-label-badge>\n        <div id=\"armActions\" class=\"actions\">\n          ${(stateObj.state === \"disarmed\"\n            ? this._config.states!\n            : [\"disarm\"]\n          ).map((state) => {\n            return html`\n              <mwc-button\n                .action=\"${state}\"\n                @click=\"${this._handleActionClick}\"\n                outlined\n              >\n                ${this._actionDisplay(state)}\n              </mwc-button>\n            `;\n          })}\n        </div>\n        ${!stateObj.attributes.code_format\n          ? html``\n          : html`\n              <paper-input\n                id=\"alarmCode\"\n                label=\"Alarm Code\"\n                type=\"password\"\n              ></paper-input>\n            `}\n        ${stateObj.attributes.code_format !== FORMAT_NUMBER\n          ? html``\n          : html`\n              <div id=\"keypad\">\n                ${BUTTONS.map((value) => {\n                  return value === \"\"\n                    ? html` <mwc-button disabled></mwc-button> `\n                    : html`\n                        <mwc-button\n                          .value=\"${value}\"\n                          @click=\"${this._handlePadClick}\"\n                          outlined\n                        >\n                          ${value === \"clear\"\n                            ? this.hass!.localize(\n                                `ui.card.alarm_control_panel.clear_code`\n                              )\n                            : value}\n                        </mwc-button>\n                      `;\n                })}\n              </div>\n            `}\n      </ha-card>\n    `;\n  }\n\n  private _stateIconLabel(state: string): string {\n    const stateLabel = state.split(\"_\").pop();\n    return stateLabel === \"disarmed\" ||\n      stateLabel === \"triggered\" ||\n      !stateLabel\n      ? \"\"\n      : stateLabel;\n  }\n\n  private _actionDisplay(state: string): string {\n    return this.hass!.localize(`ui.card.alarm_control_panel.${state}`);\n  }\n\n  private _stateDisplay(state: string): string {\n    return this.hass!.localize(\n      `component.alarm_control_panel.state._.${state}`\n    );\n  }\n\n  private _handlePadClick(e: MouseEvent): void {\n    const val = (e.currentTarget! as any).value;\n    this._input!.value = val === \"clear\" ? \"\" : this._input!.value + val;\n  }\n\n  private _handleActionClick(e: MouseEvent): void {\n    const input = this._input;\n    callAlarmAction(\n      this.hass!,\n      this._config!.entity,\n      (e.currentTarget! as any).action,\n      input?.value || undefined\n    );\n    if (input) {\n      input.value = \"\";\n    }\n  }\n\n  private _handleMoreInfo() {\n    fireEvent(this, \"hass-more-info\", {\n      entityId: this._config!.entity,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-card {\n        padding-bottom: 16px;\n        position: relative;\n        --alarm-color-disarmed: var(--label-badge-green);\n        --alarm-color-pending: var(--label-badge-yellow);\n        --alarm-color-triggered: var(--label-badge-red);\n        --alarm-color-armed: var(--label-badge-red);\n        --alarm-color-autoarm: rgba(0, 153, 255, 0.1);\n        --alarm-state-color: var(--alarm-color-armed);\n      }\n\n      ha-label-badge {\n        --ha-label-badge-color: var(--alarm-state-color);\n        --label-badge-text-color: var(--alarm-state-color);\n        --label-badge-background-color: var(--paper-card-background-color);\n        color: var(--alarm-state-color);\n        position: absolute;\n        right: 12px;\n        top: 12px;\n        cursor: pointer;\n      }\n\n      .disarmed {\n        --alarm-state-color: var(--alarm-color-disarmed);\n      }\n\n      .triggered {\n        --alarm-state-color: var(--alarm-color-triggered);\n        animation: pulse 1s infinite;\n      }\n\n      .arming {\n        --alarm-state-color: var(--alarm-color-pending);\n        animation: pulse 1s infinite;\n      }\n\n      .pending {\n        --alarm-state-color: var(--alarm-color-pending);\n        animation: pulse 1s infinite;\n      }\n\n      @keyframes pulse {\n        0% {\n          --ha-label-badge-color: var(--alarm-state-color);\n        }\n        100% {\n          --ha-label-badge-color: rgba(255, 153, 0, 0.3);\n        }\n      }\n\n      paper-input {\n        margin: 0 auto 8px;\n        max-width: 150px;\n        text-align: center;\n      }\n\n      .state {\n        margin-left: 16px;\n        position: relative;\n        bottom: 16px;\n        color: var(--alarm-state-color);\n        animation: none;\n      }\n\n      #keypad {\n        display: flex;\n        justify-content: center;\n        flex-wrap: wrap;\n        margin: auto;\n        width: 100%;\n        max-width: 300px;\n      }\n\n      #keypad mwc-button {\n        text-size: 20px;\n        padding: 8px;\n        width: 30%;\n        box-sizing: border-box;\n      }\n\n      .actions {\n        margin: 0 8px;\n        padding-top: 20px;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n      }\n\n      .actions mwc-button {\n        margin: 0 4px 4px;\n      }\n\n      mwc-button#disarm {\n        color: var(--google-red-500);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-alarm-panel-card\": HuiAlarmPanelCard;\n  }\n}\n","import { HomeAssistant } from \"../types\";\n\nexport const FORMAT_TEXT = \"text\";\nexport const FORMAT_NUMBER = \"number\";\n\nexport const callAlarmAction = (\n  hass: HomeAssistant,\n  entity: string,\n  action:\n    | \"arm_away\"\n    | \"arm_home\"\n    | \"arm_night\"\n    | \"arm_custom_bypass\"\n    | \"disarm\",\n  code?: string\n) => {\n  hass!.callService(\"alarm_control_panel\", `alarm_${action}`, {\n    entity_id: entity,\n    code,\n  });\n};\n"],"sourceRoot":""}