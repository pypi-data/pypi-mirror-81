{"version":3,"sources":["webpack:///./node_modules/@polymer/iron-icon/iron-icon.js","webpack:///./src/components/ha-icon.ts","webpack:///./src/common/string/compare.ts","webpack:///./src/data/integration.ts","webpack:///./src/data/config_entries.ts","webpack:///./src/data/config_flow.ts","webpack:///./src/dialogs/config-flow/show-dialog-data-entry-flow.ts","webpack:///./src/dialogs/config-flow/show-dialog-config-flow.ts","webpack:///./src/onboarding/action-badge.ts","webpack:///./src/onboarding/integration-badge.ts","webpack:///./src/onboarding/onboarding-integrations.ts"],"names":["__webpack_require__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_2__","_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_5__","Polymer","_template","html","is","properties","icon","type","String","theme","src","_meta","value","Base","create","observers","_DEFAULT_ICONSET","_iconChanged","parts","split","this","_iconName","pop","_iconsetName","_updateIcon","_srcChanged","_usesIconset","_img","parentNode","dom","root","removeChild","_iconset","removeIcon","byKey","applyIcon","unlisten","window","listen","document","createElement","style","width","height","draggable","appendChild","ironIconClass","customElements","get","loaded","HaIcon","[object Object]","args","super","node","eventName","methodName","e","then","bind","define","d","__webpack_exports__","compare","caseInsensitiveCompare","a","b","toLowerCase","integrationIssuesUrl","domainToName","fetchIntegrationManifests","fetchIntegrationManifest","domain","localize","hass","callWS","integration","getConfigEntries","updateConfigEntry","deleteConfigEntry","getConfigEntrySystemOptions","updateConfigEntrySystemOptions","callApi","configEntryId","updatedValues","Object","assign","entry_id","params","DISCOVERY_SOURCES","createConfigFlow","fetchConfigFlow","handleConfigFlowStep","ignoreConfigFlow","deleteConfigFlow","getConfigFlowHandlers","getConfigFlowInProgressCollection","subscribeConfigFlowInProgress","localizeConfigFlowTitle","home_assistant_js_websocket__WEBPACK_IMPORTED_MODULE_0__","_common_util_debounce__WEBPACK_IMPORTED_MODULE_1__","_integration__WEBPACK_IMPORTED_MODULE_2__","handler","_hass$userData","show_advanced_options","Boolean","userData","showAdvanced","flowId","data","flow_id","fetchConfigFlowInProgress","conn","sendMessagePromise","subscribeConfigFlowInProgressUpdates","store","subscribeEvents","debounce","flows","setState","getCollection","onChange","connection","subscribe","flow","placeholders","context","title_placeholders","placeholderKeys","keys","length","forEach","key","push","loadDataEntryFlowDialog","showFlowDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","Promise","all","element","dialogParams","flowConfig","fireEvent","dialogTag","dialogImport","loadConfigFlowDialog","showConfigFlowDialog","lit_element__WEBPACK_IMPORTED_MODULE_0__","_common_string_compare__WEBPACK_IMPORTED_MODULE_1__","_common_translations_localize__WEBPACK_IMPORTED_MODULE_2__","_data_config_flow__WEBPACK_IMPORTED_MODULE_3__","_data_integration__WEBPACK_IMPORTED_MODULE_4__","_show_dialog_data_entry_flow__WEBPACK_IMPORTED_MODULE_5__","loadDevicesAndAreas","getFlowHandlers","async","handlers","loadBackendTranslation","undefined","sort","handlerA","handlerB","createFlow","step","fetchFlow","handleFlowStep","deleteFlow","renderAbortDescription","description","localizeKey","reason","description_placeholders","renderShowFormStepHeader","step_id","renderShowFormStepDescription","renderShowFormStepFieldLabel","field","name","renderShowFormStepFieldError","error","renderExternalStepHeader","renderExternalStepDescription","renderCreateEntryDescription","title","customElement","_LitElement","_initialize","property","reflect","badgeIcon","css","LitElement","OnboardingIntegrations","_get","_getPrototypeOf","prototype","call","_unsubEvents","_discovered","_entries","content","map","entry","_continueFlow","item","onboardingLocalize","_createFlow","_finish","changedProps","_loadConfigEntries","t","dialogClosedCallback","refresh","ev","continueFlowId","currentTarget","entries","filter","result","onboardIntegrationStep","client_id","genClientId"],"mappings":"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","file":"chunk.468f8af210eb04682fbc.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {IronMeta} from '@polymer/iron-meta/iron-meta.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {Base} from '@polymer/polymer/polymer-legacy.js';\n\n/**\n\nThe `iron-icon` element displays an icon. By default an icon renders as a 24px\nsquare.\n\nExample using src:\n\n    <iron-icon src=\"star.png\"></iron-icon>\n\nExample setting size to 32px x 32px:\n\n    <iron-icon class=\"big\" src=\"big_star.png\"></iron-icon>\n\n    <style is=\"custom-style\">\n      .big {\n        --iron-icon-height: 32px;\n        --iron-icon-width: 32px;\n      }\n    </style>\n\nThe iron elements include several sets of icons. To use the default set of\nicons, import `iron-icons.js` and use the `icon` attribute to specify an icon:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/iron-icons.js\";\n    </script>\n\n    <iron-icon icon=\"menu\"></iron-icon>\n\nTo use a different built-in set of icons, import the specific\n`iron-icons/<iconset>-icons.js`, and specify the icon as `<iconset>:<icon>`.\nFor example, to use a communication icon, you would use:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/communication-icons.js\";\n    </script>\n\n    <iron-icon icon=\"communication:email\"></iron-icon>\n\nYou can also create custom icon sets of bitmap or SVG icons.\n\nExample of using an icon named `cherry` from a custom iconset with the ID\n`fruit`:\n\n    <iron-icon icon=\"fruit:cherry\"></iron-icon>\n\nSee `<iron-iconset>` and `<iron-iconset-svg>` for more information about how to\ncreate a custom iconset.\n\nSee the `iron-icons` demo to see the icons available in the various iconsets.\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-icon` | Mixin applied to the icon | {}\n`--iron-icon-width` | Width of the icon | `24px`\n`--iron-icon-height` | Height of the icon | `24px`\n`--iron-icon-fill-color` | Fill color of the svg icon | `currentcolor`\n`--iron-icon-stroke-color` | Stroke color of the svg icon | none\n\n@group Iron Elements\n@element iron-icon\n@demo demo/index.html\n@hero hero.svg\n@homepage polymer.github.io\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        @apply --layout-inline;\n        @apply --layout-center-center;\n        position: relative;\n\n        vertical-align: middle;\n\n        fill: var(--iron-icon-fill-color, currentcolor);\n        stroke: var(--iron-icon-stroke-color, none);\n\n        width: var(--iron-icon-width, 24px);\n        height: var(--iron-icon-height, 24px);\n        @apply --iron-icon;\n      }\n\n      :host([hidden]) {\n        display: none;\n      }\n    </style>\n`,\n\n  is: 'iron-icon',\n\n  properties: {\n\n    /**\n     * The name of the icon to use. The name should be of the form:\n     * `iconset_name:icon_name`.\n     */\n    icon: {type: String},\n\n    /**\n     * The name of the theme to used, if one is specified by the\n     * iconset.\n     */\n    theme: {type: String},\n\n    /**\n     * If using iron-icon without an iconset, you can set the src to be\n     * the URL of an individual icon image file. Note that this will take\n     * precedence over a given icon attribute.\n     */\n    src: {type: String},\n\n    /**\n     * @type {!IronMeta}\n     */\n    _meta: {value: Base.create('iron-meta', {type: 'iconset'})}\n\n  },\n\n  observers: [\n    '_updateIcon(_meta, isAttached)',\n    '_updateIcon(theme, isAttached)',\n    '_srcChanged(src, isAttached)',\n    '_iconChanged(icon, isAttached)'\n  ],\n\n  _DEFAULT_ICONSET: 'icons',\n\n  _iconChanged: function(icon) {\n    var parts = (icon || '').split(':');\n    this._iconName = parts.pop();\n    this._iconsetName = parts.pop() || this._DEFAULT_ICONSET;\n    this._updateIcon();\n  },\n\n  _srcChanged: function(src) {\n    this._updateIcon();\n  },\n\n  _usesIconset: function() {\n    return this.icon || !this.src;\n  },\n\n  /** @suppress {visibility} */\n  _updateIcon: function() {\n    if (this._usesIconset()) {\n      if (this._img && this._img.parentNode) {\n        dom(this.root).removeChild(this._img);\n      }\n      if (this._iconName === '') {\n        if (this._iconset) {\n          this._iconset.removeIcon(this);\n        }\n      } else if (this._iconsetName && this._meta) {\n        this._iconset = /** @type {?Polymer.Iconset} */ (\n            this._meta.byKey(this._iconsetName));\n        if (this._iconset) {\n          this._iconset.applyIcon(this, this._iconName, this.theme);\n          this.unlisten(window, 'iron-iconset-added', '_updateIcon');\n        } else {\n          this.listen(window, 'iron-iconset-added', '_updateIcon');\n        }\n      }\n    } else {\n      if (this._iconset) {\n        this._iconset.removeIcon(this);\n      }\n      if (!this._img) {\n        this._img = document.createElement('img');\n        this._img.style.width = '100%';\n        this._img.style.height = '100%';\n        this._img.draggable = false;\n      }\n      this._img.src = this.src;\n      dom(this.root).appendChild(this._img);\n    }\n  }\n});\n","import \"@polymer/iron-icon/iron-icon\";\nimport type { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\nimport { Constructor } from \"../types\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { LocalizeFunc } from \"../common/translations/localize\";\nimport { HomeAssistant } from \"../types\";\n\nexport interface IntegrationManifest {\n  is_built_in: boolean;\n  domain: string;\n  name: string;\n  config_flow: boolean;\n  documentation: string;\n  dependencies?: string[];\n  after_dependencies?: string[];\n  codeowners?: string[];\n  requirements?: string[];\n  ssdp?: Array<{ manufacturer?: string; modelName?: string; st?: string }>;\n  zeroconf?: string[];\n  homekit?: { models: string[] };\n  quality_scale?: string;\n}\n\nexport const integrationIssuesUrl = (domain: string) =>\n  `https://github.com/home-assistant/home-assistant/issues?q=is%3Aissue+is%3Aopen+label%3A%22integration%3A+${domain}%22`;\n\nexport const domainToName = (localize: LocalizeFunc, domain: string) =>\n  localize(`component.${domain}.title`) || domain;\n\nexport const fetchIntegrationManifests = (hass: HomeAssistant) =>\n  hass.callWS<IntegrationManifest[]>({ type: \"manifest/list\" });\n\nexport const fetchIntegrationManifest = (\n  hass: HomeAssistant,\n  integration: string\n) => hass.callWS<IntegrationManifest>({ type: \"manifest/get\", integration });\n","import { HomeAssistant } from \"../types\";\n\nexport interface ConfigEntry {\n  entry_id: string;\n  domain: string;\n  title: string;\n  source: string;\n  state: string;\n  connection_class: string;\n  supports_options: boolean;\n}\n\nexport interface ConfigEntryMutableParams {\n  title: string;\n}\n\nexport interface ConfigEntrySystemOptions {\n  disable_new_entities: boolean;\n}\n\nexport const getConfigEntries = (hass: HomeAssistant) =>\n  hass.callApi<ConfigEntry[]>(\"GET\", \"config/config_entries/entry\");\n\nexport const updateConfigEntry = (\n  hass: HomeAssistant,\n  configEntryId: string,\n  updatedValues: Partial<ConfigEntryMutableParams>\n) =>\n  hass.callWS<ConfigEntry>({\n    type: \"config_entries/update\",\n    entry_id: configEntryId,\n    ...updatedValues,\n  });\n\nexport const deleteConfigEntry = (hass: HomeAssistant, configEntryId: string) =>\n  hass.callApi<{\n    require_restart: boolean;\n  }>(\"DELETE\", `config/config_entries/entry/${configEntryId}`);\n\nexport const getConfigEntrySystemOptions = (\n  hass: HomeAssistant,\n  configEntryId: string\n) =>\n  hass.callWS<ConfigEntrySystemOptions>({\n    type: \"config_entries/system_options/list\",\n    entry_id: configEntryId,\n  });\n\nexport const updateConfigEntrySystemOptions = (\n  hass: HomeAssistant,\n  configEntryId: string,\n  params: Partial<ConfigEntrySystemOptions>\n) =>\n  hass.callWS({\n    type: \"config_entries/system_options/update\",\n    entry_id: configEntryId,\n    ...params,\n  });\n","import { Connection, getCollection } from \"home-assistant-js-websocket\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { debounce } from \"../common/util/debounce\";\nimport { HomeAssistant } from \"../types\";\nimport { DataEntryFlowProgress, DataEntryFlowStep } from \"./data_entry_flow\";\nimport { domainToName } from \"./integration\";\n\nexport const DISCOVERY_SOURCES = [\"unignore\", \"homekit\", \"ssdp\", \"zeroconf\"];\n\nexport const createConfigFlow = (hass: HomeAssistant, handler: string) =>\n  hass.callApi<DataEntryFlowStep>(\"POST\", \"config/config_entries/flow\", {\n    handler,\n    show_advanced_options: Boolean(hass.userData?.showAdvanced),\n  });\n\nexport const fetchConfigFlow = (hass: HomeAssistant, flowId: string) =>\n  hass.callApi<DataEntryFlowStep>(\n    \"GET\",\n    `config/config_entries/flow/${flowId}`\n  );\n\nexport const handleConfigFlowStep = (\n  hass: HomeAssistant,\n  flowId: string,\n  data: { [key: string]: any }\n) =>\n  hass.callApi<DataEntryFlowStep>(\n    \"POST\",\n    `config/config_entries/flow/${flowId}`,\n    data\n  );\n\nexport const ignoreConfigFlow = (hass: HomeAssistant, flowId: string) =>\n  hass.callWS({ type: \"config_entries/ignore_flow\", flow_id: flowId });\n\nexport const deleteConfigFlow = (hass: HomeAssistant, flowId: string) =>\n  hass.callApi(\"DELETE\", `config/config_entries/flow/${flowId}`);\n\nexport const getConfigFlowHandlers = (hass: HomeAssistant) =>\n  hass.callApi<string[]>(\"GET\", \"config/config_entries/flow_handlers\");\n\nconst fetchConfigFlowInProgress = (conn) =>\n  conn.sendMessagePromise({\n    type: \"config_entries/flow/progress\",\n  });\n\nconst subscribeConfigFlowInProgressUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchConfigFlowInProgress(conn).then((flows) =>\n          store.setState(flows, true)\n        ),\n      500,\n      true\n    ),\n    \"config_entry_discovered\"\n  );\n\nexport const getConfigFlowInProgressCollection = (conn: Connection) =>\n  getCollection<DataEntryFlowProgress[]>(\n    conn,\n    \"_configFlowProgress\",\n    fetchConfigFlowInProgress,\n    subscribeConfigFlowInProgressUpdates\n  );\n\nexport const subscribeConfigFlowInProgress = (\n  hass: HomeAssistant,\n  onChange: (flows: DataEntryFlowProgress[]) => void\n) => getConfigFlowInProgressCollection(hass.connection).subscribe(onChange);\n\nexport const localizeConfigFlowTitle = (\n  localize: LocalizeFunc,\n  flow: DataEntryFlowProgress\n) => {\n  const placeholders = flow.context.title_placeholders || {};\n  const placeholderKeys = Object.keys(placeholders);\n  if (placeholderKeys.length === 0) {\n    return domainToName(localize, flow.handler);\n  }\n  const args: string[] = [];\n  placeholderKeys.forEach((key) => {\n    args.push(key);\n    args.push(placeholders[key]);\n  });\n  return localize(`component.${flow.handler}.config.flow_title`, ...args);\n};\n","import { TemplateResult } from \"lit-html\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { HaFormSchema } from \"../../components/ha-form/ha-form\";\nimport {\n  DataEntryFlowStep,\n  DataEntryFlowStepAbort,\n  DataEntryFlowStepCreateEntry,\n  DataEntryFlowStepExternal,\n  DataEntryFlowStepForm,\n} from \"../../data/data_entry_flow\";\nimport { HomeAssistant } from \"../../types\";\n\nexport interface FlowConfig {\n  loadDevicesAndAreas: boolean;\n\n  getFlowHandlers?: (hass: HomeAssistant) => Promise<string[]>;\n\n  createFlow(hass: HomeAssistant, handler: string): Promise<DataEntryFlowStep>;\n\n  fetchFlow(hass: HomeAssistant, flowId: string): Promise<DataEntryFlowStep>;\n\n  handleFlowStep(\n    hass: HomeAssistant,\n    flowId: string,\n    data: { [key: string]: any }\n  ): Promise<DataEntryFlowStep>;\n\n  deleteFlow(hass: HomeAssistant, flowId: string): Promise<unknown>;\n\n  renderAbortDescription(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepAbort\n  ): TemplateResult | \"\";\n\n  renderShowFormStepHeader(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepForm\n  ): string;\n\n  renderShowFormStepDescription(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepForm\n  ): TemplateResult | \"\";\n\n  renderShowFormStepFieldLabel(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepForm,\n    field: HaFormSchema\n  ): string;\n\n  renderShowFormStepFieldError(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepForm,\n    error: string\n  ): string;\n\n  renderExternalStepHeader(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepExternal\n  ): string;\n\n  renderExternalStepDescription(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepExternal\n  ): TemplateResult | \"\";\n\n  renderCreateEntryDescription(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepCreateEntry\n  ): TemplateResult | \"\";\n}\n\nexport interface DataEntryFlowDialogParams {\n  startFlowHandler?: string;\n  continueFlowId?: string;\n  dialogClosedCallback?: (params: { flowFinished: boolean }) => void;\n  flowConfig: FlowConfig;\n  showAdvanced?: boolean;\n}\n\nexport const loadDataEntryFlowDialog = () =>\n  import(\n    /* webpackChunkName: \"dialog-config-flow\" */ \"./dialog-data-entry-flow\"\n  );\n\nexport const showFlowDialog = (\n  element: HTMLElement,\n  dialogParams: Omit<DataEntryFlowDialogParams, \"flowConfig\">,\n  flowConfig: FlowConfig\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-data-entry-flow\",\n    dialogImport: loadDataEntryFlowDialog,\n    dialogParams: {\n      ...dialogParams,\n      flowConfig,\n    },\n  });\n};\n","import { html } from \"lit-element\";\nimport { caseInsensitiveCompare } from \"../../common/string/compare\";\nimport { localizeKey } from \"../../common/translations/localize\";\nimport {\n  createConfigFlow,\n  deleteConfigFlow,\n  fetchConfigFlow,\n  getConfigFlowHandlers,\n  handleConfigFlowStep,\n} from \"../../data/config_flow\";\nimport { domainToName } from \"../../data/integration\";\nimport {\n  DataEntryFlowDialogParams,\n  loadDataEntryFlowDialog,\n  showFlowDialog,\n} from \"./show-dialog-data-entry-flow\";\n\nexport const loadConfigFlowDialog = loadDataEntryFlowDialog;\n\nexport const showConfigFlowDialog = (\n  element: HTMLElement,\n  dialogParams: Omit<DataEntryFlowDialogParams, \"flowConfig\">\n): void =>\n  showFlowDialog(element, dialogParams, {\n    loadDevicesAndAreas: true,\n    getFlowHandlers: async (hass) => {\n      const [handlers] = await Promise.all([\n        getConfigFlowHandlers(hass),\n        hass.loadBackendTranslation(\"title\", undefined, true),\n      ]);\n\n      return handlers.sort((handlerA, handlerB) =>\n        caseInsensitiveCompare(\n          domainToName(hass.localize, handlerA),\n          domainToName(hass.localize, handlerB)\n        )\n      );\n    },\n    createFlow: async (hass, handler) => {\n      const [step] = await Promise.all([\n        createConfigFlow(hass, handler),\n        hass.loadBackendTranslation(\"config\", handler),\n      ]);\n      return step;\n    },\n    fetchFlow: async (hass, flowId) => {\n      const step = await fetchConfigFlow(hass, flowId);\n      await hass.loadBackendTranslation(\"config\", step.handler);\n      return step;\n    },\n    handleFlowStep: handleConfigFlowStep,\n    deleteFlow: deleteConfigFlow,\n\n    renderAbortDescription(hass, step) {\n      const description = localizeKey(\n        hass.localize,\n        `component.${step.handler}.config.abort.${step.reason}`,\n        step.description_placeholders\n      );\n\n      return description\n        ? html`\n            <ha-markdown allowsvg breaks .content=${description}></ha-markdown>\n          `\n        : \"\";\n    },\n\n    renderShowFormStepHeader(hass, step) {\n      return (\n        hass.localize(\n          `component.${step.handler}.config.step.${step.step_id}.title`\n        ) || hass.localize(`component.${step.handler}.title`)\n      );\n    },\n\n    renderShowFormStepDescription(hass, step) {\n      const description = localizeKey(\n        hass.localize,\n        `component.${step.handler}.config.step.${step.step_id}.description`,\n        step.description_placeholders\n      );\n      return description\n        ? html`\n            <ha-markdown allowsvg breaks .content=${description}></ha-markdown>\n          `\n        : \"\";\n    },\n\n    renderShowFormStepFieldLabel(hass, step, field) {\n      return hass.localize(\n        `component.${step.handler}.config.step.${step.step_id}.data.${field.name}`\n      );\n    },\n\n    renderShowFormStepFieldError(hass, step, error) {\n      return hass.localize(`component.${step.handler}.config.error.${error}`);\n    },\n\n    renderExternalStepHeader(hass, step) {\n      return hass.localize(\n        `component.${step.handler}.config.step.${step.step_id}.title`\n      );\n    },\n\n    renderExternalStepDescription(hass, step) {\n      const description = localizeKey(\n        hass.localize,\n        `component.${step.handler}.config.${step.step_id}.description`,\n        step.description_placeholders\n      );\n\n      return html`\n        <p>\n          ${hass.localize(\n            \"ui.panel.config.integrations.config_flow.external_step.description\"\n          )}\n        </p>\n        ${description\n          ? html`\n              <ha-markdown\n                allowsvg\n                breaks\n                .content=${description}\n              ></ha-markdown>\n            `\n          : \"\"}\n      `;\n    },\n\n    renderCreateEntryDescription(hass, step) {\n      const description = localizeKey(\n        hass.localize,\n        `component.${step.handler}.config.create_entry.${\n          step.description || \"default\"\n        }`,\n        step.description_placeholders\n      );\n\n      return html`\n        ${description\n          ? html`\n              <ha-markdown\n                allowsvg\n                breaks\n                .content=${description}\n              ></ha-markdown>\n            `\n          : \"\"}\n        <p>\n          ${hass.localize(\n            \"ui.panel.config.integrations.config_flow.created_config\",\n            \"name\",\n            step.title\n          )}\n        </p>\n      `;\n    },\n  });\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../components/ha-icon\";\n\n@customElement(\"action-badge\")\nclass ActionBadge extends LitElement {\n  @property() public icon!: string;\n\n  @property() public title!: string;\n\n  @property() public badgeIcon?: string;\n\n  @property({ type: Boolean, reflect: true }) public clickable = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"icon\">\n        <iron-icon .icon=${this.icon}></iron-icon>\n        ${this.badgeIcon\n          ? html` <ha-icon class=\"badge\" .icon=${this.badgeIcon}></ha-icon> `\n          : \"\"}\n      </div>\n      <div class=\"title\">${this.title}</div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: inline-flex;\n        flex-direction: column;\n        text-align: center;\n        color: var(--primary-text-color);\n      }\n\n      :host([clickable]) {\n        color: var(--primary-text-color);\n      }\n\n      .icon {\n        position: relative;\n        box-sizing: border-box;\n        margin: 0 auto 8px;\n        height: 40px;\n        width: 40px;\n        border-radius: 50%;\n        border: 1px solid var(--secondary-text-color);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      :host([clickable]) .icon {\n        border-color: var(--primary-color);\n        border-width: 2px;\n      }\n\n      .badge {\n        position: absolute;\n        color: var(--primary-color);\n        bottom: -5px;\n        right: -5px;\n        background-color: white;\n        border-radius: 50%;\n        width: 18px;\n        display: block;\n        height: 18px;\n      }\n\n      .title {\n        min-height: 2.3em;\n        word-break: break-word;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"action-badge\": ActionBadge;\n  }\n}\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../components/ha-icon\";\n\n@customElement(\"integration-badge\")\nclass IntegrationBadge extends LitElement {\n  @property() public domain!: string;\n\n  @property() public title!: string;\n\n  @property() public badgeIcon?: string;\n\n  @property({ type: Boolean, reflect: true }) public clickable = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"icon\">\n        <img\n          src=\"https://brands.home-assistant.io/${this.domain}/icon.png\"\n          referrerpolicy=\"no-referrer\"\n        />\n        ${this.badgeIcon\n          ? html` <ha-icon class=\"badge\" .icon=${this.badgeIcon}></ha-icon> `\n          : \"\"}\n      </div>\n      <div class=\"title\">${this.title}</div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: inline-flex;\n        flex-direction: column;\n        text-align: center;\n        color: var(--primary-text-color);\n      }\n\n      :host([clickable]) {\n        color: var(--primary-text-color);\n      }\n\n      img {\n        max-width: 100%;\n        max-height: 100%;\n      }\n\n      .icon {\n        position: relative;\n        margin: 0 auto 8px;\n        height: 40px;\n        width: 40px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      :host([clickable]) .icon {\n      }\n\n      .badge {\n        position: absolute;\n        color: white;\n        bottom: -7px;\n        right: -10px;\n        background-color: var(--label-badge-green);\n        border-radius: 50%;\n        width: 18px;\n        display: block;\n        height: 18px;\n        border: 2px solid white;\n      }\n\n      .title {\n        min-height: 2.3em;\n        word-break: break-word;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"integration-badge\": IntegrationBadge;\n  }\n}\n","import \"@material/mwc-button/mwc-button\";\nimport { genClientId } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { compare } from \"../common/string/compare\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { ConfigEntry, getConfigEntries } from \"../data/config_entries\";\nimport {\n  getConfigFlowInProgressCollection,\n  localizeConfigFlowTitle,\n  subscribeConfigFlowInProgress,\n} from \"../data/config_flow\";\nimport { DataEntryFlowProgress } from \"../data/data_entry_flow\";\nimport { domainToName } from \"../data/integration\";\nimport { onboardIntegrationStep } from \"../data/onboarding\";\nimport {\n  loadConfigFlowDialog,\n  showConfigFlowDialog,\n} from \"../dialogs/config-flow/show-dialog-config-flow\";\nimport { HomeAssistant } from \"../types\";\nimport \"./action-badge\";\nimport \"./integration-badge\";\n\n@customElement(\"onboarding-integrations\")\nclass OnboardingIntegrations extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _entries?: ConfigEntry[];\n\n  @property() private _discovered?: DataEntryFlowProgress[];\n\n  private _unsubEvents?: () => void;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this.hass.loadBackendTranslation(\"title\", undefined, true);\n    this._unsubEvents = subscribeConfigFlowInProgress(this.hass, (flows) => {\n      this._discovered = flows;\n      for (const flow of flows) {\n        // To render title placeholders\n        if (flow.context.title_placeholders) {\n          this.hass.loadBackendTranslation(\"config\", flow.handler);\n        }\n      }\n    });\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubEvents) {\n      this._unsubEvents();\n      this._unsubEvents = undefined;\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this._entries || !this._discovered) {\n      return html``;\n    }\n    // Render discovered and existing entries together sorted by localized title.\n    const entries: Array<[string, TemplateResult]> = this._entries.map(\n      (entry) => {\n        const title = domainToName(this.hass.localize, entry.domain);\n        return [\n          title,\n          html`\n            <integration-badge\n              .domain=${entry.domain}\n              .title=${title}\n              badgeIcon=\"hass:check\"\n            ></integration-badge>\n          `,\n        ];\n      }\n    );\n    const discovered: Array<[string, TemplateResult]> = this._discovered.map(\n      (flow) => {\n        const title = localizeConfigFlowTitle(this.hass.localize, flow);\n        return [\n          title,\n          html`\n            <button .flowId=${flow.flow_id} @click=${this._continueFlow}>\n              <integration-badge\n                clickable\n                .domain=${flow.handler}\n                .title=${title}\n              ></integration-badge>\n            </button>\n          `,\n        ];\n      }\n    );\n    const content = [...entries, ...discovered]\n      .sort((a, b) => compare(a[0], b[0]))\n      .map((item) => item[1]);\n\n    return html`\n      <p>\n        ${this.onboardingLocalize(\"ui.panel.page-onboarding.integration.intro\")}\n      </p>\n      <div class=\"badges\">\n        ${content}\n        <button @click=${this._createFlow}>\n          <action-badge\n            clickable\n            title=${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.integration.more_integrations\"\n            )}\n            icon=\"hass:dots-horizontal\"\n          ></action-badge>\n        </button>\n      </div>\n      <div class=\"footer\">\n        <mwc-button @click=${this._finish}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.integration.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    loadConfigFlowDialog();\n    this._loadConfigEntries();\n    /* polyfill for paper-dropdown */\n    import(\n      /* webpackChunkName: \"polyfill-web-animations-next\" */ \"web-animations-js/web-animations-next-lite.min\"\n    );\n  }\n\n  private _createFlow() {\n    showConfigFlowDialog(this, {\n      dialogClosedCallback: () => {\n        this._loadConfigEntries();\n        getConfigFlowInProgressCollection(this.hass!.connection).refresh();\n      },\n    });\n  }\n\n  private _continueFlow(ev) {\n    showConfigFlowDialog(this, {\n      continueFlowId: ev.currentTarget.flowId,\n      dialogClosedCallback: () => {\n        this._loadConfigEntries();\n        getConfigFlowInProgressCollection(this.hass!.connection).refresh();\n      },\n    });\n  }\n\n  private async _loadConfigEntries() {\n    const entries = await getConfigEntries(this.hass!);\n    // We filter out the config entry for the local weather.\n    // It is one that we create automatically and it will confuse the user\n    // if it starts showing up during onboarding.\n    this._entries = entries.filter((entry) => entry.domain !== \"met\");\n  }\n\n  private async _finish() {\n    const result = await onboardIntegrationStep(this.hass, {\n      client_id: genClientId(),\n    });\n    fireEvent(this, \"onboarding-step\", {\n      type: \"integration\",\n      result,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .badges {\n        margin-top: 24px;\n        display: flex;\n        flex-direction: row;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n        align-items: flex-start;\n      }\n      .badges > * {\n        width: 96px;\n        margin-bottom: 24px;\n      }\n      button {\n        cursor: pointer;\n        padding: 0;\n        border: 0;\n        background: 0;\n        font: inherit;\n      }\n      .footer {\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-integrations\": OnboardingIntegrations;\n  }\n}\n"],"sourceRoot":""}