{"version":3,"sources":["webpack:///./src/data/input_text.ts","webpack:///./src/panels/lovelace/entity-rows/hui-input-number-entity-row.ts"],"names":["__webpack_require__","d","__webpack_exports__","setValue","fetchInputText","createInputText","updateInputText","deleteInputText","hass","entity","value","callService","split","entity_id","callWS","type","values","Object","assign","id","updates","input_text_id","customElement","HuiInputNumberEntityRow","property","config","Error","this","_config","_get","_getPrototypeOf","prototype","call","_updated","_loaded","_initialLoad","isConnected","changedProps","hasConfigOrEntityChanged","html","_templateObject","stateObj","states","_templateObject3","attributes","mode","_templateObject4","UNAVAILABLE_STATES","includes","state","computeRTLDirection","Number","step","min","max","_selectedValueChanged","unit_of_measurement","_templateObject5","_templateObject2","localize","css","_templateObject6","_callee","element","regeneratorRuntime","wrap","_context","prev","next","updateComplete","shadowRoot","querySelector","parentElement","abrupt","hidden","clientWidth","stop","getElementById","_inputElement","LitElement"],"mappings":"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","file":"chunk.1b438129870e077d236b.js","sourcesContent":["import { HomeAssistant } from \"../types\";\n\nexport interface InputText {\n  id: string;\n  name: string;\n  icon?: string;\n  initial?: string;\n  min?: number;\n  max?: number;\n  pattern?: string;\n  mode?: \"text\" | \"password\";\n}\n\nexport interface InputTextMutableParams {\n  name: string;\n  icon: string;\n  initial: string;\n  min: number;\n  max: number;\n  pattern: string;\n  mode: \"text\" | \"password\";\n}\n\nexport const setValue = (hass: HomeAssistant, entity: string, value: string) =>\n  hass.callService(entity.split(\".\", 1)[0], \"set_value\", {\n    value,\n    entity_id: entity,\n  });\n\nexport const fetchInputText = (hass: HomeAssistant) =>\n  hass.callWS<InputText[]>({ type: \"input_text/list\" });\n\nexport const createInputText = (\n  hass: HomeAssistant,\n  values: InputTextMutableParams\n) =>\n  hass.callWS<InputText>({\n    type: \"input_text/create\",\n    ...values,\n  });\n\nexport const updateInputText = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<InputTextMutableParams>\n) =>\n  hass.callWS<InputText>({\n    type: \"input_text/update\",\n    input_text_id: id,\n    ...updates,\n  });\n\nexport const deleteInputText = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"input_text/delete\",\n    input_text_id: id,\n  });\n","import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { computeRTLDirection } from \"../../../common/util/compute_rtl\";\nimport \"../../../components/ha-slider\";\nimport { UNAVAILABLE_STATES } from \"../../../data/entity\";\nimport { setValue } from \"../../../data/input_text\";\nimport { HomeAssistant } from \"../../../types\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-generic-entity-row\";\nimport \"../components/hui-warning\";\nimport { EntityConfig, LovelaceRow } from \"./types\";\n\n@customElement(\"hui-input-number-entity-row\")\nclass HuiInputNumberEntityRow extends LitElement implements LovelaceRow {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: EntityConfig;\n\n  private _loaded?: boolean;\n\n  private _updated?: boolean;\n\n  public setConfig(config: EntityConfig): void {\n    if (!config) {\n      throw new Error(\"Configuration error\");\n    }\n    this._config = config;\n  }\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    if (this._updated && !this._loaded) {\n      this._initialLoad();\n    }\n  }\n\n  protected firstUpdated(): void {\n    this._updated = true;\n    if (this.isConnected && !this._loaded) {\n      this._initialLoad();\n    }\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning\n          >${this.hass.localize(\n            \"ui.panel.lovelace.warning.entity_not_found\",\n            \"entity\",\n            this._config.entity\n          )}</hui-warning\n        >\n      `;\n    }\n\n    return html`\n      <hui-generic-entity-row .hass=${this.hass} .config=${this._config}>\n        ${stateObj.attributes.mode === \"slider\"\n          ? html`\n              <div class=\"flex\">\n                <ha-slider\n                  .disabled=${UNAVAILABLE_STATES.includes(stateObj.state)}\n                  .dir=\"${computeRTLDirection(this.hass!)}\"\n                  .step=\"${Number(stateObj.attributes.step)}\"\n                  .min=\"${Number(stateObj.attributes.min)}\"\n                  .max=\"${Number(stateObj.attributes.max)}\"\n                  .value=\"${Number(stateObj.state)}\"\n                  pin\n                  @change=\"${this._selectedValueChanged}\"\n                  ignore-bar-touch\n                  id=\"input\"\n                ></ha-slider>\n                <span class=\"state\">\n                  ${Number(stateObj.state)}\n                  ${stateObj.attributes.unit_of_measurement}\n                </span>\n              </div>\n            `\n          : html`\n              <paper-input\n                no-label-float\n                auto-validate\n                .disabled=${UNAVAILABLE_STATES.includes(stateObj.state)}\n                .pattern=\"[0-9]+([\\\\.][0-9]+)?\"\n                .step=\"${Number(stateObj.attributes.step)}\"\n                .min=\"${Number(stateObj.attributes.min)}\"\n                .max=\"${Number(stateObj.attributes.max)}\"\n                .value=\"${Number(stateObj.state)}\"\n                type=\"number\"\n                @change=\"${this._selectedValueChanged}\"\n                id=\"input\"\n              ></paper-input>\n            `}\n      </hui-generic-entity-row>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .flex {\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        flex-grow: 2;\n      }\n      .state {\n        min-width: 45px;\n        text-align: end;\n      }\n      paper-input {\n        text-align: end;\n      }\n      ha-slider {\n        width: 100%;\n        max-width: 200px;\n      }\n    `;\n  }\n\n  private async _initialLoad(): Promise<void> {\n    this._loaded = true;\n    await this.updateComplete;\n    const element = this.shadowRoot!.querySelector(\".state\") as HTMLElement;\n\n    if (!element || !this.parentElement) {\n      return;\n    }\n\n    element.hidden = this.parentElement.clientWidth <= 350;\n  }\n\n  private get _inputElement(): { value: string } {\n    // linter recommended the following syntax\n    return (this.shadowRoot!.getElementById(\"input\") as unknown) as {\n      value: string;\n    };\n  }\n\n  private _selectedValueChanged(): void {\n    const element = this._inputElement;\n    const stateObj = this.hass!.states[this._config!.entity];\n\n    if (element.value !== stateObj.state) {\n      setValue(this.hass!, stateObj.entity_id, element.value!);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-input-number-entity-row\": HuiInputNumberEntityRow;\n  }\n}\n"],"sourceRoot":""}