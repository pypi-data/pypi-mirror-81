{"version":3,"sources":["webpack:///./src/common/datetime/seconds_to_duration.ts","webpack:///./src/common/entity/timer_time_remaining.ts","webpack:///./src/common/datetime/duration_to_seconds.ts","webpack:///./src/panels/lovelace/entity-rows/hui-timer-entity-row.ts"],"names":["__webpack_require__","d","__webpack_exports__","secondsToDuration","leftPad","num","concat","h","Math","floor","m","s","timer_time_remaining_timerTimeRemaining","timerTimeRemaining","stateObj","duration","parts","timeRemaining","attributes","remaining","split","map","Number","state","now","Date","getTime","madeActive","last_changed","max","customElement","HuiTimerEntityRow","property","config","Error","this","_config","_get","_getPrototypeOf","prototype","call","_clearInterval","entity","hass","states","_startInterval","html","_templateObject","_templateObject3","_computeDisplay","_templateObject2","localize","changedProps","has","hasConfigOrEntityChanged","oldHass","get","undefined","_interval","window","clearInterval","_this2","_calculateRemaining","setInterval","_timeRemaining","display","LitElement"],"mappings":"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","file":"chunk.74b8b8c3a11723dbb7b5.js","sourcesContent":["const leftPad = (num: number) => (num < 10 ? `0${num}` : num);\n\nexport default function secondsToDuration(d: number) {\n  const h = Math.floor(d / 3600);\n  const m = Math.floor((d % 3600) / 60);\n  const s = Math.floor((d % 3600) % 60);\n\n  if (h > 0) {\n    return `${h}:${leftPad(m)}:${leftPad(s)}`;\n  }\n  if (m > 0) {\n    return `${m}:${leftPad(s)}`;\n  }\n  if (s > 0) {\n    return \"\" + s;\n  }\n  return null;\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport durationToSeconds from \"../datetime/duration_to_seconds\";\n\nexport const timerTimeRemaining = (stateObj: HassEntity) => {\n  let timeRemaining = durationToSeconds(stateObj.attributes.remaining);\n\n  if (stateObj.state === \"active\") {\n    const now = new Date().getTime();\n    const madeActive = new Date(stateObj.last_changed).getTime();\n    timeRemaining = Math.max(timeRemaining - (now - madeActive) / 1000, 0);\n  }\n\n  return timeRemaining;\n};\n","export default function durationToSeconds(duration: string): number {\n  const parts = duration.split(\":\").map(Number);\n  return parts[0] * 3600 + parts[1] * 60 + parts[2];\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport secondsToDuration from \"../../../common/datetime/seconds_to_duration\";\nimport { timerTimeRemaining } from \"../../../common/entity/timer_time_remaining\";\nimport { HomeAssistant } from \"../../../types\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-generic-entity-row\";\nimport \"../components/hui-warning\";\nimport { EntityConfig } from \"./types\";\n\n@customElement(\"hui-timer-entity-row\")\nclass HuiTimerEntityRow extends LitElement {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: EntityConfig;\n\n  @property() private _timeRemaining?: number;\n\n  private _interval?: number;\n\n  public setConfig(config: EntityConfig): void {\n    if (!config) {\n      throw new Error(\"Configuration error\");\n    }\n    this._config = config;\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this._clearInterval();\n  }\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    if (this._config && this._config.entity) {\n      const stateObj = this.hass!.states[this._config!.entity];\n      if (stateObj) {\n        this._startInterval(stateObj);\n      }\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning\n          >${this.hass.localize(\n            \"ui.panel.lovelace.warning.entity_not_found\",\n            \"entity\",\n            this._config.entity\n          )}</hui-warning\n        >\n      `;\n    }\n\n    return html`\n      <hui-generic-entity-row .hass=${this.hass} .config=${this._config}>\n        <div class=\"text-content\">${this._computeDisplay(stateObj)}</div>\n      </hui-generic-entity-row>\n    `;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (changedProps.has(\"_timeRemaining\")) {\n      return true;\n    }\n\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\")) {\n      const stateObj = this.hass!.states[this._config!.entity];\n      const oldHass = changedProps.get(\"hass\") as this[\"hass\"];\n      const oldStateObj = oldHass\n        ? oldHass.states[this._config!.entity]\n        : undefined;\n\n      if (oldStateObj !== stateObj) {\n        this._startInterval(stateObj);\n      } else if (!stateObj) {\n        this._clearInterval();\n      }\n    }\n  }\n\n  private _clearInterval(): void {\n    if (this._interval) {\n      window.clearInterval(this._interval);\n      this._interval = undefined;\n    }\n  }\n\n  private _startInterval(stateObj: HassEntity): void {\n    this._clearInterval();\n    this._calculateRemaining(stateObj);\n\n    if (stateObj.state === \"active\") {\n      this._interval = window.setInterval(\n        () => this._calculateRemaining(stateObj),\n        1000\n      );\n    }\n  }\n\n  private _calculateRemaining(stateObj: HassEntity): void {\n    this._timeRemaining = timerTimeRemaining(stateObj);\n  }\n\n  private _computeDisplay(stateObj: HassEntity): string | null {\n    if (!stateObj) {\n      return null;\n    }\n\n    if (stateObj.state === \"idle\" || this._timeRemaining === 0) {\n      return this.hass!.localize(\"state.timer.\" + stateObj.state);\n    }\n\n    let display = secondsToDuration(this._timeRemaining || 0);\n\n    if (stateObj.state === \"paused\") {\n      display += ` (${this.hass!.localize(\"state.timer.paused\")})`;\n    }\n\n    return display;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-timer-entity-row\": HuiTimerEntityRow;\n  }\n}\n"],"sourceRoot":""}