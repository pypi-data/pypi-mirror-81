{"version":3,"sources":["webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/data/user.ts","webpack:///./src/common/string/slugify.ts","webpack:///./src/panels/lovelace/badges/hui-error-badge.ts","webpack:///./src/panels/lovelace/editor/hui-badge-preview.ts","webpack:///./src/panels/lovelace/editor/view-editor/hui-view-editor.ts","webpack:///./src/panels/lovelace/editor/view-editor/hui-view-visibility-editor.ts","webpack:///./src/panels/lovelace/editor/view-editor/hui-edit-view.ts","webpack:///./src/panels/lovelace/editor/view-editor/hui-dialog-edit-view.ts"],"names":["HaIronFocusablesHelper","getTabbableNodes","node","result","this","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","children","element","tabIndex","_normalizedTabIndex","needsSort","push","localName","dom","getDistributedNodes","shadowRoot","root","i","length","paperDialogClass","customElements","get","haTabFixBehaviorImpl","_focusableNodes","define","mixinBehaviors","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","d","kind","decorators","property","key","value","html","label","hass","localize","_changed","Object","keys","themes","sort","map","theme","static","css","ev","target","selected","fireEvent","LitElement","__webpack_require__","__webpack_exports__","SYSTEM_GROUP_ID_ADMIN","SYSTEM_GROUP_ID_USER","fetchUsers","createUser","updateUser","deleteUser","async","callWS","type","name","group_ids","userId","params","assign","user_id","slugify","a","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","createErrorBadgeConfig","error","config","_config","HTMLElement","_error","_this$_element","_element","tagName","constructor","_defineProperty","addEventListener","_cleanup","_hass","language","style","direction","computeRTL","_createBadge","message","configValue","curConfig","setConfig","createBadgeElement","appendChild","removeChild","undefined","hui_view_editor_decorate","path","title","icon","panel","configElementStyle","_title","_valueChanged","_handleTitleBlur","_icon","_path","_theme","_panel","currentTarget","newConfig","checked","isNew","_suggestedPath","hui_view_visibility_editor_decorate","HuiViewVisibilityEditor","_visible","visible","memoizeOne","users","b","compare","changedProps","_get","_getPrototypeOf","prototype","call","then","_users","filter","user","system_generated","_sortedUsers","id","valChange","checkUser","some","u","newVisible","newEntry","hui_edit_view_decorate","_saving","_curTabIndex","_dialog","updateComplete","viewIndex","_badges","_cards","_config$views$this$vi","lovelace","views","cards","badges","viewConfig","_objectWithoutPropertiesLoose","processEditorEntities","open","querySelector","_this$_badges","content","_curTab","_viewConfigChanged","badgeConfig","_badgesChanged","_viewVisibilityChanged","_viewConfigTitle","_handleTabSelected","_deleteConfirm","_closeDialog","_save","saveConfig","deleteView","navigate","window","location","pathname","err","showAlertDialog","text","_this$_cards","_this$_cards2","_this$_config","_this$_cards3","showConfirmationDialog","confirm","_delete","close","detail","_resizeDialog","_isConfigChanged","viewConf","_creatingView","addView","replaceView","entities","JSON","stringify","haStyleDialog","HuiDialogEditView","hui_dialog_edit_view_decorate","_params","showDialog"],"mappings":"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","file":"chunk.d10058ac9269d393547a.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function (node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function (node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport type { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport type { Constructor } from \"../../types\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\") as Constructor<\n  PaperDialogElement\n>;\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\n// @ts-ignore\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n        `${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.generic.theme\"\n        )} (${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.config.optional\"\n        )})`}\n        dynamic-align\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=${this.value}\n          attr-for-selected=\"theme\"\n          @iron-select=${this._changed}\n        >\n          <paper-item theme=\"remove\"\n            >${this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.generic.no_theme\"\n            )}</paper-item\n          >\n          ${Object.keys(this.hass!.themes.themes)\n            .sort()\n            .map((theme) => {\n              return html` <paper-item theme=${theme}>${theme}</paper-item> `;\n            })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.selected === \"\") {\n      return;\n    }\n    this.value = ev.target.selected === \"remove\" ? \"\" : ev.target.selected;\n    fireEvent(this, \"value-changed\", { value: this.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import { HomeAssistant } from \"../types\";\nimport { Credential } from \"./auth\";\n\nexport const SYSTEM_GROUP_ID_ADMIN = \"system-admin\";\nexport const SYSTEM_GROUP_ID_USER = \"system-users\";\nexport const SYSTEM_GROUP_ID_READ_ONLY = \"system-read-only\";\n\nexport const GROUPS = [SYSTEM_GROUP_ID_USER, SYSTEM_GROUP_ID_ADMIN];\n\nexport interface User {\n  id: string;\n  name: string;\n  is_owner: boolean;\n  is_active: boolean;\n  system_generated: boolean;\n  group_ids: string[];\n  credentials: Credential[];\n}\n\nexport interface UpdateUserParams {\n  name?: User[\"name\"];\n  group_ids?: User[\"group_ids\"];\n}\n\nexport const fetchUsers = async (hass: HomeAssistant) =>\n  hass.callWS<User[]>({\n    type: \"config/auth/list\",\n  });\n\nexport const createUser = async (\n  hass: HomeAssistant,\n  name: string,\n  // eslint-disable-next-line: variable-name\n  group_ids?: User[\"group_ids\"]\n) =>\n  hass.callWS<{ user: User }>({\n    type: \"config/auth/create\",\n    name,\n    group_ids,\n  });\n\nexport const updateUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  params: UpdateUserParams\n) =>\n  hass.callWS<{ user: User }>({\n    ...params,\n    type: \"config/auth/update\",\n    user_id: userId,\n  });\n\nexport const deleteUser = async (hass: HomeAssistant, userId: string) =>\n  hass.callWS<void>({\n    type: \"config/auth/delete\",\n    user_id: userId,\n  });\n","// https://gist.github.com/hagemann/382adfc57adbd5af078dc93feef01fe1\nexport const slugify = (value: string) => {\n  const a =\n    \"àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;\";\n  const b =\n    \"aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------\";\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\n\n  return value\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\n    .replace(p, (c) => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, \"-and-\") // Replace & with 'and'\n    .replace(/[^\\w-]+/g, \"\") // Remove all non-word characters\n    .replace(/--+/g, \"-\") // Replace multiple - with single -\n    .replace(/^-+/, \"\") // Trim - from start of text\n    .replace(/-+$/, \"\"); // Trim - from end of text\n};\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../../../components/ha-label-badge\";\nimport { HomeAssistant } from \"../../../types\";\nimport { LovelaceBadge } from \"../types\";\nimport { ErrorBadgeConfig } from \"./types\";\n\nexport const createErrorBadgeElement = (config) => {\n  const el = document.createElement(\"hui-error-badge\");\n  el.setConfig(config);\n  return el;\n};\n\nexport const createErrorBadgeConfig = (error) => ({\n  type: \"error\",\n  error,\n});\n\n@customElement(\"hui-error-badge\")\nexport class HuiErrorBadge extends LitElement implements LovelaceBadge {\n  public hass?: HomeAssistant;\n\n  @property() private _config?: ErrorBadgeConfig;\n\n  public setConfig(config: ErrorBadgeConfig): void {\n    this._config = config;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config) {\n      return html``;\n    }\n\n    return html`\n      <ha-label-badge\n        label=\"Error\"\n        icon=\"hass:alert\"\n        description=${this._config.error}\n      ></ha-label-badge>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        --ha-label-badge-color: var(--label-badge-red, #fce588);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-error-badge\": HuiErrorBadge;\n  }\n}\n","import { computeRTL } from \"../../../common/util/compute_rtl\";\nimport \"../../../components/entity/ha-state-label-badge\";\nimport { LovelaceBadgeConfig } from \"../../../data/lovelace\";\nimport { HomeAssistant } from \"../../../types\";\nimport { createErrorBadgeConfig } from \"../badges/hui-error-badge\";\nimport { createBadgeElement } from \"../create-element/create-badge-element\";\nimport { LovelaceBadge } from \"../types\";\nimport { ConfigError } from \"./types\";\n\nexport class HuiBadgePreview extends HTMLElement {\n  private _hass?: HomeAssistant;\n\n  private _element?: LovelaceBadge;\n\n  private _config?: LovelaceBadgeConfig;\n\n  private get _error() {\n    return this._element?.tagName === \"HUI-ERROR-CARD\";\n  }\n\n  constructor() {\n    super();\n    this.addEventListener(\"ll-rebuild\", () => {\n      this._cleanup();\n      if (this._config) {\n        this.config = this._config;\n      }\n    });\n  }\n\n  set hass(hass: HomeAssistant) {\n    if (!this._hass || this._hass.language !== hass.language) {\n      this.style.direction = computeRTL(hass) ? \"rtl\" : \"ltr\";\n    }\n\n    this._hass = hass;\n    if (this._element) {\n      this._element.hass = hass;\n    }\n  }\n\n  set error(error: ConfigError) {\n    this._createBadge(\n      createErrorBadgeConfig(`${error.type}: ${error.message}`)\n    );\n  }\n\n  set config(configValue: LovelaceBadgeConfig) {\n    const curConfig = this._config;\n    this._config = configValue;\n\n    if (!configValue) {\n      this._cleanup();\n      return;\n    }\n\n    if (!this._element) {\n      this._createBadge(configValue);\n      return;\n    }\n\n    // in case the element was an error element we always want to recreate it\n    if (!this._error && curConfig && configValue.type === curConfig.type) {\n      this._element.setConfig(configValue);\n    } else {\n      this._createBadge(configValue);\n    }\n  }\n\n  private _createBadge(configValue: LovelaceBadgeConfig): void {\n    this._cleanup();\n    this._element = createBadgeElement(configValue);\n\n    if (this._hass) {\n      this._element!.hass = this._hass;\n    }\n\n    this.appendChild(this._element!);\n  }\n\n  private _cleanup() {\n    if (!this._element) {\n      return;\n    }\n    this.removeChild(this._element);\n    this._element = undefined;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-badge-preview\": HuiBadgePreview;\n  }\n}\n\ncustomElements.define(\"hui-badge-preview\", HuiBadgePreview);\n","import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { slugify } from \"../../../../common/string/slugify\";\nimport \"../../../../components/ha-switch\";\nimport { LovelaceViewConfig } from \"../../../../data/lovelace\";\nimport { HomeAssistant } from \"../../../../types\";\nimport \"../../components/hui-theme-select-editor\";\nimport { configElementStyle } from \"../config-elements/config-elements-style\";\nimport { EditorTarget } from \"../types\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"view-config-changed\": {\n      config: LovelaceViewConfig;\n    };\n  }\n}\n\n@customElement(\"hui-view-editor\")\nexport class HuiViewEditor extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public isNew!: boolean;\n\n  @property() private _config!: LovelaceViewConfig;\n\n  private _suggestedPath = false;\n\n  get _path(): string {\n    if (!this._config) {\n      return \"\";\n    }\n    return this._config.path || \"\";\n  }\n\n  get _title(): string {\n    if (!this._config) {\n      return \"\";\n    }\n    return this._config.title || \"\";\n  }\n\n  get _icon(): string {\n    if (!this._config) {\n      return \"\";\n    }\n    return this._config.icon || \"\";\n  }\n\n  get _theme(): string {\n    if (!this._config) {\n      return \"\";\n    }\n    return this._config.theme || \"Backend-selected\";\n  }\n\n  get _panel(): boolean {\n    if (!this._config) {\n      return false;\n    }\n    return this._config.panel || false;\n  }\n\n  set config(config: LovelaceViewConfig) {\n    this._config = config;\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )}  (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=${this._title}\n          .configValue=${\"title\"}\n          @value-changed=${this._valueChanged}\n          @blur=${this._handleTitleBlur}\n        ></paper-input>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.icon\"\n          )}  (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n        ></paper-input>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.url\"\n          )}  (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=${this._path}\n          .configValue=${\"path\"}\n          @value-changed=${this._valueChanged}\n        ></paper-input>\n        <hui-theme-select-editor\n          .hass=${this.hass}\n          .value=${this._theme}\n          .configValue=${\"theme\"}\n          @value-changed=${this._valueChanged}\n        ></hui-theme-select-editor>\n        <ha-switch\n          .checked=${this._panel !== false}\n          .configValue=${\"panel\"}\n          @change=${this._valueChanged}\n          >${this.hass.localize(\n            \"ui.panel.lovelace.editor.view.panel_mode.title\"\n          )}</ha-switch\n        >\n        <span class=\"panel\"\n          >${this.hass.localize(\n            \"ui.panel.lovelace.editor.view.panel_mode.description\"\n          )}</span\n        >\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.currentTarget! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n\n    let newConfig;\n\n    if (target.configValue) {\n      newConfig = {\n        ...this._config,\n        [target.configValue!]:\n          target.checked !== undefined ? target.checked : target.value,\n      };\n    }\n\n    fireEvent(this, \"view-config-changed\", { config: newConfig });\n  }\n\n  private _handleTitleBlur(ev) {\n    if (\n      !this.isNew ||\n      this._suggestedPath ||\n      this._config.path ||\n      !ev.currentTarget.value\n    ) {\n      return;\n    }\n\n    const config = { ...this._config, path: slugify(ev.currentTarget.value) };\n    fireEvent(this, \"view-config-changed\", { config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .panel {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-view-editor\": HuiViewEditor;\n  }\n}\n","import \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { compare } from \"../../../../common/string/compare\";\nimport { HaSwitch } from \"../../../../components/ha-switch\";\nimport { LovelaceViewConfig, ShowViewConfig } from \"../../../../data/lovelace\";\nimport { fetchUsers, User } from \"../../../../data/user\";\nimport { HomeAssistant } from \"../../../../types\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"view-visibility-changed\": {\n      visible: ShowViewConfig[];\n    };\n  }\n}\n\n@customElement(\"hui-view-visibility-editor\")\nexport class HuiViewVisibilityEditor extends LitElement {\n  set config(config: LovelaceViewConfig) {\n    this._config = config;\n    this._visible =\n      this._config.visible === undefined ? true : this._config.visible;\n  }\n\n  @property() public hass!: HomeAssistant;\n\n  @property() public _config!: LovelaceViewConfig;\n\n  @property() private _users!: User[];\n\n  @property() private _visible!: boolean | ShowViewConfig[];\n\n  private _sortedUsers = memoizeOne((users: User[]) => {\n    return users.sort((a, b) => compare(a.name, b.name));\n  });\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n\n    fetchUsers(this.hass).then((users) => {\n      this._users = users.filter((user) => !user.system_generated);\n      fireEvent(this, \"iron-resize\");\n    });\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._users) {\n      return html``;\n    }\n\n    return html`\n      <p>\n        ${this.hass.localize(\n          \"ui.panel.lovelace.editor.edit_view.visibility.select_users\"\n        )}\n      </p>\n      ${this._sortedUsers(this._users).map(\n        (user) => html`\n          <paper-item>\n            <paper-item-body>${user.name}</paper-item-body>\n            <ha-switch\n              .userId=\"${user.id}\"\n              @change=${this.valChange}\n              .checked=${this.checkUser(user.id)}\n            ></ha-switch>\n          </paper-item>\n        `\n      )}\n    `;\n  }\n\n  protected checkUser(userId: string): boolean {\n    if (this._visible === undefined) {\n      return true;\n    }\n    if (typeof this._visible === \"boolean\") {\n      return this._visible as boolean;\n    }\n    return (this._visible as ShowViewConfig[]).some((u) => u.user === userId);\n  }\n\n  private valChange(ev: Event): void {\n    const userId = (ev.currentTarget as any).userId;\n    const checked = (ev.currentTarget as HaSwitch).checked;\n\n    let newVisible: ShowViewConfig[] = [];\n\n    if (typeof this._visible === \"boolean\") {\n      const lastValue = this._visible as boolean;\n      if (lastValue) {\n        newVisible = this._users.map((u) => {\n          return {\n            user: u.id,\n          };\n        });\n      }\n    } else {\n      newVisible = [...this._visible];\n    }\n\n    if (checked === true) {\n      const newEntry: ShowViewConfig = {\n        user: userId,\n      };\n      newVisible.push(newEntry);\n    } else {\n      newVisible = (newVisible as ShowViewConfig[]).filter(\n        (c) => c.user !== userId\n      );\n    }\n\n    // this removes users that doesn't exists in system but had view permissions\n    this._visible = newVisible.filter((c) =>\n      this._users.some((u) => u.id === c.user)\n    );\n\n    fireEvent(this, \"view-visibility-changed\", { visible: this._visible });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-view-visibility-editor\": HuiViewVisibilityEditor;\n  }\n}\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"@polymer/paper-tabs/paper-tab\";\nimport \"@polymer/paper-tabs/paper-tabs\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent, HASSDomEvent } from \"../../../../common/dom/fire_event\";\nimport { navigate } from \"../../../../common/navigate\";\nimport \"../../../../components/dialog/ha-paper-dialog\";\nimport type { HaPaperDialog } from \"../../../../components/dialog/ha-paper-dialog\";\nimport type {\n  LovelaceBadgeConfig,\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n} from \"../../../../data/lovelace\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../../../dialogs/generic/show-dialog-box\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport \"../../components/hui-entity-editor\";\nimport type { Lovelace } from \"../../types\";\nimport { addView, deleteView, replaceView } from \"../config-util\";\nimport \"../hui-badge-preview\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport {\n  EntitiesEditorEvent,\n  ViewEditEvent,\n  ViewVisibilityChangeEvent,\n} from \"../types\";\nimport \"./hui-view-editor\";\nimport \"./hui-view-visibility-editor\";\n\n@customElement(\"hui-edit-view\")\nexport class HuiEditView extends LitElement {\n  @property() public lovelace?: Lovelace;\n\n  @property() public viewIndex?: number;\n\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: LovelaceViewConfig;\n\n  @property() private _badges?: LovelaceBadgeConfig[];\n\n  @property() private _cards?: LovelaceCardConfig[];\n\n  @property() private _saving: boolean;\n\n  @property() private _curTab?: string;\n\n  private _curTabIndex: number;\n\n  public constructor() {\n    super();\n    this._saving = false;\n    this._curTabIndex = 0;\n  }\n\n  public async showDialog(): Promise<void> {\n    // Wait till dialog is rendered.\n    if (this._dialog == null) {\n      await this.updateComplete;\n    }\n\n    if (this.viewIndex === undefined) {\n      this._config = {};\n      this._badges = [];\n      this._cards = [];\n    } else {\n      const { cards, badges, ...viewConfig } = this.lovelace!.config.views[\n        this.viewIndex\n      ];\n      this._config = viewConfig;\n      this._badges = badges ? processEditorEntities(badges) : [];\n      this._cards = cards;\n    }\n\n    this._dialog.open();\n  }\n\n  private get _dialog(): HaPaperDialog {\n    return this.shadowRoot!.querySelector(\"ha-paper-dialog\")!;\n  }\n\n  private get _viewConfigTitle(): string {\n    if (!this._config || !this._config.title) {\n      return this.hass!.localize(\"ui.panel.lovelace.editor.edit_view.header\");\n    }\n\n    return this.hass!.localize(\n      \"ui.panel.lovelace.editor.edit_view.header_name\",\n      \"name\",\n      this._config.title\n    );\n  }\n\n  protected render(): TemplateResult {\n    let content;\n    switch (this._curTab) {\n      case \"tab-settings\":\n        content = html`\n          <hui-view-editor\n            .isNew=${this.viewIndex === undefined}\n            .hass=${this.hass}\n            .config=\"${this._config}\"\n            @view-config-changed=\"${this._viewConfigChanged}\"\n          ></hui-view-editor>\n        `;\n        break;\n      case \"tab-badges\":\n        content = html`\n          ${this._badges?.length\n            ? html`\n                <div class=\"preview-badges\">\n                  ${this._badges.map((badgeConfig) => {\n                    return html`\n                      <hui-badge-preview\n                        .hass=${this.hass}\n                        .config=${badgeConfig}\n                      ></hui-badge-preview>\n                    `;\n                  })}\n                </div>\n              `\n            : \"\"}\n          <hui-entity-editor\n            .hass=${this.hass}\n            .entities=\"${this._badges}\"\n            @entities-changed=\"${this._badgesChanged}\"\n          ></hui-entity-editor>\n        `;\n        break;\n      case \"tab-visibility\":\n        content = html`\n          <hui-view-visibility-editor\n            .hass=\"${this.hass}\"\n            .config=\"${this._config}\"\n            @view-visibility-changed=\"${this._viewVisibilityChanged}\"\n          ></hui-view-visibility-editor>\n        `;\n        break;\n      case \"tab-cards\":\n        content = html` Cards `;\n        break;\n    }\n    return html`\n      <ha-paper-dialog with-backdrop modal>\n        <h2>\n          ${this._viewConfigTitle}\n        </h2>\n        <paper-tabs\n          scrollable\n          hide-scroll-buttons\n          .selected=\"${this._curTabIndex}\"\n          @selected-item-changed=\"${this._handleTabSelected}\"\n        >\n          <paper-tab id=\"tab-settings\"\n            >${this.hass!.localize(\n              \"ui.panel.lovelace.editor.edit_view.tab_settings\"\n            )}</paper-tab\n          >\n          <paper-tab id=\"tab-badges\"\n            >${this.hass!.localize(\n              \"ui.panel.lovelace.editor.edit_view.tab_badges\"\n            )}</paper-tab\n          >\n          <paper-tab id=\"tab-visibility\"\n            >${this.hass!.localize(\n              \"ui.panel.lovelace.editor.edit_view.tab_visibility\"\n            )}</paper-tab\n          >\n        </paper-tabs>\n        <paper-dialog-scrollable> ${content} </paper-dialog-scrollable>\n        <div class=\"paper-dialog-buttons\">\n          ${this.viewIndex !== undefined\n            ? html`\n                <mwc-button class=\"warning\" @click=\"${this._deleteConfirm}\">\n                  ${this.hass!.localize(\n                    \"ui.panel.lovelace.editor.edit_view.delete\"\n                  )}\n                </mwc-button>\n              `\n            : \"\"}\n          <mwc-button @click=\"${this._closeDialog}\"\n            >${this.hass!.localize(\"ui.common.cancel\")}</mwc-button\n          >\n          <mwc-button\n            ?disabled=\"${!this._config || this._saving}\"\n            @click=\"${this._save}\"\n          >\n            <paper-spinner\n              ?active=\"${this._saving}\"\n              alt=\"Saving\"\n            ></paper-spinner>\n            ${this.hass!.localize(\"ui.common.save\")}</mwc-button\n          >\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private async _delete(): Promise<void> {\n    try {\n      await this.lovelace!.saveConfig(\n        deleteView(this.lovelace!.config, this.viewIndex!)\n      );\n      this._closeDialog();\n      navigate(this, `/${window.location.pathname.split(\"/\")[1]}`);\n    } catch (err) {\n      showAlertDialog(this, {\n        text: `Deleting failed: ${err.message}`,\n      });\n    }\n  }\n\n  private _deleteConfirm(): void {\n    showConfirmationDialog(this, {\n      title: this.hass!.localize(\n        `ui.panel.lovelace.views.confirm_delete${\n          this._cards?.length ? `_existing_cards` : \"\"\n        }`\n      ),\n      text: this.hass!.localize(\n        `ui.panel.lovelace.views.confirm_delete${\n          this._cards?.length ? `_existing_cards` : \"\"\n        }_text`,\n        \"name\",\n        this._config?.title || \"Unnamed view\",\n        \"number\",\n        this._cards?.length || 0\n      ),\n      confirm: () => this._delete(),\n    });\n  }\n\n  private async _resizeDialog(): Promise<void> {\n    await this.updateComplete;\n    fireEvent(this._dialog as HTMLElement, \"iron-resize\");\n  }\n\n  private _closeDialog(): void {\n    this._curTabIndex = 0;\n    this.lovelace = undefined;\n    this._config = {};\n    this._badges = [];\n    this._dialog.close();\n  }\n\n  private _handleTabSelected(ev: CustomEvent): void {\n    if (!ev.detail.value) {\n      return;\n    }\n    this._curTab = ev.detail.value.id;\n    this._resizeDialog();\n  }\n\n  private async _save(): Promise<void> {\n    if (!this._config) {\n      return;\n    }\n    if (!this._isConfigChanged()) {\n      this._closeDialog();\n      return;\n    }\n\n    this._saving = true;\n\n    const viewConf: LovelaceViewConfig = {\n      ...this._config,\n      badges: this._badges,\n      cards: this._cards,\n    };\n\n    const lovelace = this.lovelace!;\n\n    try {\n      await lovelace.saveConfig(\n        this._creatingView\n          ? addView(lovelace.config, viewConf)\n          : replaceView(lovelace.config, this.viewIndex!, viewConf)\n      );\n      this._closeDialog();\n    } catch (err) {\n      showAlertDialog(this, {\n        text: `Saving failed: ${err.message}`,\n      });\n    } finally {\n      this._saving = false;\n    }\n  }\n\n  private _viewConfigChanged(ev: ViewEditEvent): void {\n    if (ev.detail && ev.detail.config) {\n      this._config = ev.detail.config;\n    }\n  }\n\n  private _viewVisibilityChanged(\n    ev: HASSDomEvent<ViewVisibilityChangeEvent>\n  ): void {\n    if (ev.detail.visible && this._config) {\n      this._config.visible = ev.detail.visible;\n    }\n  }\n\n  private _badgesChanged(ev: EntitiesEditorEvent): void {\n    if (!this._badges || !this.hass || !ev.detail || !ev.detail.entities) {\n      return;\n    }\n    this._badges = processEditorEntities(ev.detail.entities);\n    this._resizeDialog();\n  }\n\n  private _isConfigChanged(): boolean {\n    return (\n      this._creatingView ||\n      JSON.stringify(this._config) !==\n        JSON.stringify(this.lovelace!.config.views[this.viewIndex!])\n    );\n  }\n\n  private get _creatingView(): boolean {\n    return this.viewIndex === undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          /* overrule the ha-style-dialog max-height on small screens */\n          ha-paper-dialog {\n            max-height: 100%;\n            height: 100%;\n          }\n        }\n        @media all and (min-width: 660px) {\n          ha-paper-dialog {\n            width: 650px;\n          }\n        }\n        ha-paper-dialog {\n          max-width: 650px;\n        }\n        paper-tabs {\n          --paper-tabs-selection-bar-color: var(--primary-color);\n          text-transform: uppercase;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n        }\n        mwc-button paper-spinner {\n          width: 14px;\n          height: 14px;\n          margin-right: 20px;\n        }\n        mwc-button.warning {\n          margin-right: auto;\n        }\n        paper-spinner {\n          display: none;\n        }\n        paper-spinner[active] {\n          display: block;\n        }\n        paper-dialog-scrollable {\n          margin-top: 0;\n        }\n        .hidden {\n          display: none;\n        }\n        .error {\n          color: var(--error-color);\n          border-bottom: 1px solid var(--error-color);\n        }\n        .preview-badges {\n          display: flex;\n          justify-content: center;\n          margin: 12px 16px;\n          flex-wrap: wrap;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-edit-view\": HuiEditView;\n  }\n}\n","import {\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { HASSDomEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport \"./hui-edit-view\";\nimport { EditViewDialogParams } from \"./show-edit-view-dialog\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"reload-lovelace\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"reload-lovelace\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-dialog-edit-view\")\nexport class HuiDialogEditView extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() private _params?: EditViewDialogParams;\n\n  public async showDialog(params: EditViewDialogParams): Promise<void> {\n    this._params = params;\n    await this.updateComplete;\n    (this.shadowRoot!.children[0] as any).showDialog();\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    return html`\n      <hui-edit-view\n        .hass=${this.hass}\n        .lovelace=\"${this._params.lovelace}\"\n        .viewIndex=\"${this._params.viewIndex}\"\n      >\n      </hui-edit-view>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-dialog-edit-view\": HuiDialogEditView;\n  }\n}\n"],"sourceRoot":""}