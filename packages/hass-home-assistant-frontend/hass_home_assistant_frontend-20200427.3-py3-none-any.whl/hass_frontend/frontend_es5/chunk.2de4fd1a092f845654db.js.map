{"version":3,"sources":["webpack:///./src/panels/lovelace/cards/hui-gauge-card.ts"],"names":["severityMap","red","green","yellow","normal","customElement","HuiGaugeCard","_callee","regeneratorRuntime","wrap","_context","prev","next","Promise","all","__webpack_require__","e","then","bind","abrupt","document","createElement","stop","hass","entities","entitiesFallback","type","entity","findEntities","stateObj","isNaN","Number","state","property","config","Error","isValidEntityId","this","_config","Object","assign","min","max","_get","_getPrototypeOf","prototype","call","_setBaseUnit","html","_templateObject","states","_templateObject2","localize","_templateObject3","_templateObject4","_handleClick","styleMap","--base-unit","_baseUnit","transform","concat","_translateTurn","background-color","_computeSeverity","unit","attributes","unit_of_measurement","name","computeStateName","changedProps","hasConfigOrEntityChanged","_updated","classList","add","oldHass","get","oldConfig","themes","theme","applyThemesOnElement","isConnected","baseUnit","_computeBaseUnit","numberValue","sections","severity","_step","sortable","keys","map","_iterator","_createForOfIteratorHelper","s","n","done","value","err","f","sort","a","b","_ref","Math","clientWidth","fireEvent","entityId","css","_templateObject5","LitElement"],"mappings":"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","file":"chunk.2de4fd1a092f845654db.js","sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket/dist/types\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { styleMap } from \"lit-html/directives/style-map\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport { isValidEntityId } from \"../../../common/entity/valid_entity_id\";\nimport \"../../../components/ha-card\";\nimport { HomeAssistant } from \"../../../types\";\nimport { findEntities } from \"../common/find-entites\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-warning\";\nimport { LovelaceCard, LovelaceCardEditor } from \"../types\";\nimport { GaugeCardConfig } from \"./types\";\n\nexport const severityMap = {\n  red: \"var(--label-badge-red)\",\n  green: \"var(--label-badge-green)\",\n  yellow: \"var(--label-badge-yellow)\",\n  normal: \"var(--label-badge-blue)\",\n};\n\n@customElement(\"hui-gauge-card\")\nclass HuiGaugeCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\n      /* webpackChunkName: \"hui-gauge-card-editor\" */ \"../editor/config-elements/hui-gauge-card-editor\"\n    );\n    return document.createElement(\"hui-gauge-card-editor\");\n  }\n\n  public static getStubConfig(\n    hass: HomeAssistant,\n    entities: string[],\n    entitiesFallback: string[]\n  ): GaugeCardConfig {\n    const includeDomains = [\"sensor\"];\n    const maxEntities = 1;\n    const entityFilter = (stateObj: HassEntity): boolean => {\n      return !isNaN(Number(stateObj.state));\n    };\n\n    const foundEntities = findEntities(\n      hass,\n      maxEntities,\n      entities,\n      entitiesFallback,\n      includeDomains,\n      entityFilter\n    );\n\n    return { type: \"gauge\", entity: foundEntities[0] || \"\" };\n  }\n\n  @property() public hass?: HomeAssistant;\n\n  @property() private _baseUnit = \"50px\";\n\n  @property() private _config?: GaugeCardConfig;\n\n  private _updated?: boolean;\n\n  public getCardSize(): number {\n    return 2;\n  }\n\n  public setConfig(config: GaugeCardConfig): void {\n    if (!config || !config.entity) {\n      throw new Error(\"Invalid card configuration\");\n    }\n    if (!isValidEntityId(config.entity)) {\n      throw new Error(\"Invalid Entity\");\n    }\n    this._config = { min: 0, max: 100, ...config };\n  }\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    this._setBaseUnit();\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning\n          >${this.hass.localize(\n            \"ui.panel.lovelace.warning.entity_not_found\",\n            \"entity\",\n            this._config.entity\n          )}</hui-warning\n        >\n      `;\n    }\n\n    const state = Number(stateObj.state);\n\n    if (isNaN(state)) {\n      return html`\n        <hui-warning\n          >${this.hass.localize(\n            \"ui.panel.lovelace.warning.entity_non_numeric\",\n            \"entity\",\n            this._config.entity\n          )}</hui-warning\n        >\n      `;\n    }\n\n    return html`\n      <ha-card\n        @click=\"${this._handleClick}\"\n        tabindex=\"0\"\n        style=${styleMap({\n          \"--base-unit\": this._baseUnit,\n        })}\n      >\n        <div class=\"container\">\n          <div class=\"gauge-a\"></div>\n          <div\n            class=\"gauge-c\"\n            style=${styleMap({\n              transform: `rotate(${this._translateTurn(state)}turn)`,\n              \"background-color\": this._computeSeverity(state),\n            })}\n          ></div>\n          <div class=\"gauge-b\"></div>\n        </div>\n        <div class=\"gauge-data\">\n          <div id=\"percent\">\n            ${stateObj.state}\n            ${this._config.unit ||\n            stateObj.attributes.unit_of_measurement ||\n            \"\"}\n          </div>\n          <div id=\"name\">\n            ${this._config.name || computeStateName(stateObj)}\n          </div>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected firstUpdated(): void {\n    this._updated = true;\n    this._setBaseUnit();\n    // eslint-disable-next-line wc/no-self-class\n    this.classList.add(\"init\");\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._config || !this.hass) {\n      return;\n    }\n\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProps.get(\"_config\") as\n      | GaugeCardConfig\n      | undefined;\n\n    if (\n      !oldHass ||\n      !oldConfig ||\n      oldHass.themes !== this.hass.themes ||\n      oldConfig.theme !== this._config.theme\n    ) {\n      applyThemesOnElement(this, this.hass.themes, this._config.theme);\n    }\n  }\n\n  private _setBaseUnit(): void {\n    if (!this.isConnected || !this._updated) {\n      return;\n    }\n    const baseUnit = this._computeBaseUnit();\n    if (baseUnit !== \"0px\") {\n      this._baseUnit = baseUnit;\n    }\n  }\n\n  private _computeSeverity(numberValue: number): string {\n    const sections = this._config!.severity;\n\n    if (!sections) {\n      return severityMap.normal;\n    }\n\n    const sectionsArray = Object.keys(sections);\n    const sortable = sectionsArray.map((severity) => [\n      severity,\n      sections[severity],\n    ]);\n\n    for (const severity of sortable) {\n      if (severityMap[severity[0]] == null || isNaN(severity[1])) {\n        return severityMap.normal;\n      }\n    }\n    sortable.sort((a, b) => a[1] - b[1]);\n\n    if (numberValue >= sortable[0][1] && numberValue < sortable[1][1]) {\n      return severityMap[sortable[0][0]];\n    }\n    if (numberValue >= sortable[1][1] && numberValue < sortable[2][1]) {\n      return severityMap[sortable[1][0]];\n    }\n    if (numberValue >= sortable[2][1]) {\n      return severityMap[sortable[2][0]];\n    }\n    return severityMap.normal;\n  }\n\n  private _translateTurn(value: number): number {\n    const { min, max } = this._config!;\n    const maxTurnValue = Math.min(Math.max(value, min!), max!);\n    return (5 * (maxTurnValue - min!)) / (max! - min!) / 10;\n  }\n\n  private _computeBaseUnit(): string {\n    return this.clientWidth < 200 ? this.clientWidth / 5 + \"px\" : \"50px\";\n  }\n\n  private _handleClick(): void {\n    fireEvent(this, \"hass-more-info\", { entityId: this._config!.entity });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-card {\n        cursor: pointer;\n        padding: 16px 16px 0 16px;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        box-sizing: border-box;\n        justify-content: center;\n        align-items: center;\n      }\n      ha-card:focus {\n        outline: none;\n        background: var(--divider-color);\n      }\n      .container {\n        width: calc(var(--base-unit) * 4);\n        height: calc(var(--base-unit) * 2);\n        overflow: hidden;\n        position: relative;\n      }\n      .gauge-a {\n        position: absolute;\n        background-color: var(--primary-background-color);\n        width: calc(var(--base-unit) * 4);\n        height: calc(var(--base-unit) * 2);\n        top: 0%;\n        border-radius: calc(var(--base-unit) * 2.5) calc(var(--base-unit) * 2.5)\n          0px 0px;\n      }\n      .gauge-b {\n        position: absolute;\n        background-color: var(--paper-card-background-color);\n        width: calc(var(--base-unit) * 2.5);\n        height: calc(var(--base-unit) * 1.25);\n        top: calc(var(--base-unit) * 0.75);\n        margin-left: calc(var(--base-unit) * 0.75);\n        margin-right: auto;\n        border-radius: calc(var(--base-unit) * 2.5) calc(var(--base-unit) * 2.5)\n          0px 0px;\n      }\n      .gauge-c {\n        position: absolute;\n        background-color: var(--label-badge-blue);\n        width: calc(var(--base-unit) * 4);\n        height: calc(var(--base-unit) * 2);\n        top: calc(var(--base-unit) * 2);\n        margin-left: auto;\n        margin-right: auto;\n        border-radius: 0px 0px calc(var(--base-unit) * 2)\n          calc(var(--base-unit) * 2);\n        transform-origin: center top;\n      }\n      .init .gauge-c {\n        transition: all 1.3s ease-in-out;\n      }\n      .gauge-data {\n        text-align: center;\n        color: var(--primary-text-color);\n        line-height: calc(var(--base-unit) * 0.3);\n        width: 100%;\n        position: relative;\n        top: calc(var(--base-unit) * -0.5);\n      }\n      .init .gauge-data {\n        transition: all 1s ease-out;\n      }\n      .gauge-data #percent {\n        font-size: calc(var(--base-unit) * 0.55);\n        line-height: calc(var(--base-unit) * 0.55);\n      }\n      .gauge-data #name {\n        padding-top: calc(var(--base-unit) * 0.15);\n        font-size: calc(var(--base-unit) * 0.3);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-gauge-card\": HuiGaugeCard;\n  }\n}\n"],"sourceRoot":""}