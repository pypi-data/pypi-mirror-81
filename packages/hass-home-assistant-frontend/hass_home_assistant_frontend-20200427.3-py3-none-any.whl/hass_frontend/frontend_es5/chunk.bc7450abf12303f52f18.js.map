{"version":3,"sources":["webpack:///./src/panels/config/areas/dialog-area-registry-detail.ts"],"names":["DialogAreaDetail","property","_callee","params","regeneratorRuntime","wrap","_context","prev","next","this","_params","_error","undefined","_name","entry","name","updateComplete","stop","html","_templateObject","nameInvalid","trim","_templateObject2","_openedChanged","hass","localize","_templateObject3","_templateObject4","area_id","_nameChanged","_templateObject5","_deleteEntry","_submitting","_templateObject6","_updateEntry","ev","detail","value","_callee2","values","_context2","updateEntry","createEntry","t0","message","finish","_callee3","_context3","removeEntry","sent","haStyleDialog","css","_templateObject7","LitElement","customElements","define"],"mappings":"8/IAkBMA,iuNACHC,kEAEAA,mEAEAA,oEAEAA,qEAEAA,gIAED,SAAAC,EACEC,GADF,OAAAC,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAGEC,KAAKC,QAAUP,EACfM,KAAKE,YAASC,EACdH,KAAKI,MAAQJ,KAAKC,QAAQI,MAAQL,KAAKC,QAAQI,MAAMC,KAAO,GAL9DT,EAAAE,KAAA,EAMQC,KAAKO,eANb,wBAAAV,EAAAW,SAAAf,EAAAO,kGASA,WACE,IAAKA,KAAKC,QACR,OAAOQ,YAAPC,KAEF,IAAML,EAAQL,KAAKC,QAAQI,MACrBM,EAAoC,KAAtBX,KAAKI,MAAMQ,OAC/B,OAAOH,YAAPI,IAIuBb,KAAKc,eAGpBT,EACEA,EAAMC,KACNN,KAAKe,KAAKC,SAAS,6CAGrBhB,KAAKE,OAASO,YAAdQ,IAAyCjB,KAAKE,QAAkB,GAE9DG,EAAQI,YAAHS,IAAyBb,EAAMc,SAAmB,GAG9CnB,KAAKI,MACGJ,KAAKoB,aAGXT,EAKbN,EACEI,YADGY,IAIWrB,KAAKsB,aACHtB,KAAKuB,YAEfvB,KAAKe,KAAKC,SAAS,wCAGzBP,YAVGe,KAYKxB,KAAKyB,aACHd,GAAeX,KAAKuB,YAE9BlB,EACEL,KAAKe,KAAKC,SAAS,uCACnBhB,KAAKe,KAAKC,SAAS,kFAOjC,SAAqBU,GACnB1B,KAAKE,YAASC,EACdH,KAAKI,MAAQsB,EAAGC,OAAOC,2FAGzB,SAAAC,IAAA,IAAAC,EAAA,OAAAnC,mBAAAC,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,UACEC,KAAKuB,aAAc,EADrBQ,EAAAjC,KAAA,EAGUgC,EAAyC,CAC7CxB,KAAMN,KAAKI,MAAMQ,SAEfZ,KAAKC,QAASI,MANtB,CAAA0B,EAAAhC,KAAA,eAAAgC,EAAAhC,KAAA,EAOYC,KAAKC,QAAS+B,YAAaF,GAPvC,OAAAC,EAAAhC,KAAA,uBAAAgC,EAAAhC,KAAA,GASYC,KAAKC,QAASgC,YAAaH,GATvC,QAWI9B,KAAKC,aAAUE,EAXnB4B,EAAAhC,KAAA,iBAAAgC,EAAAjC,KAAA,GAAAiC,EAAAG,GAAAH,EAAA,SAaI/B,KAAKE,OAAS6B,EAAAG,GAAIC,SAAW,gBAbjC,eAAAJ,EAAAjC,KAAA,GAeIE,KAAKuB,aAAc,EAfvBQ,EAAAK,OAAA,6BAAAL,EAAAvB,SAAAqB,EAAA7B,KAAA,4JAmBA,SAAAqC,IAAA,OAAA1C,mBAAAC,KAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cACEC,KAAKuB,aAAc,EADrBe,EAAAxC,KAAA,EAAAwC,EAAAvC,KAAA,EAGcC,KAAKC,QAASsC,cAH5B,WAAAD,EAAAE,KAAA,CAAAF,EAAAvC,KAAA,QAIMC,KAAKC,aAAUE,EAJrB,cAAAmC,EAAAxC,KAAA,EAOIE,KAAKuB,aAAc,EAPvBe,EAAAF,OAAA,2BAAAE,EAAA9B,SAAA6B,EAAArC,KAAA,+GAWA,SAAuB0B,GACfA,EAAGC,OAAeC,QACtB5B,KAAKC,aAAUE,8CAInB,WACE,MAAO,CACLsC,IACAC,YAFKC,WAtHoBC,KA6I/BC,eAAeC,OAAO,8BAA+BvD","file":"chunk.bc7450abf12303f52f18.js","sourcesContent":["import \"@material/mwc-button\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\nimport \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../../../components/dialog/ha-paper-dialog\";\nimport { AreaRegistryEntryMutableParams } from \"../../../data/area_registry\";\nimport { PolymerChangedEvent } from \"../../../polymer-types\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { AreaRegistryDetailDialogParams } from \"./show-dialog-area-registry-detail\";\n\nclass DialogAreaDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _name!: string;\n\n  @property() private _error?: string;\n\n  @property() private _params?: AreaRegistryDetailDialogParams;\n\n  @property() private _submitting?: boolean;\n\n  public async showDialog(\n    params: AreaRegistryDetailDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    this._name = this._params.entry ? this._params.entry.name : \"\";\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const entry = this._params.entry;\n    const nameInvalid = this._name.trim() === \"\";\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=\"${this._openedChanged}\"\n      >\n        <h2>\n          ${entry\n            ? entry.name\n            : this.hass.localize(\"ui.panel.config.areas.editor.default_name\")}\n        </h2>\n        <paper-dialog-scrollable>\n          ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n          <div class=\"form\">\n            ${entry ? html` <div>Area ID: ${entry.area_id}</div> ` : \"\"}\n\n            <paper-input\n              .value=${this._name}\n              @value-changed=${this._nameChanged}\n              label=\"Name\"\n              error-message=\"Name is required\"\n              .invalid=${nameInvalid}\n            ></paper-input>\n          </div>\n        </paper-dialog-scrollable>\n        <div class=\"paper-dialog-buttons\">\n          ${entry\n            ? html`\n                <mwc-button\n                  class=\"warning\"\n                  @click=\"${this._deleteEntry}\"\n                  .disabled=${this._submitting}\n                >\n                  ${this.hass.localize(\"ui.panel.config.areas.editor.delete\")}\n                </mwc-button>\n              `\n            : html``}\n          <mwc-button\n            @click=\"${this._updateEntry}\"\n            .disabled=${nameInvalid || this._submitting}\n          >\n            ${entry\n              ? this.hass.localize(\"ui.panel.config.areas.editor.update\")\n              : this.hass.localize(\"ui.panel.config.areas.editor.create\")}\n          </mwc-button>\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private _nameChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._name = ev.detail.value;\n  }\n\n  private async _updateEntry() {\n    this._submitting = true;\n    try {\n      const values: AreaRegistryEntryMutableParams = {\n        name: this._name.trim(),\n      };\n      if (this._params!.entry) {\n        await this._params!.updateEntry!(values);\n      } else {\n        await this._params!.createEntry!(values);\n      }\n      this._params = undefined;\n    } catch (err) {\n      this._error = err.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteEntry() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeEntry!()) {\n        this._params = undefined;\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    if (!(ev.detail as any).value) {\n      this._params = undefined;\n    }\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        .form {\n          padding-bottom: 24px;\n        }\n        mwc-button.warning {\n          margin-right: auto;\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-area-registry-detail\": DialogAreaDetail;\n  }\n}\n\ncustomElements.define(\"dialog-area-registry-detail\", DialogAreaDetail);\n"],"sourceRoot":""}