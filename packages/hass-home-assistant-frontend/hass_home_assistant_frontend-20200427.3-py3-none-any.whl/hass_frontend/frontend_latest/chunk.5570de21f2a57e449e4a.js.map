{"version":3,"sources":["webpack:///./src/resources/markdown_worker.ts","webpack:///../src/rpc-wrapper.js","webpack:///./src/components/ha-markdown.ts","webpack:///./src/panels/lovelace/cards/hui-markdown-card.ts","webpack:///./src/data/ws-templates.ts"],"names":["addMethods","__webpack_require__","methods","module","exports","w","Worker","p","name","worker","c","callbacks","e","d","data","id","f","error","Object","Error","evt","document","method","Promise","a","b","type","params","customElement","HaMarkdown","_UpdatingElement","[object Object]","args","super","_initialize","this","property","Boolean","changedProps","_get","_getPrototypeOf","prototype","call","markdownWorker","_render","async","innerHTML","renderMarkdown","content","breaks","gfm","tables","allowSvg","_resize","walker","createTreeWalker","nextNode","node","currentNode","HTMLAnchorElement","host","location","target","rel","addEventListener","fireEvent","UpdatingElement","HuiMarkdownCard","_decorate","_LitElement","F","kind","static","key","value","all","then","bind","createElement","decorators","undefined","_config","card_size","split","length","title","config","_disconnect","_hass","_connect","hass","html","classMap","no-header","_content","oldHass","get","oldConfig","themes","theme","applyThemesOnElement","_unsubRenderTemplate","conn","onChange","subscribeMessage","msg","result","assign","subscribeRenderTemplate","connection","template","entity_ids","entity_id","variables","user","catch","unsub","code","css","LitElement"],"mappings":"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","file":"chunk.5570de21f2a57e449e4a.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"renderMarkdown\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"636b40637f9939e0dfaa.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","export default function addMethods(worker, methods) {\n\tlet c = 0;\n\tlet callbacks = {};\n\tworker.addEventListener('message', (e) => {\n\t\tlet d = e.data;\n\t\tif (d.type!=='RPC') return;\n\t\tif (d.id) {\n\t\t\tlet f = callbacks[d.id];\n\t\t\tif (f) {\n\t\t\t\tdelete callbacks[d.id];\n\t\t\t\tif (d.error) {\n\t\t\t\t\tf[1](Object.assign(Error(d.error.message), d.error));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf[0](d.result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet evt = document.createEvent('Event');\n\t\t\tevt.initEvent(d.method, false, false);\n\t\t\tevt.data = d.params;\n\t\t\tworker.dispatchEvent(evt);\n\t\t}\n\t});\n\tmethods.forEach( method => {\n\t\tworker[method] = (...params) => new Promise( (a, b) => {\n\t\t\tlet id = ++c;\n\t\t\tcallbacks[id] = [a, b];\n\t\t\tworker.postMessage({ type: 'RPC', id, method, params });\n\t\t});\n\t});\n}\n","import { customElement, property, UpdatingElement } from \"lit-element\";\n// @ts-ignore\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport markdownWorker from \"workerize-loader!../resources/markdown_worker\";\nimport { fireEvent } from \"../common/dom/fire_event\";\n\nlet worker: any | undefined;\n\n@customElement(\"ha-markdown\")\nclass HaMarkdown extends UpdatingElement {\n  @property() public content = \"\";\n\n  @property({ type: Boolean }) public allowSvg = false;\n\n  @property({ type: Boolean }) public breaks = false;\n\n  protected update(changedProps) {\n    super.update(changedProps);\n\n    if (!worker) {\n      worker = markdownWorker();\n    }\n\n    this._render();\n  }\n\n  private async _render() {\n    this.innerHTML = await worker.renderMarkdown(\n      this.content,\n      {\n        breaks: this.breaks,\n        gfm: true,\n        tables: true,\n      },\n      {\n        allowSvg: this.allowSvg,\n      }\n    );\n\n    this._resize();\n\n    const walker = document.createTreeWalker(\n      this,\n      1 /* SHOW_ELEMENT */,\n      null,\n      false\n    );\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode;\n\n      // Open external links in a new window\n      if (\n        node instanceof HTMLAnchorElement &&\n        node.host !== document.location.host\n      ) {\n        node.target = \"_blank\";\n        node.rel = \"noreferrer\";\n\n        // protect referrer on external links and deny window.opener access for security reasons\n        // (see https://mathiasbynens.github.io/rel-noopener/)\n        node.rel = \"noreferrer noopener\";\n\n        // Fire a resize event when images loaded to notify content resized\n      } else if (node) {\n        node.addEventListener(\"load\", this._resize);\n      }\n    }\n  }\n\n  private _resize = () => fireEvent(this, \"iron-resize\");\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-markdown\": HaMarkdown;\n  }\n}\n","import { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-markdown\";\nimport { subscribeRenderTemplate } from \"../../../data/ws-templates\";\nimport { HomeAssistant } from \"../../../types\";\nimport { LovelaceCard, LovelaceCardEditor } from \"../types\";\nimport { MarkdownCardConfig } from \"./types\";\n\n@customElement(\"hui-markdown-card\")\nexport class HuiMarkdownCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\n      /* webpackChunkName: \"hui-markdown-card-editor\" */ \"../editor/config-elements/hui-markdown-card-editor\"\n    );\n    return document.createElement(\"hui-markdown-card-editor\");\n  }\n\n  public static getStubConfig(): MarkdownCardConfig {\n    return {\n      type: \"markdown\",\n      content:\n        \"The **Markdown** card allows you to write any text. You can style it **bold**, *italicized*, ~strikethrough~ etc. You can do images, links, and more.\\n\\nFor more information see the [Markdown Cheatsheet](https://commonmark.org/help).\",\n    };\n  }\n\n  @property() private _config?: MarkdownCardConfig;\n\n  @property() private _content?: string = \"\";\n\n  @property() private _unsubRenderTemplate?: Promise<UnsubscribeFunc>;\n\n  @property() private _hass?: HomeAssistant;\n\n  public getCardSize(): number {\n    return this._config === undefined\n      ? 3\n      : this._config.card_size === undefined\n      ? this._config.content.split(\"\\n\").length + (this._config.title ? 1 : 0)\n      : this._config.card_size;\n  }\n\n  public setConfig(config: MarkdownCardConfig): void {\n    if (!config.content) {\n      throw new Error(\"Invalid Configuration: Content Required\");\n    }\n\n    this._config = config;\n    this._disconnect().then(() => {\n      if (this._hass) {\n        this._connect();\n      }\n    });\n  }\n\n  public disconnectedCallback() {\n    this._disconnect();\n  }\n\n  public set hass(hass) {\n    this._hass = hass;\n    this._connect();\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config) {\n      return html``;\n    }\n\n    return html`\n      <ha-card .header=\"${this._config.title}\">\n        <ha-markdown\n          breaks\n          class=\"markdown ${classMap({\n            \"no-header\": !this._config.title,\n          })}\"\n          .content=\"${this._content}\"\n        ></ha-markdown>\n      </ha-card>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._config || !this._hass) {\n      return;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProps.get(\"_config\") as\n      | MarkdownCardConfig\n      | undefined;\n\n    if (\n      !oldHass ||\n      !oldConfig ||\n      oldHass.themes !== this.hass.themes ||\n      oldConfig.theme !== this._config.theme\n    ) {\n      applyThemesOnElement(this, this._hass.themes, this._config.theme);\n    }\n  }\n\n  private async _connect() {\n    if (!this._unsubRenderTemplate && this._hass && this._config) {\n      this._unsubRenderTemplate = subscribeRenderTemplate(\n        this._hass.connection,\n        (result) => {\n          this._content = result;\n        },\n        {\n          template: this._config.content,\n          entity_ids: this._config.entity_id,\n          variables: {\n            config: this._config,\n            user: this._hass.user!.name,\n          },\n        }\n      );\n      this._unsubRenderTemplate.catch(() => {\n        this._content = this._config!.content;\n        this._unsubRenderTemplate = undefined;\n      });\n    }\n  }\n\n  private async _disconnect() {\n    if (this._unsubRenderTemplate) {\n      try {\n        const unsub = await this._unsubRenderTemplate;\n        this._unsubRenderTemplate = undefined;\n        await unsub();\n      } catch (e) {\n        if (e.code === \"not_found\") {\n          // If we get here, the connection was probably already closed. Ignore.\n        } else {\n          throw e;\n        }\n      }\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-markdown {\n        display: block;\n        padding: 0 16px 16px;\n        -ms-user-select: initial;\n        -webkit-user-select: initial;\n        -moz-user-select: initial;\n      }\n      .markdown.no-header {\n        padding-top: 16px;\n      }\n      ha-markdown > *:first-child {\n        margin-top: 0;\n      }\n      ha-markdown > *:last-child {\n        margin-bottom: 0;\n      }\n      ha-markdown a {\n        color: var(--primary-color);\n      }\n      ha-markdown img {\n        max-width: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-markdown-card\": HuiMarkdownCard;\n  }\n}\n","import { Connection, UnsubscribeFunc } from \"home-assistant-js-websocket\";\n\ninterface RenderTemplateResult {\n  result: string;\n}\n\nexport const subscribeRenderTemplate = (\n  conn: Connection,\n  onChange: (result: string) => void,\n  params: {\n    template: string;\n    entity_ids?: string | string[];\n    variables?: object;\n  }\n): Promise<UnsubscribeFunc> => {\n  return conn.subscribeMessage(\n    (msg: RenderTemplateResult) => onChange(msg.result),\n    { type: \"render_template\", ...params }\n  );\n};\n"],"sourceRoot":""}