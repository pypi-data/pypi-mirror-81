{"version":3,"sources":["webpack:///./src/components/ha-dialog.ts","webpack:///./src/components/ha-icon-input.ts","webpack:///./src/common/string/slugify.ts","webpack:///./src/panels/config/lovelace/dashboards/dialog-lovelace-dashboard-detail.ts"],"names":["MwcDialog","customElements","get","createCloseHeading","hass","title","html","_templateObject","localize","_decorate","customElement","_initialize","_MwcDialog","F","_MwcDialog2","_inherits","HaDialog","_super","_createSuper","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","d","kind","static","key","value","style","css","_templateObject2","_LitElement","_LitElement2","HaIconInput","decorators","property","attribute","type","Boolean","label","placeholder","_valueChanged","disabled","errorMessage","ev","detail","fireEvent","bubbles","composed","_templateObject3","LitElement","__webpack_require__","__webpack_exports__","slugify","a","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","DialogLovelaceDashboardDetail","_showDialog","_asyncToGenerator","regeneratorRuntime","mark","_callee","params","wrap","_context","prev","next","_params","_error","undefined","_urlPath","urlPath","dashboard","_showInSidebar","show_in_sidebar","_icon","icon","_title","_requireAdmin","require_admin","updateComplete","stop","_x","_this$hass$userData","_this$hass$userData2","_this$_params$dashboa","_this$_params$dashboa2","defaultPanelUrlPath","defaultPanel","urlInvalid","test","titleInvalid","trim","_close","id","_templateObject4","_titleChanged","userData","showAdvanced","_fillUrlPath","_iconChanged","_templateObject5","_urlChanged","_showSidebarChanged","_requireAdminChanged","_templateObject6","_templateObject7","_deleteDashboard","_submitting","_toggleDefault","_updateDashboard","_this$hass$userData3","_this$hass$userData4","slugifyTitle","includes","target","checked","_this$_params","setDefaultPanel","DEFAULT_PANEL","_updateDashboard2","_callee2","_this$_params2","_this$_params$dashboa3","values","_context2","updateDashboard","url_path","mode","createDashboard","t0","message","finish","_deleteDashboard2","_callee3","_context3","removeDashboard","sent","haStyleDialog","_templateObject8"],"mappings":"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","file":"chunk.470af62697a8f7b0d4de.js","sourcesContent":["import \"@material/mwc-dialog\";\nimport type { Dialog } from \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { css, CSSResult, customElement, html } from \"lit-element\";\nimport type { Constructor, HomeAssistant } from \"../types\";\n\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <paper-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    icon=\"hass:close\"\n    dialogAction=\"close\"\n    class=\"close_button\"\n  ></paper-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport \"./ha-icon\";\n\n@customElement(\"ha-icon-input\")\nexport class HaIconInput extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public placeholder?: string;\n\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-input\n        .value=${this.value}\n        .label=${this.label}\n        .placeholder=${this.placeholder}\n        @value-changed=${this._valueChanged}\n        .disabled=${this.disabled}\n        auto-validate\n        .errorMessage=${this.errorMessage}\n        pattern=\"^\\\\S+:\\\\S+$\"\n      >\n        ${this.value || this.placeholder\n          ? html`\n              <ha-icon .icon=${this.value || this.placeholder} slot=\"suffix\">\n              </ha-icon>\n            `\n          : \"\"}\n      </paper-input>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    this.value = ev.detail.value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: ev.detail.value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  static get styles() {\n    return css`\n      ha-icon {\n        position: relative;\n        bottom: 4px;\n      }\n    `;\n  }\n}\n","// https://gist.github.com/hagemann/382adfc57adbd5af078dc93feef01fe1\nexport const slugify = (value: string) => {\n  const a =\n    \"àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;\";\n  const b =\n    \"aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------\";\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\n\n  return value\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\n    .replace(p, (c) => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, \"-and-\") // Replace & with 'and'\n    .replace(/[^\\w-]+/g, \"\") // Remove all non-word characters\n    .replace(/--+/g, \"-\") // Replace multiple - with single -\n    .replace(/^-+/, \"\") // Trim - from start of text\n    .replace(/-+$/, \"\"); // Trim - from end of text\n};\n","import \"@material/mwc-button/mwc-button\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { createCloseHeading } from \"../../../../components/ha-dialog\";\nimport \"../../../../components/ha-icon-input\";\nimport { HaSwitch } from \"../../../../components/ha-switch\";\nimport { slugify } from \"../../../../common/string/slugify\";\nimport {\n  LovelaceDashboard,\n  LovelaceDashboardCreateParams,\n  LovelaceDashboardMutableParams,\n} from \"../../../../data/lovelace\";\nimport { DEFAULT_PANEL, setDefaultPanel } from \"../../../../data/panel\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceDashboardDetailsDialogParams } from \"./show-dialog-lovelace-dashboard-detail\";\n\n@customElement(\"dialog-lovelace-dashboard-detail\")\nexport class DialogLovelaceDashboardDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _params?: LovelaceDashboardDetailsDialogParams;\n\n  @property() private _urlPath!: LovelaceDashboard[\"url_path\"];\n\n  @property() private _showInSidebar!: boolean;\n\n  @property() private _icon!: string;\n\n  @property() private _title!: string;\n\n  @property() private _requireAdmin!: LovelaceDashboard[\"require_admin\"];\n\n  @property() private _error?: string;\n\n  @property() private _submitting = false;\n\n  public async showDialog(\n    params: LovelaceDashboardDetailsDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    this._urlPath = this._params.urlPath || \"\";\n    if (this._params.dashboard) {\n      this._showInSidebar = !!this._params.dashboard.show_in_sidebar;\n      this._icon = this._params.dashboard.icon || \"\";\n      this._title = this._params.dashboard.title || \"\";\n      this._requireAdmin = this._params.dashboard.require_admin || false;\n    } else {\n      this._showInSidebar = true;\n      this._icon = \"\";\n      this._title = \"\";\n      this._requireAdmin = false;\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const defaultPanelUrlPath = this.hass.defaultPanel;\n    const urlInvalid =\n      this._params.urlPath !== \"lovelace\" &&\n      !/^[a-zA-Z0-9_-]+-[a-zA-Z0-9_-]+$/.test(this._urlPath);\n    const titleInvalid = !this._title.trim();\n    return html`\n      <ha-dialog\n        open\n        @closing=\"${this._close}\"\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this._params.urlPath\n            ? this._title ||\n                this.hass.localize(\n                  \"ui.panel.config.lovelace.dashboards.detail.edit_dashboard\"\n                )\n            : this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.new_dashboard\"\n              )\n        )}\n      >\n        <div>\n          ${this._params.dashboard && !this._params.dashboard.id\n            ? this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.cant_edit_yaml\"\n              )\n            : this._params.urlPath === \"lovelace\"\n            ? this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.cant_edit_default\"\n              )\n            : html`\n                ${this._error\n                  ? html` <div class=\"error\">${this._error}</div> `\n                  : \"\"}\n                <div class=\"form\">\n                  <paper-input\n                    .value=${this._title}\n                    @value-changed=${this._titleChanged}\n                    .label=${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.title\"\n                    )}\n                    @blur=${this.hass.userData?.showAdvanced\n                      ? this._fillUrlPath\n                      : undefined}\n                    .invalid=${titleInvalid}\n                    .errorMessage=${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.title_required\"\n                    )}\n                    dialogInitialFocus\n                  ></paper-input>\n                  <ha-icon-input\n                    .value=${this._icon}\n                    @value-changed=${this._iconChanged}\n                    .label=${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.icon\"\n                    )}\n                  ></ha-icon-input>\n                  ${!this._params.dashboard && this.hass.userData?.showAdvanced\n                    ? html`\n                        <paper-input\n                          .value=${this._urlPath}\n                          @value-changed=${this._urlChanged}\n                          .label=${this.hass.localize(\n                            \"ui.panel.config.lovelace.dashboards.detail.url\"\n                          )}\n                          .errorMessage=${this.hass.localize(\n                            \"ui.panel.config.lovelace.dashboards.detail.url_error_msg\"\n                          )}\n                          .invalid=${urlInvalid}\n                        ></paper-input>\n                      `\n                    : \"\"}\n                  <ha-switch\n                    .checked=${this._showInSidebar}\n                    @change=${this._showSidebarChanged}\n                    >${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.show_sidebar\"\n                    )}\n                  </ha-switch>\n                  <ha-switch\n                    .checked=${this._requireAdmin}\n                    @change=${this._requireAdminChanged}\n                    >${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.require_admin\"\n                    )}\n                  </ha-switch>\n                </div>\n              `}\n        </div>\n        ${this._params.urlPath\n          ? html`\n              ${this._params.dashboard?.id\n                ? html`\n                    <mwc-button\n                      slot=\"secondaryAction\"\n                      class=\"warning\"\n                      @click=${this._deleteDashboard}\n                      .disabled=${this._submitting}\n                    >\n                      ${this.hass.localize(\n                        \"ui.panel.config.lovelace.dashboards.detail.delete\"\n                      )}\n                    </mwc-button>\n                  `\n                : \"\"}\n              <mwc-button\n                slot=\"secondaryAction\"\n                @click=${this._toggleDefault}\n                .disabled=${this._params.urlPath === \"lovelace\" &&\n                defaultPanelUrlPath === \"lovelace\"}\n              >\n                ${this._params.urlPath === defaultPanelUrlPath\n                  ? this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.remove_default\"\n                    )\n                  : this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.set_default\"\n                    )}\n              </mwc-button>\n            `\n          : \"\"}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=\"${this._updateDashboard}\"\n          .disabled=${urlInvalid || titleInvalid || this._submitting}\n        >\n          ${this._params.urlPath\n            ? this._params.dashboard?.id\n              ? this.hass.localize(\n                  \"ui.panel.config.lovelace.dashboards.detail.update\"\n                )\n              : this.hass.localize(\"ui.common.close\")\n            : this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.create\"\n              )}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _urlChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._urlPath = ev.detail.value;\n  }\n\n  private _iconChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._icon = ev.detail.value;\n  }\n\n  private _titleChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._title = ev.detail.value;\n    if (!this.hass.userData?.showAdvanced) {\n      this._fillUrlPath();\n    }\n  }\n\n  private _fillUrlPath() {\n    if ((this.hass.userData?.showAdvanced && this._urlPath) || !this._title) {\n      return;\n    }\n\n    const slugifyTitle = slugify(this._title);\n    this._urlPath = slugifyTitle.includes(\"-\")\n      ? slugifyTitle\n      : `lovelace-${slugifyTitle}`;\n  }\n\n  private _showSidebarChanged(ev: Event) {\n    this._showInSidebar = (ev.target as HaSwitch).checked;\n  }\n\n  private _requireAdminChanged(ev: Event) {\n    this._requireAdmin = (ev.target as HaSwitch).checked;\n  }\n\n  private _toggleDefault() {\n    const urlPath = this._params?.urlPath;\n    if (!urlPath) {\n      return;\n    }\n    setDefaultPanel(\n      this,\n      urlPath === this.hass.defaultPanel ? DEFAULT_PANEL : urlPath\n    );\n  }\n\n  private async _updateDashboard() {\n    if (this._params?.urlPath && !this._params.dashboard?.id) {\n      this._close();\n    }\n    this._submitting = true;\n    try {\n      const values: Partial<LovelaceDashboardMutableParams> = {\n        require_admin: this._requireAdmin,\n        show_in_sidebar: this._showInSidebar,\n        icon: this._icon || undefined,\n        title: this._title,\n      };\n      if (this._params!.dashboard) {\n        await this._params!.updateDashboard(values);\n      } else {\n        (values as LovelaceDashboardCreateParams).url_path = this._urlPath.trim();\n        (values as LovelaceDashboardCreateParams).mode = \"storage\";\n        await this._params!.createDashboard(\n          values as LovelaceDashboardCreateParams\n        );\n      }\n      this._close();\n    } catch (err) {\n      this._error = err?.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteDashboard() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeDashboard()) {\n        this._close();\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        ha-switch {\n          padding: 16px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-lovelace-dashboard-detail\": DialogLovelaceDashboardDetail;\n  }\n}\n"],"sourceRoot":""}