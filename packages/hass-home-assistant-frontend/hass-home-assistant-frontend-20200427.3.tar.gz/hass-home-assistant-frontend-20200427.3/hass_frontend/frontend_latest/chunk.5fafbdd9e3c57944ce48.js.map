{"version":3,"sources":["webpack:///./node_modules/@polymer/iron-checked-element-behavior/iron-checked-element-behavior.js","webpack:///./node_modules/@polymer/paper-behaviors/paper-checked-element-behavior.js","webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./node_modules/@polymer/paper-radio-button/paper-radio-button.js","webpack:///./node_modules/@polymer/paper-radio-group/paper-radio-group.js","webpack:///./src/panels/config/entities/entity-registry-basic-editor.ts","webpack:///./src/panels/config/entities/editor-tabs/settings/entity-settings-helper-tab.ts"],"names":["IronCheckedElementBehaviorImpl","properties","checked","type","Boolean","value","reflectToAttribute","notify","observer","toggles","String","observers","created","this","_hasIronCheckedElementBehavior","_getValidity","_value","disabled","required","_requiredChanged","setAttribute","removeAttribute","_checkedChanged","active","fire","_valueChanged","undefined","IronCheckedElementBehavior","IronFormElementBehavior","IronValidatableBehavior","__webpack_require__","d","__webpack_exports__","PaperCheckedElementBehavior","PaperCheckedElementBehaviorImpl","call","hasRipple","_ripple","_buttonStateChanged","PaperRippleBehavior","isAttached","PaperInkyFocusBehavior","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","Polymer","_template","html","is","_polymer_paper_behaviors_paper_checked_element_behavior_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_6__","template","behaviors","hostAttributes","role","aria-checked","tabindex","ariaActiveAttribute","ready","_rippleContainer","$","radioContainer","attached","afterNextRender","getComputedStyleValue","trim","size","parseFloat","defaultInkSize","Math","floor","updateStyles","--paper-radio-button-ink-size","_polymer_iron_menu_behavior_iron_menubar_behavior_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_iron_selector_iron_selectable_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_5__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_6__","IronMenubarBehavior","attrForSelected","selectedAttribute","selectable","allowEmptySelection","select","newItem","_valueToItem","hasAttribute","selected","oldItem","IronSelectableBehavior","apply","_activateFocusedItem","_itemActivate","_valueForItem","focusedItem","_onUpKey","event","_focusPrevious","preventDefault","_onDownKey","_focusNext","_onLeftKey","IronMenubarBehaviorImpl","arguments","_onRightKey","_decorate","customElement","_initialize","_LitElement","HaEntityRegistryBasicEditor","[object Object]","args","super","F","kind","decorators","property","key","async","_submitting","params","new_entity_id","_entityId","_disabledBy","disabled_by","updateEntityRegistryEntry","hass","_origEntityId","changedProperties","_get","_getPrototypeOf","prototype","has","entry","entity_id","invalidDomainUpdate","computeDomain","_entityIdChanged","localize","_disabledByChanged","ev","detail","target","static","css","LitElement","HELPERS","input_boolean","fetch","fetchInputBoolean","update","updateInputBoolean","delete","deleteInputBoolean","input_text","fetchInputText","updateInputText","deleteInputText","input_number","fetchInputNumber","updateInputNumber","deleteInputNumber","input_datetime","fetchInputDateTime","updateInputDateTime","deleteInputDateTime","input_select","fetchInputSelect","updateInputSelect","deleteInputSelect","EntityRegistrySettingsHelper","entity_settings_helper_tab_decorate","query","entity_settings_helper_tab_get","entity_settings_helper_tab_getPrototypeOf","_componentLoaded","isComponentLoaded","platform","_error","_item","_getItem","stateObj","states","dialogElement","dynamicElement","item","_confirmDeleteItem","attributes","restored","_updateItem","name","items","find","id","unique_id","updateComplete","fireEvent","_this$_registryEditor","_registryEditor","updateEntry","err","message","showConfirmationDialog","text","removeEntityRegistryEntry"],"mappings":"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","file":"chunk.5fafbdd9e3c57944ce48.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronFormElementBehavior} from '@polymer/iron-form-element-behavior/iron-form-element-behavior.js';\nimport {IronValidatableBehavior} from '@polymer/iron-validatable-behavior/iron-validatable-behavior.js';\n\n/**\n * Use `IronCheckedElementBehavior` to implement a custom element that has a\n * `checked` property, which can be used for validation if the element is also\n * `required`. Element instances implementing this behavior will also be\n * registered for use in an `iron-form` element.\n *\n * @demo demo/index.html\n * @polymerBehavior IronCheckedElementBehavior\n */\nexport const IronCheckedElementBehaviorImpl = {\n\n  properties: {\n    /**\n     * Fired when the checked state changes.\n     *\n     * @event iron-change\n     */\n\n    /**\n     * Gets or sets the state, `true` is checked and `false` is unchecked.\n     */\n    checked: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true,\n      notify: true,\n      observer: '_checkedChanged'\n    },\n\n    /**\n     * If true, the button toggles the active state with each tap or press\n     * of the spacebar.\n     */\n    toggles: {type: Boolean, value: true, reflectToAttribute: true},\n\n    /* Overriden from IronFormElementBehavior */\n    value: {type: String, value: 'on', observer: '_valueChanged'}\n  },\n\n  observers: ['_requiredChanged(required)'],\n\n  created: function() {\n    // Used by `iron-form` to handle the case that an element with this behavior\n    // doesn't have a role of 'checkbox' or 'radio', but should still only be\n    // included when the form is serialized if `this.checked === true`.\n    this._hasIronCheckedElementBehavior = true;\n  },\n\n  /**\n   * Returns false if the element is required and not checked, and true\n   * otherwise.\n   * @param {*=} _value Ignored.\n   * @return {boolean} true if `required` is false or if `checked` is true.\n   */\n  _getValidity: function(_value) {\n    return this.disabled || !this.required || this.checked;\n  },\n\n  /**\n   * Update the aria-required label when `required` is changed.\n   */\n  _requiredChanged: function() {\n    if (this.required) {\n      this.setAttribute('aria-required', 'true');\n    } else {\n      this.removeAttribute('aria-required');\n    }\n  },\n\n  /**\n   * Fire `iron-changed` when the checked state changes.\n   */\n  _checkedChanged: function() {\n    this.active = this.checked;\n    this.fire('iron-change');\n  },\n\n  /**\n   * Reset value to 'on' if it is set to `undefined`.\n   */\n  _valueChanged: function() {\n    if (this.value === undefined || this.value === null) {\n      this.value = 'on';\n    }\n  }\n};\n\n/** @polymerBehavior */\nexport const IronCheckedElementBehavior = [\n  IronFormElementBehavior,\n  IronValidatableBehavior,\n  IronCheckedElementBehaviorImpl\n];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronCheckedElementBehavior, IronCheckedElementBehaviorImpl} from '@polymer/iron-checked-element-behavior/iron-checked-element-behavior.js';\n\nimport {PaperInkyFocusBehavior} from './paper-inky-focus-behavior.js';\nimport {PaperRippleBehavior} from './paper-ripple-behavior.js';\n\n/**\n * Use `PaperCheckedElementBehavior` to implement a custom element that has a\n * `checked` property similar to `IronCheckedElementBehavior` and is compatible\n * with having a ripple effect.\n * @polymerBehavior PaperCheckedElementBehavior\n */\nexport const PaperCheckedElementBehaviorImpl = {\n  /**\n   * Synchronizes the element's checked state with its ripple effect.\n   */\n  _checkedChanged: function() {\n    IronCheckedElementBehaviorImpl._checkedChanged.call(this);\n    if (this.hasRipple()) {\n      if (this.checked) {\n        this._ripple.setAttribute('checked', '');\n      } else {\n        this._ripple.removeAttribute('checked');\n      }\n    }\n  },\n\n  /**\n   * Synchronizes the element's `active` and `checked` state.\n   */\n  _buttonStateChanged: function() {\n    PaperRippleBehavior._buttonStateChanged.call(this);\n    if (this.disabled) {\n      return;\n    }\n    if (this.isAttached) {\n      this.checked = this.active;\n    }\n  }\n};\n\n/** @polymerBehavior */\nexport const PaperCheckedElementBehavior = [\n  PaperInkyFocusBehavior,\n  IronCheckedElementBehavior,\n  PaperCheckedElementBehaviorImpl\n];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {PaperCheckedElementBehavior} from '@polymer/paper-behaviors/paper-checked-element-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {afterNextRender} from '@polymer/polymer/lib/utils/render-status.js';\n\nconst template = html`\n<style>\n  :host {\n    display: inline-block;\n    line-height: 0;\n    white-space: nowrap;\n    cursor: pointer;\n    @apply --paper-font-common-base;\n    --calculated-paper-radio-button-size: var(--paper-radio-button-size, 16px);\n    /* -1px is a sentinel for the default and is replace in \\`attached\\`. */\n    --calculated-paper-radio-button-ink-size: var(--paper-radio-button-ink-size, -1px);\n  }\n\n  :host(:focus) {\n    outline: none;\n  }\n\n  #radioContainer {\n    @apply --layout-inline;\n    @apply --layout-center-center;\n    position: relative;\n    width: var(--calculated-paper-radio-button-size);\n    height: var(--calculated-paper-radio-button-size);\n    vertical-align: middle;\n\n    @apply --paper-radio-button-radio-container;\n  }\n\n  #ink {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    right: auto;\n    width: var(--calculated-paper-radio-button-ink-size);\n    height: var(--calculated-paper-radio-button-ink-size);\n    color: var(--paper-radio-button-unchecked-ink-color, var(--primary-text-color));\n    opacity: 0.6;\n    pointer-events: none;\n    -webkit-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n  }\n\n  #ink[checked] {\n    color: var(--paper-radio-button-checked-ink-color, var(--primary-color));\n  }\n\n  #offRadio, #onRadio {\n    position: absolute;\n    box-sizing: border-box;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n  }\n\n  #offRadio {\n    border: 2px solid var(--paper-radio-button-unchecked-color, var(--primary-text-color));\n    background-color: var(--paper-radio-button-unchecked-background-color, transparent);\n    transition: border-color 0.28s;\n  }\n\n  #onRadio {\n    background-color: var(--paper-radio-button-checked-color, var(--primary-color));\n    -webkit-transform: scale(0);\n    transform: scale(0);\n    transition: -webkit-transform ease 0.28s;\n    transition: transform ease 0.28s;\n    will-change: transform;\n  }\n\n  :host([checked]) #offRadio {\n    border-color: var(--paper-radio-button-checked-color, var(--primary-color));\n  }\n\n  :host([checked]) #onRadio {\n    -webkit-transform: scale(0.5);\n    transform: scale(0.5);\n  }\n\n  #radioLabel {\n    line-height: normal;\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    margin-left: var(--paper-radio-button-label-spacing, 10px);\n    white-space: normal;\n    color: var(--paper-radio-button-label-color, var(--primary-text-color));\n\n    @apply --paper-radio-button-label;\n  }\n\n  :host([checked]) #radioLabel {\n    @apply --paper-radio-button-label-checked;\n  }\n\n  #radioLabel:dir(rtl) {\n    margin-left: 0;\n    margin-right: var(--paper-radio-button-label-spacing, 10px);\n  }\n\n  #radioLabel[hidden] {\n    display: none;\n  }\n\n  /* disabled state */\n\n  :host([disabled]) #offRadio {\n    border-color: var(--paper-radio-button-unchecked-color, var(--primary-text-color));\n    opacity: 0.5;\n  }\n\n  :host([disabled][checked]) #onRadio {\n    background-color: var(--paper-radio-button-unchecked-color, var(--primary-text-color));\n    opacity: 0.5;\n  }\n\n  :host([disabled]) #radioLabel {\n    /* slightly darker than the button, so that it's readable */\n    opacity: 0.65;\n  }\n</style>\n\n<div id=\"radioContainer\">\n  <div id=\"offRadio\"></div>\n  <div id=\"onRadio\"></div>\n</div>\n\n<div id=\"radioLabel\"><slot></slot></div>`;\ntemplate.setAttribute('strip-whitespace', '');\n\n/**\nMaterial design: [Radio button](https://www.google.com/design/spec/components/selection-controls.html#selection-controls-radio-button)\n\n`paper-radio-button` is a button that can be either checked or unchecked. The\nuser can tap the radio button to check or uncheck it.\n\nUse a `<paper-radio-group>` to group a set of radio buttons. When radio buttons\nare inside a radio group, exactly one radio button in the group can be checked\nat any time.\n\nExample:\n\n    <paper-radio-button></paper-radio-button>\n    <paper-radio-button>Item label</paper-radio-button>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-radio-button-unchecked-background-color` | Radio button background color when the input is not checked | `transparent`\n`--paper-radio-button-unchecked-color` | Radio button color when the input is not checked | `--primary-text-color`\n`--paper-radio-button-unchecked-ink-color` | Selected/focus ripple color when the input is not checked | `--primary-text-color`\n`--paper-radio-button-checked-color` | Radio button color when the input is checked | `--primary-color`\n`--paper-radio-button-checked-ink-color` | Selected/focus ripple color when the input is checked | `--primary-color`\n`--paper-radio-button-size` | Size of the radio button | `16px`\n`--paper-radio-button-ink-size` | Size of the ripple | `48px`\n`--paper-radio-button-label-color` | Label color | `--primary-text-color`\n`--paper-radio-button-label-spacing` | Spacing between the label and the button | `10px`\n`--paper-radio-button-radio-container` | A mixin applied to the internal radio container | `{}`\n`--paper-radio-button-label` | A mixin applied to the internal label | `{}`\n`--paper-radio-button-label-checked` | A mixin applied to the internal label when the radio button is checked | `{}`\n\nThis element applies the mixin `--paper-font-common-base` but does not import\n`paper-styles/typography.html`. In order to apply the `Roboto` font to this\nelement, make sure you've imported `paper-styles/typography.html`.\n\n@group Paper Elements\n@element paper-radio-button\n@demo demo/index.html\n*/\nPolymer({\n  _template: template,\n\n  is: 'paper-radio-button',\n\n  behaviors: [PaperCheckedElementBehavior],\n\n  hostAttributes: {role: 'radio', 'aria-checked': false, tabindex: 0},\n\n  properties: {\n    /**\n     * Fired when the checked state changes due to user interaction.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when the checked state changes.\n     *\n     * @event iron-change\n     */\n\n    ariaActiveAttribute: {type: String, value: 'aria-checked'}\n  },\n\n  ready: function() {\n    this._rippleContainer = this.$.radioContainer;\n  },\n\n  attached: function() {\n    // Wait until styles have resolved to check for the default sentinel.\n    // See polymer#4009 for more details.\n    afterNextRender(this, function() {\n      var inkSize =\n          this.getComputedStyleValue('--calculated-paper-radio-button-ink-size')\n              .trim();\n      // If unset, compute and set the default `--paper-radio-button-ink-size`.\n      if (inkSize === '-1px') {\n        var size = parseFloat(\n            this.getComputedStyleValue('--calculated-paper-radio-button-size')\n                .trim());\n        var defaultInkSize = Math.floor(3 * size);\n\n        // The button and ripple need to have the same parity so that their\n        // centers align.\n        if (defaultInkSize % 2 !== size % 2) {\n          defaultInkSize++;\n        }\n\n        this.updateStyles({\n          '--paper-radio-button-ink-size': defaultInkSize + 'px',\n        });\n      }\n    });\n  },\n})\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport '@polymer/paper-radio-button/paper-radio-button.js';\n\nimport {IronMenubarBehavior, IronMenubarBehaviorImpl} from '@polymer/iron-menu-behavior/iron-menubar-behavior.js';\nimport {IronSelectableBehavior} from '@polymer/iron-selector/iron-selectable.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design: [Radio\nbutton](https://www.google.com/design/spec/components/selection-controls.html#selection-controls-radio-button)\n\n`paper-radio-group` allows user to select at most one radio button from a set.\nChecking one radio button that belongs to a radio group unchecks any\npreviously checked radio button within the same group. Use\n`selected` to get or set the selected radio button.\n\nThe <paper-radio-buttons> inside the group must have the `name` attribute\nset.\n\nExample:\n\n    <paper-radio-group selected=\"small\">\n      <paper-radio-button name=\"small\">Small</paper-radio-button>\n      <paper-radio-button name=\"medium\">Medium</paper-radio-button>\n      <paper-radio-button name=\"large\">Large</paper-radio-button>\n    </paper-radio-group>\n\nRadio-button-groups can be made optional, and allow zero buttons to be selected:\n\n    <paper-radio-group selected=\"small\" allow-empty-selection>\n      <paper-radio-button name=\"small\">Small</paper-radio-button>\n      <paper-radio-button name=\"medium\">Medium</paper-radio-button>\n      <paper-radio-button name=\"large\">Large</paper-radio-button>\n    </paper-radio-group>\n\nSee <a href=\"paper-radio-button\">paper-radio-button</a> for more\ninformation about `paper-radio-button`.\n\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-radio-group-item-padding` | The padding of the item | `12px`\n\n@group Paper Elements\n@element paper-radio-group\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n      }\n\n      :host ::slotted(*) {\n        padding: var(--paper-radio-group-item-padding, 12px);\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-radio-group',\n  behaviors: [IronMenubarBehavior],\n\n  /** @private */\n  hostAttributes: {\n    role: 'radiogroup',\n  },\n\n  properties: {\n    /**\n     * Fired when the radio group selection changes.\n     *\n     * @event paper-radio-group-changed\n     */\n\n    /**\n     * Overriden from Polymer.IronSelectableBehavior\n     */\n    attrForSelected: {type: String, value: 'name'},\n\n    /**\n     * Overriden from Polymer.IronSelectableBehavior\n     */\n    selectedAttribute: {type: String, value: 'checked'},\n\n    /**\n     * Overriden from Polymer.IronSelectableBehavior\n     */\n    selectable: {type: String, value: 'paper-radio-button'},\n\n    /**\n     * If true, radio-buttons can be deselected\n     */\n    allowEmptySelection: {type: Boolean, value: false}\n  },\n\n  /**\n   * Selects the given value.\n   */\n  select: function(value) {\n    var newItem = this._valueToItem(value);\n    if (newItem && newItem.hasAttribute('disabled')) {\n      return;\n    }\n\n    if (this.selected) {\n      var oldItem = this._valueToItem(this.selected);\n\n      if (this.selected == value) {\n        // If deselecting is allowed we'll have to apply an empty selection.\n        // Otherwise, we should force the selection to stay and make this\n        // action a no-op.\n        if (this.allowEmptySelection) {\n          value = '';\n        } else {\n          if (oldItem)\n            oldItem.checked = true;\n          return;\n        }\n      }\n\n      if (oldItem)\n        oldItem.checked = false;\n    }\n\n    IronSelectableBehavior.select.apply(this, [value]);\n    this.fire('paper-radio-group-changed');\n  },\n\n  _activateFocusedItem: function() {\n    this._itemActivate(this._valueForItem(this.focusedItem), this.focusedItem);\n  },\n\n  _onUpKey: function(event) {\n    this._focusPrevious();\n    event.preventDefault();\n    this._activateFocusedItem();\n  },\n\n  _onDownKey: function(event) {\n    this._focusNext();\n    event.preventDefault();\n    this._activateFocusedItem();\n  },\n\n  _onLeftKey: function(event) {\n    IronMenubarBehaviorImpl._onLeftKey.apply(this, arguments);\n    this._activateFocusedItem();\n  },\n\n  _onRightKey: function(event) {\n    IronMenubarBehaviorImpl._onRightKey.apply(this, arguments);\n    this._activateFocusedItem();\n  }\n});\n","import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport \"../../../components/ha-switch\";\nimport type { HaSwitch } from \"../../../components/ha-switch\";\nimport {\n  EntityRegistryEntryUpdateParams,\n  ExtEntityRegistryEntry,\n  updateEntityRegistryEntry,\n} from \"../../../data/entity_registry\";\nimport type { PolymerChangedEvent } from \"../../../polymer-types\";\nimport type { HomeAssistant } from \"../../../types\";\n\n@customElement(\"ha-registry-basic-editor\")\nexport class HaEntityRegistryBasicEditor extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public entry!: ExtEntityRegistryEntry;\n\n  @property() private _origEntityId!: string;\n\n  @property() private _entityId!: string;\n\n  @property() private _disabledBy!: string | null;\n\n  @property() private _submitting?: boolean;\n\n  public async updateEntry(): Promise<void> {\n    this._submitting = true;\n    const params: Partial<EntityRegistryEntryUpdateParams> = {\n      new_entity_id: this._entityId.trim(),\n    };\n    if (this._disabledBy === null || this._disabledBy === \"user\") {\n      params.disabled_by = this._disabledBy;\n    }\n    try {\n      await updateEntityRegistryEntry(this.hass!, this._origEntityId, params);\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (!changedProperties.has(\"entry\")) {\n      return;\n    }\n    if (this.entry) {\n      this._origEntityId = this.entry.entity_id;\n      this._entityId = this.entry.entity_id;\n      this._disabledBy = this.entry.disabled_by;\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (\n      !this.hass ||\n      !this.entry ||\n      this.entry.entity_id !== this._origEntityId\n    ) {\n      return html``;\n    }\n    const invalidDomainUpdate =\n      computeDomain(this._entityId.trim()) !==\n      computeDomain(this.entry.entity_id);\n\n    return html`\n      <paper-input\n        .value=${this._entityId}\n        @value-changed=${this._entityIdChanged}\n        .label=${this.hass.localize(\n          \"ui.dialogs.entity_registry.editor.entity_id\"\n        )}\n        error-message=\"Domain needs to stay the same\"\n        .invalid=${invalidDomainUpdate}\n        .disabled=${this._submitting}\n      ></paper-input>\n      <div class=\"row\">\n        <ha-switch\n          .checked=${!this._disabledBy}\n          @change=${this._disabledByChanged}\n        >\n          <div>\n            <div>\n              ${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.enabled_label\"\n              )}\n            </div>\n            <div class=\"secondary\">\n              ${this._disabledBy && this._disabledBy !== \"user\"\n                ? this.hass.localize(\n                    \"ui.dialogs.entity_registry.editor.enabled_cause\",\n                    \"cause\",\n                    this.hass.localize(\n                      `config_entry.disabled_by.${this._disabledBy}`\n                    )\n                  )\n                : \"\"}\n              ${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.enabled_description\"\n              )}\n              <br />${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.note\"\n              )}\n            </div>\n          </div>\n        </ha-switch>\n      </div>\n    `;\n  }\n\n  private _entityIdChanged(ev: PolymerChangedEvent<string>): void {\n    this._entityId = ev.detail.value;\n  }\n\n  private _disabledByChanged(ev: Event): void {\n    this._disabledBy = (ev.target as HaSwitch).checked ? null : \"user\";\n  }\n\n  static get styles() {\n    return css`\n      .row {\n        margin-top: 8px;\n        color: var(--primary-text-color);\n      }\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport { isComponentLoaded } from \"../../../../../common/config/is_component_loaded\";\nimport { dynamicElement } from \"../../../../../common/dom/dynamic-element-directive\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport { HaPaperDialog } from \"../../../../../components/dialog/ha-paper-dialog\";\nimport {\n  ExtEntityRegistryEntry,\n  removeEntityRegistryEntry,\n} from \"../../../../../data/entity_registry\";\nimport {\n  deleteInputBoolean,\n  fetchInputBoolean,\n  updateInputBoolean,\n} from \"../../../../../data/input_boolean\";\nimport {\n  deleteInputDateTime,\n  fetchInputDateTime,\n  updateInputDateTime,\n} from \"../../../../../data/input_datetime\";\nimport {\n  deleteInputNumber,\n  fetchInputNumber,\n  updateInputNumber,\n} from \"../../../../../data/input_number\";\nimport {\n  deleteInputSelect,\n  fetchInputSelect,\n  updateInputSelect,\n} from \"../../../../../data/input_select\";\nimport {\n  deleteInputText,\n  fetchInputText,\n  updateInputText,\n} from \"../../../../../data/input_text\";\nimport { showConfirmationDialog } from \"../../../../../dialogs/generic/show-dialog-box\";\nimport type { HomeAssistant } from \"../../../../../types\";\nimport type { Helper } from \"../../../helpers/const\";\nimport \"../../../helpers/forms/ha-input_boolean-form\";\nimport \"../../../helpers/forms/ha-input_datetime-form\";\nimport \"../../../helpers/forms/ha-input_number-form\";\nimport \"../../../helpers/forms/ha-input_select-form\";\nimport \"../../../helpers/forms/ha-input_text-form\";\nimport \"../../entity-registry-basic-editor\";\nimport type { HaEntityRegistryBasicEditor } from \"../../entity-registry-basic-editor\";\n\nconst HELPERS = {\n  input_boolean: {\n    fetch: fetchInputBoolean,\n    update: updateInputBoolean,\n    delete: deleteInputBoolean,\n  },\n  input_text: {\n    fetch: fetchInputText,\n    update: updateInputText,\n    delete: deleteInputText,\n  },\n  input_number: {\n    fetch: fetchInputNumber,\n    update: updateInputNumber,\n    delete: deleteInputNumber,\n  },\n  input_datetime: {\n    fetch: fetchInputDateTime,\n    update: updateInputDateTime,\n    delete: deleteInputDateTime,\n  },\n  input_select: {\n    fetch: fetchInputSelect,\n    update: updateInputSelect,\n    delete: deleteInputSelect,\n  },\n};\n\n@customElement(\"entity-settings-helper-tab\")\nexport class EntityRegistrySettingsHelper extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public entry!: ExtEntityRegistryEntry;\n\n  @property() public dialogElement!: HaPaperDialog;\n\n  @property() private _error?: string;\n\n  @property() private _item?: Helper | null;\n\n  @property() private _submitting?: boolean;\n\n  @property() private _componentLoaded?: boolean;\n\n  @query(\"ha-registry-basic-editor\")\n  private _registryEditor?: HaEntityRegistryBasicEditor;\n\n  protected firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n    this._componentLoaded = isComponentLoaded(this.hass, this.entry.platform);\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"entry\")) {\n      this._error = undefined;\n      this._item = undefined;\n      this._getItem();\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (this._item === undefined) {\n      return html``;\n    }\n    const stateObj = this.hass.states[this.entry.entity_id];\n    return html`\n      <paper-dialog-scrollable .dialogElement=${this.dialogElement}>\n        ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n        <div class=\"form\">\n          ${!this._componentLoaded\n            ? this.hass.localize(\n                \"ui.dialogs.helper_settings.platform_not_loaded\",\n                \"platform\",\n                this.entry.platform\n              )\n            : this._item === null\n            ? this.hass.localize(\"ui.dialogs.helper_settings.yaml_not_editable\")\n            : html`\n                <div @value-changed=${this._valueChanged}>\n                  ${dynamicElement(`ha-${this.entry.platform}-form`, {\n                    hass: this.hass,\n                    item: this._item,\n                    entry: this.entry,\n                  })}\n                </div>\n              `}\n          <ha-registry-basic-editor\n            .hass=${this.hass}\n            .entry=${this.entry}\n          ></ha-registry-basic-editor>\n        </div>\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <mwc-button\n          class=\"warning\"\n          @click=${this._confirmDeleteItem}\n          .disabled=${this._submitting ||\n          (!this._item && !stateObj?.attributes.restored)}\n        >\n          ${this.hass.localize(\"ui.dialogs.entity_registry.editor.delete\")}\n        </mwc-button>\n        <mwc-button\n          @click=${this._updateItem}\n          .disabled=${this._submitting || (this._item && !this._item.name)}\n        >\n          ${this.hass.localize(\"ui.dialogs.entity_registry.editor.update\")}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    this._error = undefined;\n    this._item = ev.detail.value;\n  }\n\n  private async _getItem() {\n    const items = await HELPERS[this.entry.platform].fetch(this.hass!);\n    this._item = items.find((item) => item.id === this.entry.unique_id) || null;\n    await this.updateComplete;\n    fireEvent(this.dialogElement as HTMLElement, \"iron-resize\");\n  }\n\n  private async _updateItem(): Promise<void> {\n    this._submitting = true;\n    try {\n      if (this._componentLoaded && this._item) {\n        await HELPERS[this.entry.platform].update(\n          this.hass!,\n          this._item.id,\n          this._item\n        );\n      }\n      await this._registryEditor?.updateEntry();\n      fireEvent(this, \"close-dialog\");\n    } catch (err) {\n      this._error = err.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _confirmDeleteItem(): Promise<void> {\n    if (\n      !(await showConfirmationDialog(this, {\n        text: this.hass.localize(\n          \"ui.dialogs.entity_registry.editor.confirm_delete\"\n        ),\n      }))\n    ) {\n      return;\n    }\n\n    this._submitting = true;\n\n    try {\n      if (this._componentLoaded && this._item) {\n        await HELPERS[this.entry.platform].delete(this.hass!, this._item.id);\n      } else {\n        const stateObj = this.hass.states[this.entry.entity_id];\n        if (!stateObj?.attributes.restored) {\n          return;\n        }\n        await removeEntityRegistryEntry(this.hass!, this.entry.entity_id);\n      }\n      fireEvent(this, \"close-dialog\");\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        padding: 0 !important;\n      }\n      .form {\n        padding-bottom: 24px;\n      }\n      .buttons {\n        display: flex;\n        justify-content: space-between;\n        padding: 8px;\n        margin-bottom: -20px;\n      }\n      mwc-button.warning {\n        --mdc-theme-primary: var(--google-red-500);\n      }\n      .error {\n        color: var(--google-red-500);\n      }\n      .row {\n        margin-top: 8px;\n        color: var(--primary-text-color);\n      }\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"entity-platform-helper-tab\": EntityRegistrySettingsHelper;\n  }\n}\n"],"sourceRoot":""}