Metadata-Version: 2.1
Name: berycker
Version: 0.2.0
Summary: Docker-like tool to set up a headless RaspberryPi or linux
Home-page: https://probio.basashi.tech/introduction/
License: MIT
Author: Tomoki Murayama
Author-email: muratomo.0205@gmail.com
Requires-Python: >=3.8,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Requires-Dist: fire (>=0.3.1,<0.4.0)
Requires-Dist: paramiko (>=2.7.2,<3.0.0)
Requires-Dist: psutil (>=5.7.2,<6.0.0)
Requires-Dist: termcolor (>=1.1.0,<2.0.0)
Project-URL: Repository, https://github.com/basashi-G/berycker
Description-Content-Type: text/x-rst

berycker
========

Docker-like tool to set up a headless RaspberryPi
ヘッドレスでのRaspberryPiやlinuxの初期設定をdockerライクにする、コマンドラインツールです。
現時点ではラズパイのみ対応

install
=======
::

    pip install berycker


コマンド一覧
==============

init
****
::

    berycker init

wifiやsshの設定を行います。
イメージを作ったあと、イメージを焼いたドライブを挿入したままの状態で実行してください。

build
*****
::

    berycker build

ラズパイが起動した後に実行してください。
beryckerfileを読み込んでマシンの初期設定を行います。
この際、sshの接続で必要なホスト名、ユーザー名、パスワードをインタラクティブに答える必要があります。

beryckerfile
============
DockerFileにインスパイアされたものなので、Dockerを使ったことがある方は親しみやすいでしょう。
基本的には関数を実行していく順に並べるだけです。
関数を先頭に書き、スペースに続けて引数を書きます。
**関数名は大文字で書くことに注意してください。**
関数は5つあります。
::

    FUNCTION_NAME arg

beryckerfileの例はexampleディレクトリにあります。

RUN
***
::

    RUN command

この関数は任意のコマンドを実行します。

ADD
***
::

    ADD "string" path

この関数は任意の文字列を既存のファイルに書き込みます。
絶対パスとホームディレクトリに対しての相対パスをpathに入力できます。
**任意の文字列はダブルクォーテーションで囲む必要があることに注意してください。**

IP
**
::

    IP ip_adress

この関数はIPアドレスを任意のIPアドレスに固定します。

SSH
***
::

    SSH pub_key

この関数はSSHの公開鍵をマシンに登録します。公開鍵はテキストファイルに保存するべきではないので、以下の変数を使うことをおすすめします。

HOSTNAME
********

::

    HOSTNAME any_name

この関数は任意のホスト名をマシンに割り当てます。

変数
****
::

    SSH {pub_key}

パスワードなどのファイルに記入することがはばかられる値や、マシンごとに値が異なる所（ホスト名など）を変数として定義できます。
beryckerfile内で定義した変数は、ビルドするときにインタラクティブに入力できます。





