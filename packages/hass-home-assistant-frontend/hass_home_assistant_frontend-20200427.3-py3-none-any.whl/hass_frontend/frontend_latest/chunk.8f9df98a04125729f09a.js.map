{"version":3,"sources":["webpack:///./src/components/ha-switch.ts","webpack:///./src/common/util/render-status.ts","webpack:///./src/components/ha-dialog.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/panels/config/zone/dialog-zone-detail.ts","webpack:///./src/common/location/add_distance_to_coord.ts"],"names":["MwcSwitch","customElements","get","_decorate","customElement","_initialize","_MwcSwitch","HaSwitch","[object Object]","args","super","this","F","d","kind","decorators","property","type","Boolean","key","value","query","_get","_getPrototypeOf","prototype","call","style","setProperty","classList","toggle","_slot","assignedNodes","length","addEventListener","haptic","forwardHaptic","html","ripple","interactionNode","_haChangeHandler","static","css","e","mdcFoundation","handleChange","checked","formElement","__webpack_require__","__webpack_exports__","afterNextRender","nextRender","cb","requestAnimationFrame","setTimeout","Promise","resolve","MwcDialog","createCloseHeading","hass","title","localize","_MwcDialog","LocationEditor","_LitElement","_leafletMap","location","_locationMarker","getBounds","fitBounds","setView","fitZoom","_ignoreFitToMap","changedProps","_initMap","Leaflet","has","_updateMarker","fitMap","_updateRadius","_updateRadiusColor","_updateIcon","shadowRoot","querySelector","async","setupLeafletMap","_mapEl","radius","ev","_locationUpdated","latlng","invalidateSize","longitude","lng","Math","abs","lat","fireEvent","undefined","bubbles","getRadius","icon","_iconEl","iconHTML","el","document","createElement","setAttribute","outerHTML","divIcon","iconSize","className","_setIcon","setIcon","editing","_moveMarker","enable","moveMarker","resizeMarker","_resizeMarkers","target","getLatLng","_radiusUpdated","setLatLng","disable","_setupEdit","circle","color","radiusColor","defaultRadiusColor","addLayer","marker","draggable","remove","setRadius","setStyle","LitElement","DialogZoneDetail","params","_params","_error","entry","_name","name","_icon","_latitude","latitude","config","_longitude","_passive","passive","_radius","initConfig","getZoneEditorInitData","movedHomeLocation","dx","random","dy","PI","cos","updateComplete","nameValid","trim","iconValid","includes","latValid","String","lngValid","radiusValid","valid","_close","_valueChanged","_locationValue","passiveRadiusColor","_locationChanged","_passiveChanged","_deleteEntry","_submitting","_updateEntry","Number","currentTarget","configValue","detail","values","updateEntry","createEntry","err","message","removeEntry","haStyleDialog","define"],"mappings":"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","file":"chunk.8f9df98a04125729f09a.js","sourcesContent":["import { ripple } from \"@material/mwc-ripple/ripple-directive\";\nimport \"@material/mwc-switch\";\nimport type { Switch } from \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  property,\n  query,\n} from \"lit-element\";\nimport { forwardHaptic } from \"../data/haptics\";\nimport { Constructor } from \"../types\";\n\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  // Generate a haptic vibration.\n  // Only set to true if the new value of the switch is applied right away when toggling.\n  // Do not add haptic when a user is required to press save.\n  @property({ type: Boolean }) public haptic = false;\n\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\n      \"--mdc-theme-secondary\",\n      \"var(--switch-checked-color)\"\n    );\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n    this.addEventListener(\"change\", () => {\n      if (this.haptic) {\n        forwardHaptic(\"light\");\n      }\n    });\n  }\n\n  protected render() {\n    return html`\n      <div class=\"mdc-switch\">\n        <div class=\"mdc-switch__track\"></div>\n        <div\n          class=\"mdc-switch__thumb-underlay\"\n          .ripple=\"${ripple({\n            interactionNode: this,\n          })}\"\n        >\n          <div class=\"mdc-switch__thumb\">\n            <input\n              type=\"checkbox\"\n              id=\"basic-switch\"\n              class=\"mdc-switch__native-control\"\n              role=\"switch\"\n              @change=\"${this._haChangeHandler}\"\n            />\n          </div>\n        </div>\n      </div>\n      <label for=\"basic-switch\"><slot></slot></label>\n    `;\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\n          background-color: var(--switch-checked-button-color);\n          border-color: var(--switch-checked-button-color);\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__track {\n          background-color: var(--switch-checked-track-color);\n          border-color: var(--switch-checked-track-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--switch-unchecked-button-color);\n          border-color: var(--switch-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--switch-unchecked-track-color);\n          border-color: var(--switch-unchecked-track-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n\n  private _haChangeHandler(e: Event) {\n    this.mdcFoundation.handleChange(e);\n    // catch \"click\" event and sync properties\n    this.checked = this.formElement.checked;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","export const afterNextRender = (cb: () => void): void => {\n  requestAnimationFrame(() => setTimeout(cb, 0));\n};\n\nexport const nextRender = () => {\n  return new Promise((resolve) => {\n    afterNextRender(resolve);\n  });\n};\n","import \"@material/mwc-dialog\";\nimport type { Dialog } from \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { css, CSSResult, customElement, html } from \"lit-element\";\nimport type { Constructor, HomeAssistant } from \"../types\";\n\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <paper-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    icon=\"hass:close\"\n    dialogAction=\"close\"\n    class=\"close_button\"\n  ></paper-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import {\n  Circle,\n  DivIcon,\n  DragEndEvent,\n  LatLng,\n  LeafletMouseEvent,\n  Map,\n  Marker,\n} from \"leaflet\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport {\n  LeafletModuleType,\n  setupLeafletMap,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { nextRender } from \"../../common/util/render-status\";\nimport { defaultRadiusColor } from \"../../data/zone\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n\n  @property() public radius?: number;\n\n  @property() public radiusColor?: string;\n\n  @property() public icon?: string;\n\n  public fitZoom = 16;\n\n  private _iconEl?: DivIcon;\n\n  private _ignoreFitToMap?: [number, number];\n\n  // eslint-disable-next-line\n  private Leaflet?: LeafletModuleType;\n\n  private _leafletMap?: Map;\n\n  private _locationMarker?: Marker | Circle;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    if ((this._locationMarker as Circle).getBounds) {\n      this._leafletMap.fitBounds((this._locationMarker as Circle).getBounds());\n    } else {\n      this._leafletMap.setView(this.location, this.fitZoom);\n    }\n    this._ignoreFitToMap = this.location;\n  }\n\n  protected render(): TemplateResult {\n    return html` <div id=\"map\"></div> `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    if (changedProps.has(\"location\")) {\n      this._updateMarker();\n      if (\n        this.location &&\n        (!this._ignoreFitToMap ||\n          this._ignoreFitToMap[0] !== this.location[0] ||\n          this._ignoreFitToMap[1] !== this.location[1])\n      ) {\n        this.fitMap();\n      }\n    }\n    if (changedProps.has(\"radius\")) {\n      this._updateRadius();\n    }\n    if (changedProps.has(\"radiusColor\")) {\n      this._updateRadiusColor();\n    }\n    if (changedProps.has(\"icon\")) {\n      this._updateIcon();\n    }\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(\n      this._mapEl,\n      false,\n      Boolean(this.radius)\n    );\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._locationUpdated(ev.latlng)\n    );\n    this._updateIcon();\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _locationUpdated(latlng: LatLng) {\n    let longitude = latlng.lng;\n    if (Math.abs(longitude) > 180.0) {\n      // Normalize longitude if map provides values beyond -180 to +180 degrees.\n      longitude = (((longitude % 360.0) + 540.0) % 360.0) - 180.0;\n    }\n    this.location = this._ignoreFitToMap = [latlng.lat, longitude];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _radiusUpdated() {\n    this._ignoreFitToMap = this.location;\n    this.radius = (this._locationMarker as Circle).getRadius();\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateIcon() {\n    if (!this.icon) {\n      this._iconEl = undefined;\n      return;\n    }\n\n    // create icon\n    let iconHTML = \"\";\n    const el = document.createElement(\"ha-icon\");\n    el.setAttribute(\"icon\", this.icon);\n    iconHTML = el.outerHTML;\n\n    this._iconEl = this.Leaflet!.divIcon({\n      html: iconHTML,\n      iconSize: [24, 24],\n      className: \"light leaflet-edit-move\",\n    });\n    this._setIcon();\n  }\n\n  private _setIcon() {\n    if (!this._locationMarker || !this._iconEl) {\n      return;\n    }\n\n    if (!this.radius) {\n      (this._locationMarker as Marker).setIcon(this._iconEl);\n      return;\n    }\n\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    moveMarker.setIcon(this._iconEl);\n  }\n\n  private _setupEdit() {\n    // @ts-ignore\n    this._locationMarker.editing.enable();\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    // @ts-ignore\n    const resizeMarker = this._locationMarker.editing._resizeMarkers[0];\n    this._setIcon();\n    moveMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n    );\n    resizeMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._radiusUpdated(ev)\n    );\n  }\n\n  private async _updateMarker(): Promise<void> {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      if (this.radius) {\n        // @ts-ignore\n        this._locationMarker.editing.disable();\n        await nextRender();\n        this._setupEdit();\n      }\n      return;\n    }\n\n    if (!this.radius) {\n      this._locationMarker = this.Leaflet!.marker(this.location, {\n        draggable: true,\n      });\n      this._setIcon();\n      this._locationMarker.addEventListener(\n        \"dragend\",\n        // @ts-ignore\n        (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n      );\n      this._leafletMap!.addLayer(this._locationMarker);\n    } else {\n      this._locationMarker = this.Leaflet!.circle(this.location, {\n        color: this.radiusColor || defaultRadiusColor,\n        radius: this.radius,\n      });\n      this._leafletMap!.addLayer(this._locationMarker);\n      this._setupEdit();\n    }\n  }\n\n  private _updateRadius(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setRadius(this.radius);\n  }\n\n  private _updateRadiusColor(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setStyle({ color: this.radiusColor });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n      .light {\n        color: #000000;\n      }\n      .leaflet-edit-move {\n        border-radius: 50%;\n        cursor: move !important;\n      }\n      .leaflet-edit-resize {\n        border-radius: 50%;\n        cursor: nesw-resize !important;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { addDistanceToCoord } from \"../../../common/location/add_distance_to_coord\";\nimport { createCloseHeading } from \"../../../components/ha-dialog\";\nimport \"../../../components/ha-switch\";\nimport \"../../../components/map/ha-location-editor\";\nimport {\n  defaultRadiusColor,\n  getZoneEditorInitData,\n  passiveRadiusColor,\n  ZoneMutableParams,\n} from \"../../../data/zone\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { ZoneDetailDialogParams } from \"./show-dialog-zone-detail\";\n\nclass DialogZoneDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _name!: string;\n\n  @property() private _icon!: string;\n\n  @property() private _latitude!: number;\n\n  @property() private _longitude!: number;\n\n  @property() private _passive!: boolean;\n\n  @property() private _radius!: number;\n\n  @property() private _error?: string;\n\n  @property() private _params?: ZoneDetailDialogParams;\n\n  @property() private _submitting = false;\n\n  public async showDialog(params: ZoneDetailDialogParams): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    if (this._params.entry) {\n      this._name = this._params.entry.name || \"\";\n      this._icon = this._params.entry.icon || \"\";\n      this._latitude = this._params.entry.latitude || this.hass.config.latitude;\n      this._longitude =\n        this._params.entry.longitude || this.hass.config.longitude;\n      this._passive = this._params.entry.passive || false;\n      this._radius = this._params.entry.radius || 100;\n    } else {\n      const initConfig = getZoneEditorInitData();\n      let movedHomeLocation;\n      if (!initConfig?.latitude || !initConfig?.longitude) {\n        movedHomeLocation = addDistanceToCoord(\n          [this.hass.config.latitude, this.hass.config.longitude],\n          Math.random() * 500 * (Math.random() < 0.5 ? -1 : 1),\n          Math.random() * 500 * (Math.random() < 0.5 ? -1 : 1)\n        );\n      }\n      this._latitude = initConfig?.latitude || movedHomeLocation[0];\n      this._longitude = initConfig?.longitude || movedHomeLocation[1];\n      this._name = initConfig?.name || \"\";\n      this._icon = initConfig?.icon || \"mdi:map-marker\";\n\n      this._passive = false;\n      this._radius = 100;\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const nameValid = this._name.trim() === \"\";\n    const iconValid = !this._icon.trim().includes(\":\");\n    const latValid = String(this._latitude) === \"\";\n    const lngValid = String(this._longitude) === \"\";\n    const radiusValid = String(this._radius) === \"\";\n\n    const valid =\n      !nameValid && !iconValid && !latValid && !lngValid && !radiusValid;\n\n    return html`\n      <ha-dialog\n        open\n        @closing=\"${this._close}\"\n        scrimClickAction=\"\"\n        escapeKeyAction=\"\"\n        .heading=${createCloseHeading(\n          this.hass,\n          this._params.entry\n            ? this._params.entry.name\n            : this.hass!.localize(\"ui.panel.config.zone.detail.new_zone\")\n        )}\n      >\n        <div>\n          ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n          <div class=\"form\">\n            <paper-input\n              dialogInitialFocus\n              .value=${this._name}\n              .configValue=${\"name\"}\n              @value-changed=${this._valueChanged}\n              .label=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.name\"\n              )}\"\n              .errorMessage=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.required_error_msg\"\n              )}\"\n              required\n              auto-validate\n            ></paper-input>\n            <paper-input\n              .value=${this._icon}\n              .configValue=${\"icon\"}\n              @value-changed=${this._valueChanged}\n              .label=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.icon\"\n              )}\"\n              .errorMessage=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.icon_error_msg\"\n              )}\"\n              .invalid=${iconValid}\n            ></paper-input>\n            <ha-location-editor\n              class=\"flex\"\n              .location=${this._locationValue}\n              .radius=${this._radius}\n              .radiusColor=${this._passive\n                ? passiveRadiusColor\n                : defaultRadiusColor}\n              .icon=${this._icon}\n              @change=${this._locationChanged}\n            ></ha-location-editor>\n            <div class=\"location\">\n              <paper-input\n                .value=${this._latitude}\n                .configValue=${\"latitude\"}\n                @value-changed=${this._valueChanged}\n                .label=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.latitude\"\n                )}\"\n                .errorMessage=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.required_error_msg\"\n                )}\"\n                .invalid=${latValid}\n              ></paper-input>\n              <paper-input\n                .value=${this._longitude}\n                .configValue=${\"longitude\"}\n                @value-changed=${this._valueChanged}\n                .label=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.longitude\"\n                )}\"\n                .errorMessage=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.required_error_msg\"\n                )}\"\n                .invalid=${lngValid}\n              ></paper-input>\n            </div>\n            <paper-input\n              .value=${this._radius}\n              .configValue=${\"radius\"}\n              @value-changed=${this._valueChanged}\n              .label=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.radius\"\n              )}\"\n              .errorMessage=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.required_error_msg\"\n              )}\"\n              .invalid=${radiusValid}\n            ></paper-input>\n            <p>\n              ${this.hass!.localize(\"ui.panel.config.zone.detail.passive_note\")}\n            </p>\n            <ha-switch .checked=${this._passive} @change=${this._passiveChanged}\n              >${this.hass!.localize(\n                \"ui.panel.config.zone.detail.passive\"\n              )}</ha-switch\n            >\n          </div>\n        </div>\n        ${this._params.entry\n          ? html`\n              <mwc-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                @click=\"${this._deleteEntry}\"\n                .disabled=${this._submitting}\n              >\n                ${this.hass!.localize(\"ui.panel.config.zone.detail.delete\")}\n              </mwc-button>\n            `\n          : html``}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=\"${this._updateEntry}\"\n          .disabled=${!valid || this._submitting}\n        >\n          ${this._params.entry\n            ? this.hass!.localize(\"ui.panel.config.zone.detail.update\")\n            : this.hass!.localize(\"ui.panel.config.zone.detail.create\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private get _locationValue() {\n    return [Number(this._latitude), Number(this._longitude)];\n  }\n\n  private _locationChanged(ev) {\n    [this._latitude, this._longitude] = ev.currentTarget.location;\n    this._radius = ev.currentTarget.radius;\n  }\n\n  private _passiveChanged(ev) {\n    this._passive = ev.target.checked;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    const configValue = (ev.target as any).configValue;\n\n    this._error = undefined;\n    this[`_${configValue}`] = ev.detail.value;\n  }\n\n  private async _updateEntry() {\n    this._submitting = true;\n    try {\n      const values: ZoneMutableParams = {\n        name: this._name.trim(),\n        icon: this._icon.trim(),\n        latitude: this._latitude,\n        longitude: this._longitude,\n        passive: this._passive,\n        radius: this._radius,\n      };\n      if (this._params!.entry) {\n        await this._params!.updateEntry!(values);\n      } else {\n        await this._params!.createEntry(values);\n      }\n      this._params = undefined;\n    } catch (err) {\n      this._error = err ? err.message : \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteEntry() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeEntry!()) {\n        this._params = undefined;\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        .location {\n          display: flex;\n        }\n        .location > * {\n          flex-grow: 1;\n          min-width: 0;\n        }\n        .location > *:first-child {\n          margin-right: 4px;\n        }\n        .location > *:last-child {\n          margin-left: 4px;\n        }\n        ha-location-editor {\n          margin-top: 16px;\n        }\n        ha-user-picker {\n          margin-top: 16px;\n        }\n        a {\n          color: var(--primary-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-zone-detail\": DialogZoneDetail;\n  }\n}\n\ncustomElements.define(\"dialog-zone-detail\", DialogZoneDetail);\n","export const addDistanceToCoord = (\n  location: [number, number],\n  dx: number,\n  dy: number\n): [number, number] => {\n  const rEarth = 6378000;\n  const newLatitude = location[0] + (dy / rEarth) * (180 / Math.PI);\n  const newLongitude =\n    location[1] +\n    ((dx / rEarth) * (180 / Math.PI)) / Math.cos((location[0] * Math.PI) / 180);\n  return [newLatitude, newLongitude];\n};\n"],"sourceRoot":""}