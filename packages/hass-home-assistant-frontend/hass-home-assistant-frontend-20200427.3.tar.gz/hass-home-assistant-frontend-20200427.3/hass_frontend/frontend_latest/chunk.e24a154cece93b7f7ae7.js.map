{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-listbox/paper-listbox.js","webpack:///./node_modules/@polymer/neon-animation/neon-animatable-behavior.js","webpack:///./node_modules/@polymer/neon-animation/neon-animation-runner-behavior.js","webpack:///./src/common/dom/toggle_attribute.ts","webpack:///./src/panels/lovelace/editor/select-view/hui-dialog-select-view.ts"],"names":["__webpack_require__","_polymer_iron_menu_behavior_iron_menu_behavior_js__WEBPACK_IMPORTED_MODULE_2__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","Polymer","_template","html","is","behaviors","IronMenuBehavior","hostAttributes","role","NeonAnimatableBehavior","properties","animationConfig","type","Object","entryAnimation","observer","String","exitAnimation","_entryAnimationChanged","this","name","node","_exitAnimationChanged","_copyProperties","config1","config2","property","_cloneConfig","config","clone","isClone","_getAnimationConfigRecursive","map","allConfigs","thisConfig","value","_warn","_logf","Array","isArray","index","animatable","id","cachedConfig","push","getAnimationConfig","key","d","__webpack_exports__","NeonAnimationRunnerBehavior","_configureAnimations","configs","results","resultsToPlay","length","neonAnimation","document","createElement","isNeonAnimation","result","configure","console","warn","i","cancel","timeline","play","e","animation","_shouldComplete","activeEntries","finished","playState","_complete","complete","playAnimation","cookie","_active","onfinish","fire","bubbles","bind","cancelAnimation","k","entries","j","toggleAttribute","el","force","undefined","hasAttribute","removeAttribute","setAttribute","HuiDialogSelectView","_decorate","customElement","_initialize","_LitElement","[object Object]","args","super","F","kind","decorators","async","params","_params","updateComplete","changedProps","_this$_params","_get","_getPrototypeOf","prototype","call","lovelaceConfig","views","some","view","icon","_openedChanged","_selectView","shadowRoot","querySelector","detail","viewSelectedCallback","_dialog","close","ev","LitElement"],"mappings":";uFAAAA,EAAA,GAAAA,EAAA,QAAAC,EAAAD,EAAA,KAAAE,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GAoEAI,YAAQ,CACNC,UAAWC;;;;;;;;;;;;;;EAgBXC,GAAI,gBACJC,UAAW,CAACC,KAGZC,eAAgB,CAACC,KAAM,oDCvElB,MAAMC,EAAyB,CAEpCC,WAAY,CAKVC,gBAAiB,CAACC,KAAMC,QAOxBC,eAAgB,CACdC,SAAU,yBACVH,KAAMI,QAQRC,cAAe,CACbF,SAAU,wBACVH,KAAMI,SAKVE,uBAAwB,WACtBC,KAAKR,gBAAkBQ,KAAKR,iBAAmB,GAC/CQ,KAAKR,gBAAL,MAAgC,CAAC,CAACS,KAAMD,KAAKL,eAAgBO,KAAMF,QAGrEG,sBAAuB,WACrBH,KAAKR,gBAAkBQ,KAAKR,iBAAmB,GAC/CQ,KAAKR,gBAAL,KAA+B,CAAC,CAACS,KAAMD,KAAKF,cAAeI,KAAMF,QAGnEI,gBAAiB,SAASC,EAASC,GAEjC,IAAK,IAAIC,KAAYD,EACnBD,EAAQE,GAAYD,EAAQC,IAIhCC,aAAc,SAASC,GACrB,IAAIC,EAAQ,CAACC,SAAS,GAEtB,OADAX,KAAKI,gBAAgBM,EAAOD,GACrBC,GAGTE,6BAA8B,SAASnB,EAAMoB,EAAKC,GAchD,IAAIC,EAbJ,GAAKf,KAAKR,gBAIV,GAAIQ,KAAKR,gBAAgBwB,OACiB,mBAA/BhB,KAAKR,gBAAgBwB,MAC9BhB,KAAKiB,MAAMjB,KAAKkB,MACZ,gBACA,8GAiBN,GAVEH,EADEtB,EACWO,KAAKR,gBAAgBC,GAErBO,KAAKR,gBAGf2B,MAAMC,QAAQL,KACjBA,EAAa,CAACA,IAIZA,EACF,IAAK,IAAIN,EAAQY,EAAQ,EAAGZ,EAASM,EAAWM,GAAQA,IACtD,GAAIZ,EAAOa,WACTb,EAAOa,WAAWV,6BACdH,EAAOhB,MAAQA,EAAMoB,EAAKC,QAE9B,GAAIL,EAAOc,GAAI,CACb,IAAIC,EAAeX,EAAIJ,EAAOc,IAC1BC,GAEGA,EAAab,UAChBE,EAAIJ,EAAOc,IAAMvB,KAAKQ,aAAagB,GACnCA,EAAeX,EAAIJ,EAAOc,KAE5BvB,KAAKI,gBAAgBoB,EAAcf,IAGnCI,EAAIJ,EAAOc,IAAMd,OAGnBK,EAAWW,KAAKhB,IAc1BiB,mBAAoB,SAASjC,GAC3B,IAAIoB,EAAM,GACNC,EAAa,GAGjB,IAAK,IAAIa,KAFT3B,KAAKY,6BAA6BnB,EAAMoB,EAAKC,GAE7BD,EACdC,EAAWW,KAAKZ,EAAIc,IAEtB,OAAOb,IC5IXpC,EAAAkD,EAAAC,EAAA,sBAAAC,IAmBO,MAwIMA,EACT,CAACxC,EAzI0C,CAE7CyC,qBAAsB,SAASC,GAC7B,IAAIC,EAAU,GACVC,EAAgB,GAEpB,GAAIF,EAAQG,OAAS,EACnB,IAAK,IAAI1B,EAAQY,EAAQ,EAAGZ,EAASuB,EAAQX,GAAQA,IAAS,CAC5D,IAAIe,EAAgBC,SAASC,cAAc7B,EAAOR,MAElD,GAAImC,EAAcG,gBAAiB,CACjC,IAAIC,EAAS,KAGRJ,EAAcK,YAKjBL,EAAcK,UAAY,SAAShC,GACjC,OAAO,OAIX+B,EAASJ,EAAcK,UAAUhC,GACjCyB,EAAcT,KAAK,CACjBe,OAAQA,EACR/B,OAAQA,EACR2B,cAAeA,SAGjBM,QAAQC,KAAK3C,KAAKf,GAAK,IAAKwB,EAAOR,KAAM,cAK/C,IAAK,IAAI2C,EAAI,EAAGA,EAAIV,EAAcC,OAAQS,IAAK,CAC7C,IAAIJ,EAASN,EAAcU,GAAGJ,OAC1B/B,EAASyB,EAAcU,GAAGnC,OAC1B2B,EAAgBF,EAAcU,GAAGR,cAErC,IAE8B,mBAAjBI,EAAOK,SAChBL,EAASH,SAASS,SAASC,KAAKP,IAElC,MAAOQ,GACPR,EAAS,KACTE,QAAQC,KAAK,eAAgB,IAAKlC,EAAOR,KAAM,KAAM+C,GAGnDR,GACFP,EAAQR,KAAK,CACXW,cAAeA,EACf3B,OAAQA,EACRwC,UAAWT,IAKjB,OAAOP,GAGTiB,gBAAiB,SAASC,GAExB,IADA,IAAIC,GAAW,EACNR,EAAI,EAAGA,EAAIO,EAAchB,OAAQS,IACxC,GAA4C,YAAxCO,EAAcP,GAAGK,UAAUI,UAAyB,CACtDD,GAAW,EACX,MAGJ,OAAOA,GAGTE,UAAW,SAASH,GAClB,IAAK,IAAIP,EAAI,EAAGA,EAAIO,EAAchB,OAAQS,IACxCO,EAAcP,GAAGR,cAAcmB,SAASJ,EAAcP,GAAGnC,QAE3D,IAASmC,EAAI,EAAGA,EAAIO,EAAchB,OAAQS,IACxCO,EAAcP,GAAGK,UAAUJ,UAS/BW,cAAe,SAAS/D,EAAMgE,GAC5B,IAAIzB,EAAUhC,KAAK0B,mBAAmBjC,GACtC,GAAKuC,EAAL,CAGAhC,KAAK0D,QAAU1D,KAAK0D,SAAW,GAC3B1D,KAAK0D,QAAQjE,KACfO,KAAKsD,UAAUtD,KAAK0D,QAAQjE,WACrBO,KAAK0D,QAAQjE,IAGtB,IAAI0D,EAAgBnD,KAAK+B,qBAAqBC,GAE9C,GAA4B,GAAxBmB,EAAchB,OAAlB,CAKAnC,KAAK0D,QAAQjE,GAAQ0D,EAErB,IAAK,IAAIP,EAAI,EAAGA,EAAIO,EAAchB,OAAQS,IACxCO,EAAcP,GAAGK,UAAUU,SAAW,WAChC3D,KAAKkD,gBAAgBC,KACvBnD,KAAKsD,UAAUH,UACRnD,KAAK0D,QAAQjE,GACpBO,KAAK4D,KAAK,wBAAyBH,EAAQ,CAACI,SAAS,MAEvDC,KAAK9D,WAbPA,KAAK4D,KAAK,wBAAyBH,EAAQ,CAACI,SAAS,MAoBzDE,gBAAiB,WACf,IAAK,IAAIC,KAAKhE,KAAK0D,QAAS,CAC1B,IAAIO,EAAUjE,KAAK0D,QAAQM,GAEb,IAAK,IAAIE,KAAKD,EAC1BA,EAAQC,GAAGjB,UAAUJ,SAIzB7C,KAAK0D,QAAU,wCCtJnBhF,EAAAkD,EAAAC,EAAA,sBAAAsC,IACO,MAAMA,EAAkB,CAC7BC,EACAnE,EACAoE,UAEcC,IAAVD,IACFA,IAAUA,GAGRD,EAAGG,aAAatE,KACdoE,IAIJD,EAAGI,gBAAgBvE,IACZ,IAEK,IAAVoE,IAIJD,EAAGK,aAAaxE,EAAM,KACf,w1DCRF,IAAMyE,sqMAAbC,CAAA,CADCC,YAAc,2BACf,SAAAC,EAAAC,GADA,MACaJ,UADbI,EACoDC,eAAAC,GAAAC,SAAAD,GAAAH,EAAA7E,OAApD,OAAAkF,EAAaR,EAAb9C,EAAA,EAAAuD,KAAA,QAAAC,WAAA,CACG7E,eADHoB,IAAA,UAAAX,WAAA,IAAAmE,KAAA,SAAAxD,IAAA,aAAAX,MAGEqE,eAAwBC,GACtBtF,KAAKuF,QAAUD,QACTtF,KAAKwF,iBALf,CAAAL,KAAA,SAAAxD,IAAA,UAAAX,MAQE,SAAkByE,GAAc,IAAAC,EAC9BC,EAAAC,EATSlB,EASTmB,WAAA,UAAA7F,MAAA8F,KAAA9F,KAAcyF,GACdtB,YACEnE,KACA,aACA,QAAA0F,EAAA1F,KAAKuF,eAAL,IAAAG,MAAcK,iBACT/F,KAAKuF,QAAQQ,eAAeC,MAAMC,KAAMC,GAASA,EAAKC,SAdjE,CAAAhB,KAAA,SAAAxD,IAAA,SAAAX,MAmBE,WACE,OAAKhB,KAAKuF,QAGHvG;;;;2BAIgBgB,KAAKoG;;;;4BAIJpG,KAAKuF,QAASQ;2BACf/F,KAAKqG;;;;MAXnBrH,QArBb,CAAAmG,KAAA,MAAAxD,IAAA,UAAAX,MAuCE,WACE,OAAOhB,KAAKsG,WAAYC,cAAc,qBAxC1C,CAAApB,KAAA,SAAAxD,IAAA,cAAAX,MA2CE,SAAoBgC,GAClB,MAAMkD,EAAelD,EAAEwD,OAAON,KAC9BlG,KAAKuF,QAASkB,qBAAqBP,GACnClG,KAAK0G,QAAQC,UA9CjB,CAAAxB,KAAA,SAAAxD,IAAA,iBAAAX,MAiDE,SAAuB4F,GACfA,EAAGJ,OAAexF,QACtBhB,KAAKuF,aAAUjB,QAnDoBuC","file":"chunk.e24a154cece93b7f7ae7.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/default-theme.js';\n\nimport {IronMenuBehavior} from '@polymer/iron-menu-behavior/iron-menu-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design:\n[Menus](https://www.google.com/design/spec/components/menus.html)\n\n`<paper-listbox>` implements an accessible listbox control with Material Design\nstyling. The focused item is highlighted, and the selected item has bolded text.\n\n    <paper-listbox>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\nAn initial selection can be specified with the `selected` attribute.\n\n    <paper-listbox selected=\"0\">\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\nMake a multi-select listbox with the `multi` attribute. Items in a multi-select\nlistbox can be deselected, and multiple item can be selected.\n\n    <paper-listbox multi>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-listbox-background-color`   | Menu background color |\n`--primary-background-color`\n`--paper-listbox-color`              | Menu foreground color |\n`--primary-text-color`\n`--paper-listbox`                    | Mixin applied to the listbox | `{}`\n\n### Accessibility\n\n`<paper-listbox>` has `role=\"listbox\"` by default. A multi-select listbox will\nalso have `aria-multiselectable` set. It implements key bindings to navigate\nthrough the listbox with the up and down arrow keys, esc to exit the listbox,\nand enter to activate a listbox item. Typing the first letter of a listbox item\nwill also focus it.\n\n@group Paper Elements\n@element paper-listbox\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        padding: 8px 0;\n\n        background: var(--paper-listbox-background-color, var(--primary-background-color));\n        color: var(--paper-listbox-color, var(--primary-text-color));\n\n        @apply --paper-listbox;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-listbox',\n  behaviors: [IronMenuBehavior],\n\n  /** @private */\n  hostAttributes: {role: 'listbox'}\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\n/**\n * `NeonAnimatableBehavior` is implemented by elements containing\n * animations for use with elements implementing\n * `NeonAnimationRunnerBehavior`.\n * @polymerBehavior\n */\nexport const NeonAnimatableBehavior = {\n\n  properties: {\n\n    /**\n     * Animation configuration. See README for more info.\n     */\n    animationConfig: {type: Object},\n\n    /**\n     * Convenience property for setting an 'entry' animation. Do not set\n     * `animationConfig.entry` manually if using this. The animated node is set\n     * to `this` if using this property.\n     */\n    entryAnimation: {\n      observer: '_entryAnimationChanged',\n      type: String,\n    },\n\n    /**\n     * Convenience property for setting an 'exit' animation. Do not set\n     * `animationConfig.exit` manually if using this. The animated node is set\n     * to `this` if using this property.\n     */\n    exitAnimation: {\n      observer: '_exitAnimationChanged',\n      type: String,\n    },\n\n  },\n\n  _entryAnimationChanged: function() {\n    this.animationConfig = this.animationConfig || {};\n    this.animationConfig['entry'] = [{name: this.entryAnimation, node: this}];\n  },\n\n  _exitAnimationChanged: function() {\n    this.animationConfig = this.animationConfig || {};\n    this.animationConfig['exit'] = [{name: this.exitAnimation, node: this}];\n  },\n\n  _copyProperties: function(config1, config2) {\n    // shallowly copy properties from config2 to config1\n    for (var property in config2) {\n      config1[property] = config2[property];\n    }\n  },\n\n  _cloneConfig: function(config) {\n    var clone = {isClone: true};\n    this._copyProperties(clone, config);\n    return clone;\n  },\n\n  _getAnimationConfigRecursive: function(type, map, allConfigs) {\n    if (!this.animationConfig) {\n      return;\n    }\n\n    if (this.animationConfig.value &&\n        typeof this.animationConfig.value === 'function') {\n      this._warn(this._logf(\n          'playAnimation',\n          'Please put \\'animationConfig\\' inside of your components \\'properties\\' object instead of outside of it.'));\n      return;\n    }\n\n    // type is optional\n    var thisConfig;\n    if (type) {\n      thisConfig = this.animationConfig[type];\n    } else {\n      thisConfig = this.animationConfig;\n    }\n\n    if (!Array.isArray(thisConfig)) {\n      thisConfig = [thisConfig];\n    }\n\n    // iterate animations and recurse to process configurations from child nodes\n    if (thisConfig) {\n      for (var config, index = 0; config = thisConfig[index]; index++) {\n        if (config.animatable) {\n          config.animatable._getAnimationConfigRecursive(\n              config.type || type, map, allConfigs);\n        } else {\n          if (config.id) {\n            var cachedConfig = map[config.id];\n            if (cachedConfig) {\n              // merge configurations with the same id, making a clone lazily\n              if (!cachedConfig.isClone) {\n                map[config.id] = this._cloneConfig(cachedConfig);\n                cachedConfig = map[config.id];\n              }\n              this._copyProperties(cachedConfig, config);\n            } else {\n              // put any configs with an id into a map\n              map[config.id] = config;\n            }\n          } else {\n            allConfigs.push(config);\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * An element implementing `NeonAnimationRunnerBehavior` calls this\n   * method to configure an animation with an optional type. Elements\n   * implementing `NeonAnimatableBehavior` should define the property\n   * `animationConfig`, which is either a configuration object or a map of\n   * animation type to array of configuration objects.\n   */\n  getAnimationConfig: function(type) {\n    var map = {};\n    var allConfigs = [];\n    this._getAnimationConfigRecursive(type, map, allConfigs);\n    // append the configurations saved in the map to the array\n    for (var key in map) {\n      allConfigs.push(map[key]);\n    }\n    return allConfigs;\n  }\n\n};\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {NeonAnimatableBehavior} from './neon-animatable-behavior.js';\n\n/**\n * `NeonAnimationRunnerBehavior` adds a method to run animations.\n *\n * @polymerBehavior NeonAnimationRunnerBehavior\n */\nexport const NeonAnimationRunnerBehaviorImpl = {\n\n  _configureAnimations: function(configs) {\n    var results = [];\n    var resultsToPlay = [];\n\n    if (configs.length > 0) {\n      for (let config, index = 0; config = configs[index]; index++) {\n        let neonAnimation = document.createElement(config.name);\n        // is this element actually a neon animation?\n        if (neonAnimation.isNeonAnimation) {\n          let result = null;\n          // Closure compiler does not work well with a try / catch here.\n          // .configure needs to be explicitly defined\n          if (!neonAnimation.configure) {\n            /**\n             * @param {Object} config\n             * @return {AnimationEffectReadOnly}\n             */\n            neonAnimation.configure = function(config) {\n              return null;\n            }\n          }\n\n          result = neonAnimation.configure(config);\n          resultsToPlay.push({\n            result: result,\n            config: config,\n            neonAnimation: neonAnimation,\n          });\n        } else {\n          console.warn(this.is + ':', config.name, 'not found!');\n        }\n      }\n    }\n\n    for (var i = 0; i < resultsToPlay.length; i++) {\n      let result = resultsToPlay[i].result;\n      let config = resultsToPlay[i].config;\n      let neonAnimation = resultsToPlay[i].neonAnimation;\n      // configuration or play could fail if polyfills aren't loaded\n      try {\n        // Check if we have an Effect rather than an Animation\n        if (typeof result.cancel != 'function') {\n          result = document.timeline.play(result);\n        }\n      } catch (e) {\n        result = null;\n        console.warn('Couldnt play', '(', config.name, ').', e);\n      }\n\n      if (result) {\n        results.push({\n          neonAnimation: neonAnimation,\n          config: config,\n          animation: result,\n        });\n      }\n    }\n\n    return results;\n  },\n\n  _shouldComplete: function(activeEntries) {\n    var finished = true;\n    for (var i = 0; i < activeEntries.length; i++) {\n      if (activeEntries[i].animation.playState != 'finished') {\n        finished = false;\n        break;\n      }\n    }\n    return finished;\n  },\n\n  _complete: function(activeEntries) {\n    for (var i = 0; i < activeEntries.length; i++) {\n      activeEntries[i].neonAnimation.complete(activeEntries[i].config);\n    }\n    for (var i = 0; i < activeEntries.length; i++) {\n      activeEntries[i].animation.cancel();\n    }\n  },\n\n  /**\n   * Plays an animation with an optional `type`.\n   * @param {string=} type\n   * @param {!Object=} cookie\n   */\n  playAnimation: function(type, cookie) {\n    var configs = this.getAnimationConfig(type);\n    if (!configs) {\n      return;\n    }\n    this._active = this._active || {};\n    if (this._active[type]) {\n      this._complete(this._active[type]);\n      delete this._active[type];\n    }\n\n    var activeEntries = this._configureAnimations(configs);\n\n    if (activeEntries.length == 0) {\n      this.fire('neon-animation-finish', cookie, {bubbles: false});\n      return;\n    }\n\n    this._active[type] = activeEntries;\n\n    for (var i = 0; i < activeEntries.length; i++) {\n      activeEntries[i].animation.onfinish = function() {\n        if (this._shouldComplete(activeEntries)) {\n          this._complete(activeEntries);\n          delete this._active[type];\n          this.fire('neon-animation-finish', cookie, {bubbles: false});\n        }\n      }.bind(this);\n    }\n  },\n\n  /**\n   * Cancels the currently running animations.\n   */\n  cancelAnimation: function() {\n    for (var k in this._active) {\n      var entries = this._active[k]\n\n                    for (var j in entries) {\n        entries[j].animation.cancel();\n      }\n    }\n\n    this._active = {};\n  }\n};\n\n/** @polymerBehavior */\nexport const NeonAnimationRunnerBehavior =\n    [NeonAnimatableBehavior, NeonAnimationRunnerBehaviorImpl];\n","// Toggle Attribute Polyfill because it's too new for some browsers\nexport const toggleAttribute = (\n  el: HTMLElement,\n  name: string,\n  force?: boolean\n) => {\n  if (force !== undefined) {\n    force = !!force;\n  }\n\n  if (el.hasAttribute(name)) {\n    if (force) {\n      return true;\n    }\n\n    el.removeAttribute(name);\n    return false;\n  }\n  if (force === false) {\n    return false;\n  }\n\n  el.setAttribute(name, \"\");\n  return true;\n};\n","import {\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { toggleAttribute } from \"../../../../common/dom/toggle_attribute\";\nimport \"../../../../components/dialog/ha-paper-dialog\";\nimport type { HaPaperDialog } from \"../../../../components/dialog/ha-paper-dialog\";\nimport type { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport \"../../components/hui-views-list\";\nimport type { SelectViewDialogParams } from \"./show-select-view-dialog\";\n\n@customElement(\"hui-dialog-select-view\")\nexport class HuiDialogSelectView extends LitElement {\n  @property() private _params?: SelectViewDialogParams;\n\n  public async showDialog(params: SelectViewDialogParams): Promise<void> {\n    this._params = params;\n    await this.updateComplete;\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n    toggleAttribute(\n      this,\n      \"hide-icons\",\n      this._params?.lovelaceConfig\n        ? !this._params.lovelaceConfig.views.some((view) => view.icon)\n        : true\n    );\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=\"${this._openedChanged}\"\n      >\n        <h2>Choose a view</h2>\n        <hui-views-list\n          .lovelaceConfig=${this._params!.lovelaceConfig}\n          @view-selected=${this._selectView}\n        >\n        </hui-views-list>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private get _dialog(): HaPaperDialog {\n    return this.shadowRoot!.querySelector(\"ha-paper-dialog\")!;\n  }\n\n  private _selectView(e: CustomEvent): void {\n    const view: number = e.detail.view;\n    this._params!.viewSelectedCallback(view);\n    this._dialog.close();\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    if (!(ev.detail as any).value) {\n      this._params = undefined;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-dialog-select-view\": HuiDialogSelectView;\n  }\n}\n"],"sourceRoot":""}