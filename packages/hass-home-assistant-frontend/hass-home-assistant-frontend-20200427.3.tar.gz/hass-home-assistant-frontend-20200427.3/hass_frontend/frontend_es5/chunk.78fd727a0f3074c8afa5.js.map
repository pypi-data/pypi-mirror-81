{"version":3,"sources":["webpack:///./src/data/climate.ts","webpack:///./src/components/ha-climate-state.js","webpack:///./src/panels/lovelace/entity-rows/hui-climate-entity-row.ts"],"names":["__webpack_require__","d","__webpack_exports__","CLIMATE_PRESET_NONE","CLIMATE_SUPPORT_TARGET_TEMPERATURE","CLIMATE_SUPPORT_TARGET_TEMPERATURE_RANGE","CLIMATE_SUPPORT_TARGET_HUMIDITY","CLIMATE_SUPPORT_FAN_MODE","CLIMATE_SUPPORT_PRESET_MODE","CLIMATE_SUPPORT_SWING_MODE","CLIMATE_SUPPORT_AUX_HEAT","compareClimateHvacModes","hvacModeOrdering","auto","heat_cool","heat","cool","dry","fan_only","off","mode1","mode2","HaClimateState","LocalizeMixin","PolymerElement","html","_templateObject","hass","Object","stateObj","currentStatus","type","String","computed","attributes","current_temperature","concat","config","unit_system","temperature","current_humidity","target_temp_low","target_temp_high","target_humidity_low","target_humidity_high","humidity","state","localize","stateString","hvac_action","preset","preset_mode","customElements","define","customElement","property","entity","Error","this","_config","changedProps","hasConfigOrEntityChanged","states","_templateObject3","_templateObject2","css","_templateObject4","LitElement"],"mappings":"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","file":"chunk.78fd727a0f3074c8afa5.js","sourcesContent":["import {\n  HassEntityAttributeBase,\n  HassEntityBase,\n} from \"home-assistant-js-websocket\";\n\nexport type HvacMode =\n  | \"off\"\n  | \"heat\"\n  | \"cool\"\n  | \"heat_cool\"\n  | \"auto\"\n  | \"dry\"\n  | \"fan_only\";\n\nexport const CLIMATE_PRESET_NONE = \"none\";\n\nexport type HvacAction = \"off\" | \"heating\" | \"cooling\" | \"drying\" | \"idle\";\n\nexport type ClimateEntity = HassEntityBase & {\n  attributes: HassEntityAttributeBase & {\n    hvac_mode: HvacMode;\n    hvac_modes: HvacMode[];\n    hvac_action?: HvacAction;\n    current_temperature: number;\n    min_temp: number;\n    max_temp: number;\n    temperature: number;\n    target_temp_step?: number;\n    target_temp_high?: number;\n    target_temp_low?: number;\n    humidity?: number;\n    current_humidity?: number;\n    target_humidity_low?: number;\n    target_humidity_high?: number;\n    min_humidity?: number;\n    max_humidity?: number;\n    fan_mode?: string;\n    fan_modes?: string[];\n    preset_mode?: string;\n    preset_modes?: string[];\n    swing_mode?: string;\n    swing_modes?: string[];\n    aux_heat?: \"on\" | \"off\";\n  };\n};\n\nexport const CLIMATE_SUPPORT_TARGET_TEMPERATURE = 1;\nexport const CLIMATE_SUPPORT_TARGET_TEMPERATURE_RANGE = 2;\nexport const CLIMATE_SUPPORT_TARGET_HUMIDITY = 4;\nexport const CLIMATE_SUPPORT_FAN_MODE = 8;\nexport const CLIMATE_SUPPORT_PRESET_MODE = 16;\nexport const CLIMATE_SUPPORT_SWING_MODE = 32;\nexport const CLIMATE_SUPPORT_AUX_HEAT = 64;\n\nconst hvacModeOrdering: { [key in HvacMode]: number } = {\n  auto: 1,\n  heat_cool: 2,\n  heat: 3,\n  cool: 4,\n  dry: 5,\n  fan_only: 6,\n  off: 7,\n};\n\nexport const compareClimateHvacModes = (mode1: HvacMode, mode2: HvacMode) =>\n  hvacModeOrdering[mode1] - hvacModeOrdering[mode2];\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\n/* eslint-plugin-disable lit */\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport { CLIMATE_PRESET_NONE } from \"../data/climate\";\nimport LocalizeMixin from \"../mixins/localize-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaClimateState extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          white-space: nowrap;\n        }\n\n        .target {\n          color: var(--primary-text-color);\n        }\n\n        .current {\n          color: var(--secondary-text-color);\n        }\n\n        .state-label {\n          font-weight: bold;\n          text-transform: capitalize;\n        }\n\n        .unit {\n          display: inline-block;\n          direction: ltr;\n        }\n      </style>\n\n      <div class=\"target\">\n        <template is=\"dom-if\" if=\"[[_hasKnownState(stateObj.state)]]\">\n          <span class=\"state-label\">\n            [[_localizeState(localize, stateObj)]]\n            <template is=\"dom-if\" if=\"[[_renderPreset(stateObj.attributes)]]\">\n              - [[_localizePreset(localize, stateObj.attributes.preset_mode)]]\n            </template>\n          </span>\n        </template>\n        <div class=\"unit\">[[computeTarget(hass, stateObj)]]</div>\n      </div>\n\n      <template is=\"dom-if\" if=\"[[currentStatus]]\">\n        <div class=\"current\">\n          [[localize('ui.card.climate.currently')]]:\n          <div class=\"unit\">[[currentStatus]]</div>\n        </div>\n      </template>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      stateObj: Object,\n      currentStatus: {\n        type: String,\n        computed: \"computeCurrentStatus(hass, stateObj)\",\n      },\n    };\n  }\n\n  computeCurrentStatus(hass, stateObj) {\n    if (!hass || !stateObj) return null;\n    if (stateObj.attributes.current_temperature != null) {\n      return `${stateObj.attributes.current_temperature} ${hass.config.unit_system.temperature}`;\n    }\n    if (stateObj.attributes.current_humidity != null) {\n      return `${stateObj.attributes.current_humidity} %`;\n    }\n    return null;\n  }\n\n  computeTarget(hass, stateObj) {\n    if (!hass || !stateObj) return null;\n    // We're using \"!= null\" on purpose so that we match both null and undefined.\n    if (\n      stateObj.attributes.target_temp_low != null &&\n      stateObj.attributes.target_temp_high != null\n    ) {\n      return `${stateObj.attributes.target_temp_low}-${stateObj.attributes.target_temp_high} ${hass.config.unit_system.temperature}`;\n    }\n    if (stateObj.attributes.temperature != null) {\n      return `${stateObj.attributes.temperature} ${hass.config.unit_system.temperature}`;\n    }\n    if (\n      stateObj.attributes.target_humidity_low != null &&\n      stateObj.attributes.target_humidity_high != null\n    ) {\n      return `${stateObj.attributes.target_humidity_low}-${stateObj.attributes.target_humidity_high}%`;\n    }\n    if (stateObj.attributes.humidity != null) {\n      return `${stateObj.attributes.humidity} %`;\n    }\n\n    return \"\";\n  }\n\n  _hasKnownState(state) {\n    return state !== \"unknown\";\n  }\n\n  _localizeState(localize, stateObj) {\n    const stateString = localize(`component.climate.state._.${stateObj.state}`);\n    return stateObj.attributes.hvac_action\n      ? `${localize(\n          `state_attributes.climate.hvac_action.${stateObj.attributes.hvac_action}`\n        )} (${stateString})`\n      : stateString;\n  }\n\n  _localizePreset(localize, preset) {\n    return localize(`state_attributes.climate.preset_mode.${preset}`) || preset;\n  }\n\n  _renderPreset(attributes) {\n    return (\n      attributes.preset_mode && attributes.preset_mode !== CLIMATE_PRESET_NONE\n    );\n  }\n}\ncustomElements.define(\"ha-climate-state\", HaClimateState);\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../../../components/ha-climate-state\";\nimport { HomeAssistant } from \"../../../types\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-generic-entity-row\";\nimport \"../components/hui-warning\";\nimport { EntityConfig, LovelaceRow } from \"./types\";\n\n@customElement(\"hui-climate-entity-row\")\nclass HuiClimateEntityRow extends LitElement implements LovelaceRow {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: EntityConfig;\n\n  public setConfig(config: EntityConfig): void {\n    if (!config || !config.entity) {\n      throw new Error(\"Invalid Configuration: 'entity' required\");\n    }\n\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning\n          >${this.hass.localize(\n            \"ui.panel.lovelace.warning.entity_not_found\",\n            \"entity\",\n            this._config.entity\n          )}</hui-warning\n        >\n      `;\n    }\n\n    return html`\n      <hui-generic-entity-row .hass=${this.hass} .config=${this._config}>\n        <ha-climate-state\n          .hass=${this.hass}\n          .stateObj=${stateObj}\n        ></ha-climate-state>\n      </hui-generic-entity-row>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-climate-state {\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-climate-entity-row\": HuiClimateEntityRow;\n  }\n}\n"],"sourceRoot":""}