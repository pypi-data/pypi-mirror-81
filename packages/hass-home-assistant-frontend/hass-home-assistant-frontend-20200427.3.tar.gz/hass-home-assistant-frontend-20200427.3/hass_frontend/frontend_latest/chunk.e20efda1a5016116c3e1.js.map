{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-gauge-card-editor.ts"],"names":["HaEntityPicker","_LitElement","[object Object]","args","super","_initialize","this","property","type","Boolean","attribute","Array","query","memoizeOne","_opened","hass","includeDomains","excludeDomains","entityFilter","includeDeviceClasses","states","entityIds","Object","keys","filter","eid","includes","computeDomain","sort","map","key","stateObj","entity_id","value","attributes","device_class","changedProps","has","_getStates","_comboBox","items","html","_value","allowCustomEntity","root","_owner","model","firstElementChild","innerHTML","querySelector","item","textContent","computeStateName","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","_clearValue","ev","stopPropagation","_setValue","detail","newValue","setTimeout","fireEvent","css","LitElement","customElements","define","__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","icon","configElementStyle","_decorate","customElement","F","kind","decorators","_changed","themes","theme","static","target","selected","entities","entityConf","index","entity","_entityDown","length","_entityUp","_addEntity","newConfigEntities","concat","newEntities","splice","assign","cardConfigStruct","name","unit","min","max","severity","HuiGaugeCardEditor","config","_config","_entity","_name","_unit","_theme","_min","_max","_toggleSeverity","_severity","green","_severityChanged","yellow","red","checked","configValue","Number","isNaN"],"mappings":"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","file":"chunk.e20efda1a5016116c3e1.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { HomeAssistant } from \"../../types\";\nimport \"./state-badge\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ type: Boolean }) public disabled?: boolean;\n\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n\n  @property() public hass?: HomeAssistant;\n\n  @property() public label?: string;\n\n  @property() public value?: string;\n\n  /**\n   * Show entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n\n  /**\n   * Show only entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n\n  @property({ type: Boolean }) private _opened = false;\n\n  @query(\"vaadin-combo-box-light\") private _comboBox!: HTMLElement;\n\n  private _getStates = memoizeOne(\n    (\n      _opened: boolean,\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (includeDeviceClasses) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value ||\n            (stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class))\n        );\n      }\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    if (changedProps.has(\"_opened\") && this._opened) {\n      const states = this._getStates(\n        this._opened,\n        this.hass,\n        this.includeDomains,\n        this.excludeDomains,\n        this.entityFilter,\n        this.includeDeviceClasses\n      );\n      (this._comboBox as any).items = states;\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined\n            ? this.hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  @click=${this._clearValue}\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n\n          <paper-icon-button\n            aria-label=${this.hass.localize(\n              \"ui.components.entity.entity-picker.show_entities\"\n            )}\n            slot=\"suffix\"\n            class=\"toggle-button\"\n            .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n          >\n            Toggle\n          </paper-icon-button>\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private _clearValue(ev: Event) {\n    ev.stopPropagation();\n    this._setValue(\"\");\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 0px 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n        `${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.generic.theme\"\n        )} (${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.config.optional\"\n        )})`}\n        dynamic-align\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=${this.value}\n          attr-for-selected=\"theme\"\n          @iron-select=${this._changed}\n        >\n          <paper-item theme=\"remove\"\n            >${this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.generic.no_theme\"\n            )}</paper-item\n          >\n          ${Object.keys(this.hass!.themes.themes)\n            .sort()\n            .map((theme) => {\n              return html` <paper-item theme=${theme}>${theme}</paper-item> `;\n            })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.selected === \"\") {\n      return;\n    }\n    this.value = ev.target.selected === \"remove\" ? \"\" : ev.target.selected;\n    fireEvent(this, \"value-changed\", { value: this.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/entity/ha-entity-picker\";\nimport { HomeAssistant } from \"../../../types\";\nimport { EditorTarget } from \"../editor/types\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  @property() protected label?: string;\n\n  protected render(): TemplateResult {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>\n        ${this.label ||\n        this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.entities\") +\n          \" (\" +\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.config.required\") +\n          \")\"}\n      </h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=${this.hass}\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=${this.hass}\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-switch\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { GaugeCardConfig, SeverityConfig } from \"../../cards/types\";\nimport { struct } from \"../../common/structs/struct\";\nimport \"../../components/hui-entity-editor\";\nimport \"../../components/hui-theme-select-editor\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { EditorTarget, EntitiesEditorEvent } from \"../types\";\nimport { configElementStyle } from \"./config-elements-style\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  name: \"string?\",\n  entity: \"string?\",\n  unit: \"string?\",\n  min: \"number?\",\n  max: \"number?\",\n  severity: \"object?\",\n  theme: \"string?\",\n});\n\nconst includeDomains = [\"sensor\"];\n\n@customElement(\"hui-gauge-card-editor\")\nexport class HuiGaugeCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: GaugeCardConfig;\n\n  public setConfig(config: GaugeCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _unit(): string {\n    return this._config!.unit || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"\";\n  }\n\n  get _min(): number {\n    return this._config!.min || 0;\n  }\n\n  get _max(): number {\n    return this._config!.max || 100;\n  }\n\n  get _severity(): SeverityConfig | undefined {\n    return this._config!.severity || undefined;\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .hass=${this.hass}\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          .includeDomains=${includeDomains}\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.name\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._name}\"\n          .configValue=${\"name\"}\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.unit\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._unit}\"\n          .configValue=${\"unit\"}\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <hui-theme-select-editor\n          .hass=${this.hass}\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n        <paper-input\n          type=\"number\"\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.minimum\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._min}\"\n          .configValue=${\"min\"}\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <paper-input\n          type=\"number\"\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.maximum\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._max}\"\n          .configValue=${\"max\"}\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <ha-switch\n          .checked=\"${this._config!.severity !== undefined}\"\n          @change=\"${this._toggleSeverity}\"\n          >${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.gauge.severity.define\"\n          )}</ha-switch\n        >\n        ${this._config!.severity !== undefined\n          ? html`\n              <paper-input\n                type=\"number\"\n                .label=\"${this.hass.localize(\n                  \"ui.panel.lovelace.editor.card.gauge.severity.green\"\n                )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.required\"\n            )})\"\n                .value=\"${this._severity ? this._severity.green : 0}\"\n                .configValue=${\"green\"}\n                @value-changed=\"${this._severityChanged}\"\n              ></paper-input>\n              <paper-input\n                type=\"number\"\n                .label=\"${this.hass.localize(\n                  \"ui.panel.lovelace.editor.card.gauge.severity.yellow\"\n                )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.required\"\n            )})\"\n                .value=\"${this._severity ? this._severity.yellow : 0}\"\n                .configValue=${\"yellow\"}\n                @value-changed=\"${this._severityChanged}\"\n              ></paper-input>\n              <paper-input\n                type=\"number\"\n                .label=\"${this.hass.localize(\n                  \"ui.panel.lovelace.editor.card.gauge.severity.red\"\n                )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.required\"\n            )})\"\n                .value=\"${this._severity ? this._severity.red : 0}\"\n                .configValue=${\"red\"}\n                @value-changed=\"${this._severityChanged}\"\n              ></paper-input>\n          </div>\n          `\n          : \"\"}\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .severity {\n        display: none;\n        width: 100%;\n        padding-left: 16px;\n        flex-direction: row;\n        flex-wrap: wrap;\n      }\n      .severity > * {\n        flex: 1 0 30%;\n        padding-right: 4px;\n      }\n      ha-switch[checked] ~ .severity {\n        display: flex;\n      }\n    `;\n  }\n\n  private _toggleSeverity(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n\n    if ((ev.target as EditorTarget).checked) {\n      this._config.severity = {\n        green: 0,\n        yellow: 0,\n        red: 0,\n      };\n    } else {\n      delete this._config.severity;\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _severityChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    const severity = {\n      ...this._config.severity,\n      [target.configValue!]: Number(target.value),\n    };\n    this._config = {\n      ...this._config,\n      severity,\n    };\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = { ...this._config, [target.configValue!]: value };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-gauge-card-editor\": HuiGaugeCardEditor;\n  }\n}\n"],"sourceRoot":""}