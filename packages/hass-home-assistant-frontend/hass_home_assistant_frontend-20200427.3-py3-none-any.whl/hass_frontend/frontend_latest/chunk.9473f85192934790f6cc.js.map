{"version":3,"sources":["webpack:///./src/common/navigate.ts","webpack:///./src/common/util/render-status.ts","webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/data/zone.ts","webpack:///./src/data/core.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/components/timezone-datalist.ts","webpack:///./src/onboarding/onboarding-core-config.ts"],"names":["__webpack_require__","d","__webpack_exports__","navigate","_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","_node","path","replace","history","replaceState","pushState","fireEvent","window","afterNextRender","nextRender","cb","requestAnimationFrame","setTimeout","Promise","resolve","setupLeafletMap","createTileLayer","async","mapElement","darkMode","draw","parentNode","Error","Leaflet","e","then","t","bind","Icon","Default","imagePath","map","style","document","createElement","setAttribute","appendChild","setView","addTo","leaflet","tileLayer","Browser","retina","attribution","subdomains","minZoom","maxZoom","defaultRadiusColor","homeRadiusColor","passiveRadiusColor","fetchZones","createZone","updateZone","deleteZone","showZoneEditor","getZoneEditorInitData","_common_navigate__WEBPACK_IMPORTED_MODULE_0__","hass","callWS","type","values","Object","assign","zoneId","updates","zone_id","inititialZoneEditorData","el","data","undefined","saveCoreConfig","detectCoreConfig","customElement","LocationEditor","_LitElement","[object Object]","args","super","_initialize","this","property","_leafletMap","location","_locationMarker","getBounds","fitBounds","fitZoom","_ignoreFitToMap","html","changedProps","_get","_getPrototypeOf","prototype","call","_initMap","has","_updateMarker","fitMap","_updateRadius","_updateRadiusColor","_updateIcon","shadowRoot","querySelector","_mapEl","Boolean","radius","addEventListener","ev","_locationUpdated","latlng","invalidateSize","longitude","lng","Math","abs","lat","bubbles","getRadius","icon","_iconEl","iconHTML","outerHTML","divIcon","iconSize","className","_setIcon","setIcon","editing","_moveMarker","enable","moveMarker","resizeMarker","_resizeMarkers","target","getLatLng","_radiusUpdated","setLatLng","disable","_setupEdit","circle","color","radiusColor","addLayer","marker","draggable","remove","setRadius","setStyle","css","LitElement","createTimezoneListEl","google_timezones_json__WEBPACK_IMPORTED_MODULE_0__","google_timezones_json__WEBPACK_IMPORTED_MODULE_0___default","n","list","id","keys","timezones","forEach","key","option","value","innerHTML","amsterdam","OnboardingCoreConfig","onboardingLocalize","user","name","_working","_nameValue","_handleChange","_detect","_locationValue","_locationChanged","localize","_timeZoneValue","_elevationValue","_unitSystemValue","_unitSystemChanged","_save","focus","keyCode","inputElement","_name","_location","_elevation","_timeZone","_unitSystem","currentTarget","detail","latitude","Number","elevation","String","unit_system","time_zone","err","alert","message","preventDefault","location_name","result","onboardCoreConfigStep"],"mappings":"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","file":"chunk.9473f85192934790f6cc.js","sourcesContent":["import { fireEvent } from \"./dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"location-changed\": {\n      replace: boolean;\n    };\n  }\n}\n\nexport const navigate = (_node: any, path: string, replace = false) => {\n  if (__DEMO__) {\n    if (replace) {\n      history.replaceState(null, \"\", `${location.pathname}#${path}`);\n    } else {\n      window.location.hash = path;\n    }\n  } else if (replace) {\n    history.replaceState(null, \"\", path);\n  } else {\n    history.pushState(null, \"\", path);\n  }\n  fireEvent(window, \"location-changed\", {\n    replace,\n  });\n};\n","export const afterNextRender = (cb: () => void): void => {\n  requestAnimationFrame(() => setTimeout(cb, 0));\n};\n\nexport const nextRender = () => {\n  return new Promise((resolve) => {\n    afterNextRender(resolve);\n  });\n};\n","import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\nexport type LeafletDrawModuleType = typeof import(\"leaflet-draw\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false,\n  draw = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // eslint-disable-next-line\n  const Leaflet = (await import(\n    /* webpackChunkName: \"leaflet\" */ \"leaflet\"\n  )) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  if (draw) {\n    await import(/* webpackChunkName: \"leaflet-draw\" */ \"leaflet-draw\");\n  }\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  createTileLayer(Leaflet, darkMode).addTo(map);\n\n  return [map, Leaflet];\n};\n\nexport const createTileLayer = (\n  leaflet: LeafletModuleType,\n  darkMode: boolean\n) => {\n  return leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  );\n};\n","import { navigate } from \"../common/navigate\";\nimport { HomeAssistant } from \"../types\";\n\nexport const defaultRadiusColor = \"#FF9800\";\nexport const homeRadiusColor = \"#03a9f4\";\nexport const passiveRadiusColor = \"#9b9b9b\";\n\nexport interface Zone {\n  id: string;\n  name: string;\n  icon?: string;\n  latitude: number;\n  longitude: number;\n  passive?: boolean;\n  radius?: number;\n}\n\nexport interface ZoneMutableParams {\n  icon: string;\n  latitude: number;\n  longitude: number;\n  name: string;\n  passive: boolean;\n  radius: number;\n}\n\nexport const fetchZones = (hass: HomeAssistant) =>\n  hass.callWS<Zone[]>({ type: \"zone/list\" });\n\nexport const createZone = (hass: HomeAssistant, values: ZoneMutableParams) =>\n  hass.callWS<Zone>({\n    type: \"zone/create\",\n    ...values,\n  });\n\nexport const updateZone = (\n  hass: HomeAssistant,\n  zoneId: string,\n  updates: Partial<ZoneMutableParams>\n) =>\n  hass.callWS<Zone>({\n    type: \"zone/update\",\n    zone_id: zoneId,\n    ...updates,\n  });\n\nexport const deleteZone = (hass: HomeAssistant, zoneId: string) =>\n  hass.callWS({\n    type: \"zone/delete\",\n    zone_id: zoneId,\n  });\n\nlet inititialZoneEditorData: Partial<ZoneMutableParams> | undefined;\n\nexport const showZoneEditor = (\n  el: HTMLElement,\n  data?: Partial<ZoneMutableParams>\n) => {\n  inititialZoneEditorData = data;\n  navigate(el, \"/config/zone/new\");\n};\n\nexport const getZoneEditorInitData = () => {\n  const data = inititialZoneEditorData;\n  inititialZoneEditorData = undefined;\n  return data;\n};\n","import { HassConfig } from \"home-assistant-js-websocket\";\nimport { HomeAssistant } from \"../types\";\n\nexport interface ConfigUpdateValues {\n  location_name: string;\n  latitude: number;\n  longitude: number;\n  elevation: number;\n  unit_system: \"metric\" | \"imperial\";\n  time_zone: string;\n}\n\nexport const saveCoreConfig = (\n  hass: HomeAssistant,\n  values: Partial<ConfigUpdateValues>\n) =>\n  hass.callWS<HassConfig>({\n    type: \"config/core/update\",\n    ...values,\n  });\n\nexport const detectCoreConfig = (hass: HomeAssistant) =>\n  hass.callWS<Partial<ConfigUpdateValues>>({\n    type: \"config/core/detect\",\n  });\n","import {\n  Circle,\n  DivIcon,\n  DragEndEvent,\n  LatLng,\n  LeafletMouseEvent,\n  Map,\n  Marker,\n} from \"leaflet\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport {\n  LeafletModuleType,\n  setupLeafletMap,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { nextRender } from \"../../common/util/render-status\";\nimport { defaultRadiusColor } from \"../../data/zone\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n\n  @property() public radius?: number;\n\n  @property() public radiusColor?: string;\n\n  @property() public icon?: string;\n\n  public fitZoom = 16;\n\n  private _iconEl?: DivIcon;\n\n  private _ignoreFitToMap?: [number, number];\n\n  // eslint-disable-next-line\n  private Leaflet?: LeafletModuleType;\n\n  private _leafletMap?: Map;\n\n  private _locationMarker?: Marker | Circle;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    if ((this._locationMarker as Circle).getBounds) {\n      this._leafletMap.fitBounds((this._locationMarker as Circle).getBounds());\n    } else {\n      this._leafletMap.setView(this.location, this.fitZoom);\n    }\n    this._ignoreFitToMap = this.location;\n  }\n\n  protected render(): TemplateResult {\n    return html` <div id=\"map\"></div> `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    if (changedProps.has(\"location\")) {\n      this._updateMarker();\n      if (\n        this.location &&\n        (!this._ignoreFitToMap ||\n          this._ignoreFitToMap[0] !== this.location[0] ||\n          this._ignoreFitToMap[1] !== this.location[1])\n      ) {\n        this.fitMap();\n      }\n    }\n    if (changedProps.has(\"radius\")) {\n      this._updateRadius();\n    }\n    if (changedProps.has(\"radiusColor\")) {\n      this._updateRadiusColor();\n    }\n    if (changedProps.has(\"icon\")) {\n      this._updateIcon();\n    }\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(\n      this._mapEl,\n      false,\n      Boolean(this.radius)\n    );\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._locationUpdated(ev.latlng)\n    );\n    this._updateIcon();\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _locationUpdated(latlng: LatLng) {\n    let longitude = latlng.lng;\n    if (Math.abs(longitude) > 180.0) {\n      // Normalize longitude if map provides values beyond -180 to +180 degrees.\n      longitude = (((longitude % 360.0) + 540.0) % 360.0) - 180.0;\n    }\n    this.location = this._ignoreFitToMap = [latlng.lat, longitude];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _radiusUpdated() {\n    this._ignoreFitToMap = this.location;\n    this.radius = (this._locationMarker as Circle).getRadius();\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateIcon() {\n    if (!this.icon) {\n      this._iconEl = undefined;\n      return;\n    }\n\n    // create icon\n    let iconHTML = \"\";\n    const el = document.createElement(\"ha-icon\");\n    el.setAttribute(\"icon\", this.icon);\n    iconHTML = el.outerHTML;\n\n    this._iconEl = this.Leaflet!.divIcon({\n      html: iconHTML,\n      iconSize: [24, 24],\n      className: \"light leaflet-edit-move\",\n    });\n    this._setIcon();\n  }\n\n  private _setIcon() {\n    if (!this._locationMarker || !this._iconEl) {\n      return;\n    }\n\n    if (!this.radius) {\n      (this._locationMarker as Marker).setIcon(this._iconEl);\n      return;\n    }\n\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    moveMarker.setIcon(this._iconEl);\n  }\n\n  private _setupEdit() {\n    // @ts-ignore\n    this._locationMarker.editing.enable();\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    // @ts-ignore\n    const resizeMarker = this._locationMarker.editing._resizeMarkers[0];\n    this._setIcon();\n    moveMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n    );\n    resizeMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._radiusUpdated(ev)\n    );\n  }\n\n  private async _updateMarker(): Promise<void> {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      if (this.radius) {\n        // @ts-ignore\n        this._locationMarker.editing.disable();\n        await nextRender();\n        this._setupEdit();\n      }\n      return;\n    }\n\n    if (!this.radius) {\n      this._locationMarker = this.Leaflet!.marker(this.location, {\n        draggable: true,\n      });\n      this._setIcon();\n      this._locationMarker.addEventListener(\n        \"dragend\",\n        // @ts-ignore\n        (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n      );\n      this._leafletMap!.addLayer(this._locationMarker);\n    } else {\n      this._locationMarker = this.Leaflet!.circle(this.location, {\n        color: this.radiusColor || defaultRadiusColor,\n        radius: this.radius,\n      });\n      this._leafletMap!.addLayer(this._locationMarker);\n      this._setupEdit();\n    }\n  }\n\n  private _updateRadius(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setRadius(this.radius);\n  }\n\n  private _updateRadiusColor(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setStyle({ color: this.radiusColor });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n      .light {\n        color: #000000;\n      }\n      .leaflet-edit-move {\n        border-radius: 50%;\n        cursor: move !important;\n      }\n      .leaflet-edit-resize {\n        border-radius: 50%;\n        cursor: nesw-resize !important;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import timezones from \"google-timezones-json\";\n\nexport const createTimezoneListEl = () => {\n  const list = document.createElement(\"datalist\");\n  list.id = \"timezones\";\n  Object.keys(timezones).forEach((key) => {\n    const option = document.createElement(\"option\");\n    option.value = key;\n    option.innerHTML = timezones[key];\n    list.appendChild(option);\n  });\n  return list;\n};\n","import \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport type { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-radio-button/paper-radio-button\";\nimport \"@polymer/paper-radio-group/paper-radio-group\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport type { LocalizeFunc } from \"../common/translations/localize\";\nimport \"../components/map/ha-location-editor\";\nimport { createTimezoneListEl } from \"../components/timezone-datalist\";\nimport {\n  ConfigUpdateValues,\n  detectCoreConfig,\n  saveCoreConfig,\n} from \"../data/core\";\nimport { onboardCoreConfigStep } from \"../data/onboarding\";\nimport type { PolymerChangedEvent } from \"../polymer-types\";\nimport type { HomeAssistant } from \"../types\";\n\nconst amsterdam = [52.3731339, 4.8903147];\n\n@customElement(\"onboarding-core-config\")\nclass OnboardingCoreConfig extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _working = false;\n\n  @property() private _name!: ConfigUpdateValues[\"location_name\"];\n\n  @property() private _location!: [number, number];\n\n  @property() private _elevation!: string;\n\n  @property() private _unitSystem!: ConfigUpdateValues[\"unit_system\"];\n\n  @property() private _timeZone!: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro\",\n          \"name\",\n          this.hass.user!.name\n        )}\n      </p>\n\n      <paper-input\n        .label=${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name\"\n        )}\n        name=\"name\"\n        .disabled=${this._working}\n        .value=${this._nameValue}\n        @value-changed=${this._handleChange}\n      ></paper-input>\n\n      <div class=\"middle-text\">\n        <p>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.intro_location\"\n          )}\n        </p>\n\n        <div class=\"row\">\n          <div>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n            )}\n          </div>\n          <mwc-button @click=${this._detect}>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.button_detect\"\n            )}\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <ha-location-editor\n          class=\"flex\"\n          .location=${this._locationValue}\n          .fitZoom=${14}\n          @change=${this._locationChanged}\n        ></ha-location-editor>\n      </div>\n\n      <div class=\"row\">\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.time_zone\"\n          )}\n          name=\"timeZone\"\n          list=\"timezones\"\n          .disabled=${this._working}\n          .value=${this._timeZoneValue}\n          @value-changed=${this._handleChange}\n        ></paper-input>\n\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.elevation\"\n          )}\n          name=\"elevation\"\n          type=\"number\"\n          .disabled=${this._working}\n          .value=${this._elevationValue}\n          @value-changed=${this._handleChange}\n        >\n          <span slot=\"suffix\">\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.elevation_meters\"\n            )}\n          </span>\n        </paper-input>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"flex\">\n          ${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.unit_system\"\n          )}\n        </div>\n        <paper-radio-group\n          class=\"flex\"\n          .selected=${this._unitSystemValue}\n          @selected-changed=${this._unitSystemChanged}\n        >\n          <paper-radio-button name=\"metric\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_metric\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.metric_example\"\n              )}\n            </div>\n          </paper-radio-button>\n          <paper-radio-button name=\"imperial\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_imperial\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.imperial_example\"\n              )}\n            </div>\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.shadowRoot!.querySelector(\"paper-input\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._save(ev);\n      }\n    });\n    const input = this.shadowRoot!.querySelector(\n      \"[name=timeZone]\"\n    ) as PaperInputElement;\n    input.inputElement.appendChild(createTimezoneListEl());\n  }\n\n  private get _nameValue() {\n    return this._name !== undefined\n      ? this._name\n      : this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name_default\"\n        );\n  }\n\n  private get _locationValue() {\n    return this._location || amsterdam;\n  }\n\n  private get _elevationValue() {\n    return this._elevation !== undefined ? this._elevation : 0;\n  }\n\n  private get _timeZoneValue() {\n    return this._timeZone;\n  }\n\n  private get _unitSystemValue() {\n    return this._unitSystem !== undefined ? this._unitSystem : \"metric\";\n  }\n\n  private _handleChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this[`_${target.name}`] = target.value;\n  }\n\n  private _locationChanged(ev) {\n    this._location = ev.currentTarget.location;\n  }\n\n  private _unitSystemChanged(\n    ev: PolymerChangedEvent<ConfigUpdateValues[\"unit_system\"]>\n  ) {\n    this._unitSystem = ev.detail.value;\n  }\n\n  private async _detect() {\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n      if (values.latitude && values.longitude) {\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n    } catch (err) {\n      alert(`Failed to detect location information: ${err.message}`);\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    ev.preventDefault();\n    this._working = true;\n    try {\n      const location = this._locationValue;\n      await saveCoreConfig(this.hass, {\n        location_name: this._nameValue,\n        latitude: location[0],\n        longitude: location[1],\n        elevation: Number(this._elevationValue),\n        unit_system: this._unitSystemValue,\n        time_zone: this._timeZoneValue || \"UTC\",\n      });\n      const result = await onboardCoreConfigStep(this.hass);\n      fireEvent(this, \"onboarding-step\", {\n        type: \"core_config\",\n        result,\n      });\n    } catch (err) {\n      this._working = false;\n      alert(`Failed to save: ${err.message}`);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-core-config\": OnboardingCoreConfig;\n  }\n}\n"],"sourceRoot":""}