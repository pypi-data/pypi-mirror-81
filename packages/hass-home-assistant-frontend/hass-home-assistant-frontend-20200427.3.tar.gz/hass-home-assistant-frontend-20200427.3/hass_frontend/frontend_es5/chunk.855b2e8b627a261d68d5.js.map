{"version":3,"sources":["webpack:///./src/components/ha-paper-dropdown-menu.ts","webpack:///./src/components/ha-dialog.ts","webpack:///./src/panels/config/lovelace/resources/dialog-lovelace-resource-detail.ts"],"names":["paperDropdownClass","customElements","get","HaPaperDropdownClass","_paperDropdownClass","_inherits","_super","_createSuper","_classCallCheck","this","apply","arguments","key","value","_this","_get","_getPrototypeOf","prototype","call","setTimeout","window","getComputedStyle","direction","style","textAlign","define","MwcDialog","createCloseHeading","hass","title","html","_templateObject","localize","_decorate","customElement","_initialize","_MwcDialog","F","_MwcDialog2","HaDialog","_len","length","args","Array","_key","concat","_assertThisInitialized","d","kind","static","css","_templateObject2","DialogLovelaceResourceDetail","_LitElement","_LitElement2","decorators","property","_showDialog","_asyncToGenerator","regeneratorRuntime","mark","_callee","params","wrap","_context","prev","next","_params","_error","undefined","resource","_url","url","_type","type","updateComplete","stop","_x","urlInvalid","trim","_close","_templateObject3","_urlChanged","_typeChanged","_templateObject4","_templateObject5","_templateObject6","_deleteResource","_submitting","_templateObject7","_updateResource","ev","detail","item","getAttribute","_updateResource2","_callee2","values","_context2","res_type","updateResource","createResource","t0","message","finish","_deleteResource2","_callee3","_context3","removeResource","sent","haStyleDialog","_templateObject8","LitElement"],"mappings":"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","file":"chunk.855b2e8b627a261d68d5.js","sourcesContent":["import \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport { PolymerElement } from \"@polymer/polymer\";\nimport { Constructor } from \"../types\";\n\nconst paperDropdownClass = customElements.get(\n  \"paper-dropdown-menu\"\n) as Constructor<PolymerElement>;\n\n// patches paper drop down to properly support RTL - https://github.com/PolymerElements/paper-dropdown-menu/issues/183\nexport class HaPaperDropdownClass extends paperDropdownClass {\n  public ready() {\n    super.ready();\n    // wait to check for direction since otherwise direction is wrong even though top level is RTL\n    setTimeout(() => {\n      if (window.getComputedStyle(this).direction === \"rtl\") {\n        this.style.textAlign = \"right\";\n      }\n    }, 100);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dropdown-menu\": HaPaperDropdownClass;\n  }\n}\n\ncustomElements.define(\"ha-paper-dropdown-menu\", HaPaperDropdownClass);\n","import \"@material/mwc-dialog\";\nimport type { Dialog } from \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { css, CSSResult, customElement, html } from \"lit-element\";\nimport type { Constructor, HomeAssistant } from \"../types\";\n\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <paper-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    icon=\"hass:close\"\n    dialogAction=\"close\"\n    class=\"close_button\"\n  ></paper-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { createCloseHeading } from \"../../../../components/ha-dialog\";\nimport \"../../../../components/ha-paper-dropdown-menu\";\nimport {\n  LovelaceResource,\n  LovelaceResourcesMutableParams,\n} from \"../../../../data/lovelace\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceResourceDetailsDialogParams } from \"./show-dialog-lovelace-resource-detail\";\n\n@customElement(\"dialog-lovelace-resource-detail\")\nexport class DialogLovelaceResourceDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _params?: LovelaceResourceDetailsDialogParams;\n\n  @property() private _url!: LovelaceResource[\"url\"];\n\n  @property() private _type!: LovelaceResource[\"type\"];\n\n  @property() private _error?: string;\n\n  @property() private _submitting = false;\n\n  public async showDialog(\n    params: LovelaceResourceDetailsDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    if (this._params.resource) {\n      this._url = this._params.resource.url || \"\";\n      this._type = this._params.resource.type || \"module\";\n    } else {\n      this._url = \"\";\n      this._type = \"module\";\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const urlInvalid = this._url.trim() === \"\";\n    return html`\n      <ha-dialog\n        open\n        @closing=${this._close}\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this._params.resource\n            ? this._params.resource.url\n            : this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.new_resource\"\n              )\n        )}\n      >\n        <div>\n          ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n          <div class=\"form\">\n            <h3 class=\"warning\">\n              ${this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.warning_header\"\n              )}\n            </h3>\n            ${this.hass!.localize(\n              \"ui.panel.config.lovelace.resources.detail.warning_text\"\n            )}\n            <paper-input\n              .value=${this._url}\n              @value-changed=${this._urlChanged}\n              .label=${this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.url\"\n              )}\n              .errorMessage=${this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.url_error_msg\"\n              )}\n              .invalid=${urlInvalid}\n              dialogInitialFocus\n            ></paper-input>\n            <br />\n            <ha-paper-dropdown-menu\n              .label=${this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.type\"\n              )}\n            >\n              <paper-listbox\n                slot=\"dropdown-content\"\n                .selected=${this._type}\n                @iron-select=${this._typeChanged}\n                attr-for-selected=\"type\"\n              >\n                <paper-item type=\"module\">\n                  ${this.hass!.localize(\n                    \"ui.panel.config.lovelace.resources.types.module\"\n                  )}\n                </paper-item>\n                ${this._type === \"js\"\n                  ? html`\n                      <paper-item type=\"js\">\n                        ${this.hass!.localize(\n                          \"ui.panel.config.lovelace.resources.types.js\"\n                        )}\n                      </paper-item>\n                    `\n                  : \"\"}\n                <paper-item type=\"css\">\n                  ${this.hass!.localize(\n                    \"ui.panel.config.lovelace.resources.types.css\"\n                  )}\n                </paper-item>\n                ${this._type === \"html\"\n                  ? html`\n                      <paper-item type=\"html\">\n                        ${this.hass!.localize(\n                          \"ui.panel.config.lovelace.resources.types.html\"\n                        )}\n                      </paper-item>\n                    `\n                  : \"\"}\n              </paper-listbox>\n            </ha-paper-dropdown-menu>\n          </div>\n        </div>\n        ${this._params.resource\n          ? html`\n              <mwc-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                @click=\"${this._deleteResource}\"\n                .disabled=${this._submitting}\n              >\n                ${this.hass!.localize(\n                  \"ui.panel.config.lovelace.resources.detail.delete\"\n                )}\n              </mwc-button>\n            `\n          : html``}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=\"${this._updateResource}\"\n          .disabled=${urlInvalid || this._submitting}\n        >\n          ${this._params.resource\n            ? this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.update\"\n              )\n            : this.hass!.localize(\n                \"ui.panel.config.lovelace.resources.detail.create\"\n              )}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _urlChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._url = ev.detail.value;\n  }\n\n  private _typeChanged(ev: CustomEvent) {\n    this._type = ev.detail.item.getAttribute(\"type\");\n  }\n\n  private async _updateResource() {\n    this._submitting = true;\n    try {\n      const values: LovelaceResourcesMutableParams = {\n        url: this._url.trim(),\n        res_type: this._type,\n      };\n      if (this._params!.resource) {\n        await this._params!.updateResource(values);\n      } else {\n        await this._params!.createResource(values);\n      }\n      this._params = undefined;\n    } catch (err) {\n      this._error = err?.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteResource() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeResource()) {\n        this._close();\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        .warning {\n          color: var(--error-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-lovelace-resource-detail\": DialogLovelaceResourceDetail;\n  }\n}\n"],"sourceRoot":""}