Metadata-Version: 2.1
Name: gdal2tiles
Version: 0.1.9
Summary: A python library for generating map tiles based on gdal2tiles.py script.
Home-page: https://github.com/tehamalab/gdal2tiles
Author: Tehamalab
Author-email: developers@tehamalab.com
License: MIT license
Description: ==========
        gdal2tiles
        ==========
        
        
        .. image:: https://img.shields.io/pypi/v/gdal2tiles.svg
                :target: https://pypi.python.org/pypi/gdal2tiles
        
        .. image:: https://img.shields.io/travis/tehamalab/gdal2tiles.svg
                :target: https://travis-ci.org/tehamalab/gdal2tiles
        
        .. image:: https://readthedocs.org/projects/gdal2tiles/badge/?version=latest
                :target: https://gdal2tiles.readthedocs.io/en/latest/?badge=latest
                :alt: Documentation Status
        
        
        A python library for generating map tiles inspired by gdal2tiles.py_ from GDAL_ project.
        
        
        Dependancies
        ------------
        
        - GDAL_ development header files, sometimes available as `libgdal-dev` or `libgdal-devel` packages.
        
        
        Installation
        ------------
        
        To install gdal2tiles library you can use pip:
        
        .. code-block:: console
        
            $ pip install gdal2tiles
        
        
        Basic usage
        -----------
        
        .. code-block:: python
        
            import gdal2tiles
        
            gdal2tiles.generate_tiles('/path/to/input_file', '/path/to/output_dir/')
        
        
        You can also pass various keyword as optional keyword arguments to `generate_tiles()` function.
        For example
        
        .. code-block:: python
        
            gdal2tiles.generate_tiles('input_file', 'output_dir/', nb_processes=2, zoom='7-9')
        
        OR
        
        .. code-block:: python
        
            options = {'zoom': (7, 9), 'resume': True}
            gdal2tiles.generate_tiles('input_file', 'output_dir/', **options)
        
        
        In general
        
        .. code-block:: python
        
            gdal2tiles.generate_tiles(input_file, output_folder, **options)
        
        
        Arguments:
            ``input_file`` *(str)*: Path to input file.
        
            ``output_folder`` *(str)*: Path to output folder.
        
            ``options``: Tile generation options.
        
        
        Options:
            ``profile`` *(str)*: Tile cutting profile (mercator,geodetic,raster) - default
                'mercator' (Google Maps compatible)
        
            ``resampling`` *(str)*: Resampling method (average,near,bilinear,cubic,cubicsp
                line,lanczos,antialias) - default 'average'
        
            ``s_srs``: The spatial reference system used for the source input data
        
            ``zoom``: Zoom levels to render; format: '[int min, int max]',
                'min-max' or 'int/str zoomlevel'.
        
            ``tile_size`` *(int)*: Size of tiles to render - default 256
        
            ``resume`` *(bool)*: Resume mode. Generate only missing files.
        
            ``srcnodata``: NODATA transparency value to assign to the input data
        
            ``tmscompatible`` *(bool)*: When using the geodetic profile, specifies the base
                resolution as 0.703125 or 2 tiles at zoom level 0.
        
            ``verbose`` *(bool)*: Print status messages to stdout
        
            ``kml`` *(bool)*: Generate KML for Google Earth - default for 'geodetic'
                            profile and 'raster' in EPSG:4326. For a dataset with
                            different projection use with caution!
        
            ``url`` *(str)*: URL address where the generated tiles are going to be published
        
            ``webviewer`` *(str)*: Web viewer to generate (all,google,openlayers,none) -
                default 'all'
        
            ``title`` *(str)*: Title of the map
        
            ``copyright`` *(str)*: Copyright for the map
        
            ``googlekey`` (str): Google Maps API key from
                http://code.google.com/apis/maps/signup.html
        
            ``bingkey`` *(str)*: Bing Maps API key from https://www.bingmapsportal.com/
        
            ``nb_processes`` *(int)*: Number of processes to use for tiling.
        
        
        .. _gdal2tiles.py: http://www.gdal.org/gdal2tiles.html
        .. _GDAL: http://www.gdal.org/
        
        
        =======
        History
        =======
        
        0.1.9 (2020-09-30)
        ------------------
        
        * Enabling GDAL Exceptions.
        * Ensuring ``tmscompatible`` option in tile generation and calculation is bool instance.
        
        
        0.1.8 (2020-09-23)
        ------------------
        
        * Fix AttributeError ``gdal2tiles.generate_tiles(..., profile='raster', kml=True)``.
          Fix `issue #14 <https://github.com/tehamalab/gdal2tiles/issues/14>`_.
        
        
        0.1.7 (2020-06-03)
        ------------------
        
        * Add tile_size option on `generate_tiles` to allow custom tile sizes.
        * Small documentation updates.
        * Improve basic tests and test against multiple versions of GDAL.
        
        
        0.1.6 (2020-01-03)
        ------------------
        
        * Fix some of GDAL installation issues.
        * Use pygdal package instead of GDAL dependency.
        
        
        0.1.5 (2018-08-14)
        ------------------
        
        * Bug fix.
        
        
        0.1.4 (2018-08-14)
        ------------------
        
        * Accept list or tuple in specifying tile generation zoom level.
        
        
        0.1.3 (2018-07-31)
        ------------------
        
        * Use billard for multiprocessing if available.
        
        
        0.1.2 (2018-05-16)
        ------------------
        
        * Bug fix in ``generate_tiles()``.
        
        
        0.1.1 (2018-05-10)
        ------------------
        
        * Clean the source code.
        * Setup documentation
        * Setup testing environment
        
        
        0.1.0 (2018-05-06)
        ------------------
        
        * First release on PyPI.
        
Keywords: gdal2tiles
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Provides-Extra: billiard
