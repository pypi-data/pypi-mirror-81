{"version":3,"sources":["webpack:///./src/panels/lovelace/common/compute-tooltip.ts","webpack:///./src/panels/lovelace/components/hui-buttons-base.ts","webpack:///./src/panels/lovelace/header-footer/hui-buttons-header-footer.ts"],"names":["__webpack_require__","d","__webpack_exports__","computeTooltip","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_0__","computeActionTooltip","hass","state","config","isHold","action","tooltip","localize","navigation_path","url_path","service","title","stateName","entity","states","computeStateName","tap_action","hold_action","tapTooltip","holdTooltip","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","decorators","property","key","value","queryAll","_this$configEntities","_hass","entitiesShowingIcons","configEntities","filter","show_icon","_badges","forEach","badge","index","stateObj","html","map","entityConf","_handleAction","actionHandler","hasHold","hasAction","hasDoubleClick","double_tap_action","icon","image","show_name","name","ev","currentTarget","handleAction","Object","assign","detail","static","css","LitElement","HuiButtonsHeaderFooter","entities","_configEntities","processConfigEntities","requestUpdate"],"mappings":"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","file":"chunk.654e8e58e95e571b34e5.js","sourcesContent":["import { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport { ActionConfig } from \"../../../data/lovelace\";\nimport { HomeAssistant } from \"../../../types\";\n\ninterface Config {\n  entity?: string;\n  title?: string;\n  tap_action?: ActionConfig;\n  hold_action?: ActionConfig;\n  double_tap_action?: ActionConfig;\n}\n\nfunction computeActionTooltip(\n  hass: HomeAssistant,\n  state: string,\n  config: ActionConfig,\n  isHold: boolean\n) {\n  if (!config || !config.action || config.action === \"none\") {\n    return \"\";\n  }\n\n  let tooltip =\n    (isHold\n      ? hass.localize(\"ui.panel.lovelace.cards.picture-elements.hold\")\n      : hass.localize(\"ui.panel.lovelace.cards.picture-elements.tap\")) + \" \";\n\n  switch (config.action) {\n    case \"navigate\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.navigate_to\",\n        \"location\",\n        config.navigation_path\n      )}`;\n      break;\n    case \"url\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.url\",\n        \"url_path\",\n        config.url_path\n      )}`;\n      break;\n    case \"toggle\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.toggle\",\n        \"name\",\n        state\n      )}`;\n      break;\n    case \"call-service\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.call_service\",\n        \"name\",\n        config.service\n      )}`;\n      break;\n    case \"more-info\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.more_info\",\n        \"name\",\n        state\n      )}`;\n      break;\n  }\n\n  return tooltip;\n}\n\nexport const computeTooltip = (hass: HomeAssistant, config: Config): string => {\n  if (config.title === null) {\n    return \"\";\n  }\n\n  if (config.title) {\n    return config.title;\n  }\n\n  let stateName = \"\";\n  let tooltip = \"\";\n\n  if (config.entity) {\n    stateName =\n      config.entity in hass.states\n        ? computeStateName(hass.states[config.entity])\n        : config.entity;\n  }\n\n  if (!config.tap_action && !config.hold_action) {\n    return stateName;\n  }\n\n  const tapTooltip = config.tap_action\n    ? computeActionTooltip(hass, stateName, config.tap_action, false)\n    : \"\";\n  const holdTooltip = config.hold_action\n    ? computeActionTooltip(hass, stateName, config.hold_action, true)\n    : \"\";\n\n  const newline = tapTooltip && holdTooltip ? \"\\n\" : \"\";\n\n  tooltip = tapTooltip + newline + holdTooltip;\n\n  return tooltip;\n};\n","import \"@material/mwc-ripple\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  queryAll,\n  TemplateResult,\n} from \"lit-element\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport \"../../../components/entity/state-badge\";\nimport type { StateBadge } from \"../../../components/entity/state-badge\";\nimport \"../../../components/ha-icon\";\nimport type { ActionHandlerEvent } from \"../../../data/lovelace\";\nimport type { HomeAssistant } from \"../../../types\";\nimport type { EntitiesCardEntityConfig } from \"../cards/types\";\nimport { computeTooltip } from \"../common/compute-tooltip\";\nimport { actionHandler } from \"../common/directives/action-handler-directive\";\nimport { handleAction } from \"../common/handle-action\";\nimport { hasAction } from \"../common/has-action\";\n\n@customElement(\"hui-buttons-base\")\nexport class HuiButtonsBase extends LitElement {\n  @property() public configEntities?: EntitiesCardEntityConfig[];\n\n  @queryAll(\"state-badge\") protected _badges!: StateBadge[];\n\n  private _hass?: HomeAssistant;\n\n  set hass(hass: HomeAssistant) {\n    this._hass = hass;\n    const entitiesShowingIcons = this.configEntities?.filter(\n      (entity) => entity.show_icon !== false\n    );\n    this._badges.forEach((badge, index: number) => {\n      badge.hass = hass;\n      badge.stateObj = hass.states[entitiesShowingIcons![index].entity];\n    });\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      ${(this.configEntities || []).map((entityConf) => {\n        const stateObj = this._hass!.states[entityConf.entity];\n        if (!stateObj) {\n          return html`<div class='missing'><iron-icon icon=\"hass:alert\"></div>`;\n        }\n\n        return html`\n          <div\n            @action=${this._handleAction}\n            .actionHandler=${actionHandler({\n              hasHold: hasAction(entityConf.hold_action),\n              hasDoubleClick: hasAction(entityConf.double_tap_action),\n            })}\n            .config=${entityConf}\n            tabindex=\"0\"\n          >\n            ${entityConf.show_icon !== false\n              ? html`\n                  <state-badge\n                    title=${computeTooltip(this._hass!, entityConf)}\n                    .hass=${this._hass}\n                    .stateObj=${stateObj}\n                    .overrideIcon=${entityConf.icon}\n                    .overrideImage=${entityConf.image}\n                    stateColor\n                  ></state-badge>\n                `\n              : \"\"}\n            <span>\n              ${entityConf.show_name ||\n              (entityConf.name && entityConf.show_name !== false)\n                ? entityConf.name || computeStateName(stateObj)\n                : \"\"}\n            </span>\n            <mwc-ripple unbounded></mwc-ripple>\n          </div>\n        `;\n      })}\n    `;\n  }\n\n  private _handleAction(ev: ActionHandlerEvent) {\n    const config = (ev.currentTarget as any).config as EntitiesCardEntityConfig;\n    handleAction(\n      this,\n      this._hass!,\n      { tap_action: { action: \"toggle\" }, ...config },\n      ev.detail.action!\n    );\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: flex;\n        justify-content: space-evenly;\n      }\n      .missing {\n        color: #fce588;\n      }\n      div {\n        cursor: pointer;\n        align-items: center;\n        display: inline-flex;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-buttons-base\": HuiButtonsBase;\n  }\n}\n","import {\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport \"../components/hui-buttons-base\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { LovelaceHeaderFooter } from \"../types\";\nimport { ButtonsHeaderFooterConfig } from \"./types\";\n\n@customElement(\"hui-buttons-header-footer\")\nexport class HuiButtonsHeaderFooter extends LitElement\n  implements LovelaceHeaderFooter {\n  public static getStubConfig(): object {\n    return { entities: [] };\n  }\n\n  @property() public hass?: HomeAssistant;\n\n  private _configEntities?: EntityConfig[];\n\n  public setConfig(config: ButtonsHeaderFooterConfig): void {\n    this._configEntities = processConfigEntities(config.entities);\n    this.requestUpdate();\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <hui-buttons-base\n        .hass=${this.hass}\n        .configEntities=${this._configEntities}\n      ></hui-buttons-base>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-buttons-header-footer\": HuiButtonsHeaderFooter;\n  }\n}\n"],"sourceRoot":""}