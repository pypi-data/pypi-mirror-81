{"version":3,"sources":["webpack:///./node_modules/memoize-one/dist/memoize-one.esm.js","webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/types.ts","webpack:///./src/panels/lovelace/components/hui-input-list-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-map-card-editor.ts"],"names":["simpleIsEqual","newArgs","lastArgs","length","every","newArg","index","newValue","oldValue","resultFn","isEqual","lastThis","lastResult","calledOnce","_len","arguments","Array","_key","this","apply","__webpack_require__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","_paper_item_behavior_js__WEBPACK_IMPORTED_MODULE_6__","Polymer","_template","html","is","behaviors","PaperItemBehavior","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","actionConfigStruct","entitiesConfigStruct","_common_structs_struct__WEBPACK_IMPORTED_MODULE_0__","action","navigation_path","url_path","service","service_data","union","entity","name","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","kind","decorators","property","key","map","listEntry","inputLabel","_valueChanged","_consolidateEntries","_removeEntry","_addEntry","ev","target","newEntries","concat","fireEvent","blur","stopPropagation","splice","parent","currentTarget","parentElement","static","css","LitElement","cardConfigStruct","type","title","aspect_ratio","default_zoom","dark_mode","entities","hours_to_show","geo_location_sources","HuiMapCardEditor","hui_map_card_editor_decorate","config","_config","_configEntities","processEditorEntities","NaN","hass","configElementStyle","localize","_title","_aspect_ratio","_default_zoom","_dark_mode","_hours_to_show","_entitiesValueChanged","_geo_location_sources","detail","configValue","Number","isNaN","Object","assign","undefined","checked"],"mappings":"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","file":"chunk.48eabff3c7af38b732fa.js","sourcesContent":["var shallowEqual = function shallowEqual(newValue, oldValue) {\n  return newValue === oldValue;\n};\n\nvar simpleIsEqual = function simpleIsEqual(newArgs, lastArgs) {\n  return newArgs.length === lastArgs.length && newArgs.every(function (newArg, index) {\n    return shallowEqual(newArg, lastArgs[index]);\n  });\n};\n\nfunction index (resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = simpleIsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nexport default index;\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  ActionConfig,\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n  ShowViewConfig,\n} from \"../../../data/lovelace\";\nimport { struct } from \"../common/structs/struct\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nexport interface YamlChangedEvent extends Event {\n  detail: {\n    yaml: string;\n  };\n}\n\nexport interface GUIModeChangedEvent {\n  guiMode: boolean;\n  guiModeAvailable: boolean;\n}\n\nexport interface ViewEditEvent extends Event {\n  detail: {\n    config: LovelaceViewConfig;\n  };\n}\n\nexport interface ViewVisibilityChangeEvent {\n  visible: ShowViewConfig[];\n}\n\nexport interface ConfigValue {\n  format: \"json\" | \"yaml\";\n  value?: string | LovelaceCardConfig;\n}\n\nexport interface ConfigError {\n  type: string;\n  message: string;\n}\n\nexport interface EntitiesEditorEvent {\n  detail?: {\n    entities?: EntityConfig[];\n  };\n  target?: EventTarget;\n}\n\nexport interface EditorTarget extends EventTarget {\n  value?: string;\n  index?: number;\n  checked?: boolean;\n  configValue?: string;\n  type?: HTMLInputElement[\"type\"];\n  config: ActionConfig;\n}\n\nexport interface CardPickTarget extends EventTarget {\n  config: LovelaceCardConfig;\n}\n\nexport const actionConfigStruct = struct({\n  action: \"string\",\n  navigation_path: \"string?\",\n  url_path: \"string?\",\n  service: \"string?\",\n  service_data: \"object?\",\n});\n\nexport const entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../types\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-input-list-editor\")\nexport class HuiInputListEditor extends LitElement {\n  @property() protected value?: string[];\n\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected inputLabel?: string;\n\n  protected render(): TemplateResult {\n    if (!this.value) {\n      return html``;\n    }\n\n    return html`\n      ${this.value.map((listEntry, index) => {\n        return html`\n          <paper-input\n            label=\"${this.inputLabel}\"\n            .value=\"${listEntry}\"\n            .configValue=\"${\"entry\"}\"\n            .index=\"${index}\"\n            @value-changed=\"${this._valueChanged}\"\n            @blur=\"${this._consolidateEntries}\"\n            ><paper-icon-button\n              slot=\"suffix\"\n              class=\"clear-button\"\n              icon=\"hass:close\"\n              no-ripple\n              @click=\"${this._removeEntry}\"\n              >Clear</paper-icon-button\n            ></paper-input\n          >\n        `;\n      })}\n      <paper-input\n        label=\"${this.inputLabel}\"\n        @change=\"${this._addEntry}\"\n      ></paper-input>\n    `;\n  }\n\n  private _addEntry(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newEntries = this.value!.concat(target.value as string);\n    target.value = \"\";\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n    (ev.target! as LitElement).blur();\n  }\n\n  private _valueChanged(ev: Event): void {\n    ev.stopPropagation();\n    const target = ev.target! as EditorTarget;\n    const newEntries = this.value!.concat();\n    newEntries[target.index!] = target.value!;\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  private _consolidateEntries(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      const newEntries = this.value!.concat();\n      newEntries.splice(target.index!, 1);\n      fireEvent(this, \"value-changed\", {\n        value: newEntries,\n      });\n    }\n  }\n\n  private _removeEntry(ev: Event): void {\n    const parent = (ev.currentTarget as any).parentElement;\n    const newEntries = this.value!.concat();\n    newEntries.splice(parent.index!, 1);\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-input-list-editor\": HuiInputListEditor;\n  }\n}\n","import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { MapCardConfig } from \"../../cards/types\";\nimport { struct } from \"../../common/structs/struct\";\nimport \"../../components/hui-entity-editor\";\nimport \"../../components/hui-input-list-editor\";\nimport { EntityConfig } from \"../../entity-rows/types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport {\n  EditorTarget,\n  entitiesConfigStruct,\n  EntitiesEditorEvent,\n} from \"../types\";\nimport \"../../../../components/ha-switch\";\nimport { configElementStyle } from \"./config-elements-style\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  aspect_ratio: \"string?\",\n  default_zoom: \"number?\",\n  dark_mode: \"boolean?\",\n  entities: [entitiesConfigStruct],\n  hours_to_show: \"number?\",\n  geo_location_sources: \"array?\",\n});\n\n@customElement(\"hui-map-card-editor\")\nexport class HuiMapCardEditor extends LitElement implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MapCardConfig;\n\n  @property() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: MapCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = config.entities\n      ? processEditorEntities(config.entities)\n      : [];\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _aspect_ratio(): string {\n    return this._config!.aspect_ratio || \"\";\n  }\n\n  get _default_zoom(): number {\n    return this._config!.default_zoom || NaN;\n  }\n\n  get _geo_location_sources(): string[] {\n    return this._config!.geo_location_sources || [];\n  }\n\n  get _hours_to_show(): number {\n    return this._config!.hours_to_show || 0;\n  }\n\n  get _dark_mode(): boolean {\n    return this._config!.dark_mode || false;\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.aspect_ratio\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._aspect_ratio}\"\n            .configValue=\"${\"aspect_ratio\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.map.default_zoom\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            type=\"number\"\n            .value=\"${this._default_zoom}\"\n            .configValue=\"${\"default_zoom\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <ha-switch\n            .checked=\"${this._dark_mode}\"\n            .configValue=\"${\"dark_mode\"}\"\n            @change=\"${this._valueChanged}\"\n            >${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.map.dark_mode\"\n            )}</ha-switch\n          >\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.map.hours_to_show\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            type=\"number\"\n            .value=\"${this._hours_to_show}\"\n            .configValue=\"${\"hours_to_show\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <hui-entity-editor\n          .hass=${this.hass}\n          .entities=\"${this._configEntities}\"\n          @entities-changed=\"${this._entitiesValueChanged}\"\n        ></hui-entity-editor>\n        <h3>\n          ${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.map.geo_location_sources\"\n          )}\n        </h3>\n        <div class=\"geo_location_sources\">\n          <hui-input-list-editor\n            inputLabel=${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.map.source\"\n            )}\n            .hass=${this.hass}\n            .value=\"${this._geo_location_sources}\"\n            .configValue=\"${\"geo_location_sources\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></hui-input-list-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _entitiesValueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n      fireEvent(this, \"config-changed\", { config: this._config });\n    }\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<any>): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (target.configValue && this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    let value: any = target.value;\n    if (target.type === \"number\") {\n      value = Number(value);\n    }\n    if (target.value === \"\" || (target.type === \"number\" && isNaN(value))) {\n      delete this._config[target.configValue!];\n    } else if (target.configValue) {\n      this._config = {\n        ...this._config,\n        [target.configValue]:\n          target.checked !== undefined ? target.checked : value,\n      };\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .geo_location_sources {\n        padding-left: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-map-card-editor\": HuiMapCardEditor;\n  }\n}\n"],"sourceRoot":""}