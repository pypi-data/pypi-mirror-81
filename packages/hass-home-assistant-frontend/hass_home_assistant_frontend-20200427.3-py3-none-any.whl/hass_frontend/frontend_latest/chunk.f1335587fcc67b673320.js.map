{"version":3,"sources":["webpack:///./src/panels/lovelace/common/evaluate-filter.ts","webpack:///./src/panels/lovelace/cards/hui-entity-filter-card.ts"],"names":["__webpack_require__","d","__webpack_exports__","evaluateFilter","stateObj","filter","operator","value","state","attribute","attributes","match","customElements","define","HTMLElement","[object Object]","args","super","_defineProperty","this","getCardSize","_element","setConfig","config","entities","Array","isArray","Error","state_filter","every","entity","_config","_configEntities","undefined","_baseCardConfig","Object","assign","type","card","lastChild","removeChild","editMode","_editMode","hass","haveEntitiesChanged","_hass","processConfigEntities","entitiesList","entityConf","states","length","show_empty","style","display","element","_cardElement","tagName","_oldEntities","idx","isPanel","appendChild","localize","createCardElement"],"mappings":"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","file":"chunk.f1335587fcc67b673320.js","sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const evaluateFilter = (stateObj: HassEntity, filter: any): boolean => {\n  const operator = filter.operator || \"==\";\n  const value = filter.value || filter;\n  const state = filter.attribute\n    ? stateObj.attributes[filter.attribute]\n    : stateObj.state;\n\n  switch (operator) {\n    case \"==\":\n      return state === value;\n    case \"<=\":\n      return state <= value;\n    case \"<\":\n      return state < value;\n    case \">=\":\n      return state >= value;\n    case \">\":\n      return state > value;\n    case \"!=\":\n      return state !== value;\n    case \"regex\": {\n      return state.match(value);\n    }\n    default:\n      return false;\n  }\n};\n","import { LovelaceCardConfig } from \"../../../data/lovelace\";\nimport { HomeAssistant } from \"../../../types\";\nimport { evaluateFilter } from \"../common/evaluate-filter\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport { createCardElement } from \"../create-element/create-card-element\";\nimport { EntityFilterEntityConfig } from \"../entity-rows/types\";\nimport { LovelaceCard } from \"../types\";\nimport { EntityFilterCardConfig } from \"./types\";\n\nclass EntityFilterCard extends HTMLElement implements LovelaceCard {\n  public isPanel?: boolean;\n\n  private _editMode = false;\n\n  private _element?: LovelaceCard;\n\n  private _config?: EntityFilterCardConfig;\n\n  private _configEntities?: EntityFilterEntityConfig[];\n\n  private _baseCardConfig?: LovelaceCardConfig;\n\n  private _hass?: HomeAssistant;\n\n  private _oldEntities?: EntityFilterEntityConfig[];\n\n  public getCardSize(): number {\n    return this._element ? this._element.getCardSize() : 1;\n  }\n\n  public setConfig(config: EntityFilterCardConfig): void {\n    if (!config.entities || !Array.isArray(config.entities)) {\n      throw new Error(\"entities must be specified.\");\n    }\n\n    if (\n      !(config.state_filter && Array.isArray(config.state_filter)) &&\n      !config.entities.every(\n        (entity) =>\n          typeof entity === \"object\" &&\n          entity.state_filter &&\n          Array.isArray(entity.state_filter)\n      )\n    ) {\n      throw new Error(\"Incorrect filter config.\");\n    }\n\n    this._config = config;\n    this._configEntities = undefined;\n    this._baseCardConfig = {\n      type: \"entities\",\n      entities: [],\n      ...this._config.card,\n    };\n\n    if (this.lastChild) {\n      this.removeChild(this.lastChild);\n      this._element = undefined;\n    }\n  }\n\n  set editMode(editMode: boolean) {\n    this._editMode = editMode;\n    if (!this._element) {\n      return;\n    }\n    this._element.editMode = editMode;\n  }\n\n  set hass(hass: HomeAssistant) {\n    if (!hass || !this._config) {\n      return;\n    }\n\n    if (!this.haveEntitiesChanged(hass)) {\n      this._hass = hass;\n      return;\n    }\n\n    this._hass = hass;\n\n    if (!this._configEntities) {\n      this._configEntities = processConfigEntities(this._config.entities);\n    }\n\n    const entitiesList = this._configEntities.filter((entityConf) => {\n      const stateObj = hass.states[entityConf.entity];\n\n      if (!stateObj) {\n        return false;\n      }\n\n      if (entityConf.state_filter) {\n        for (const filter of entityConf.state_filter) {\n          if (evaluateFilter(stateObj, filter)) {\n            return true;\n          }\n        }\n      } else {\n        for (const filter of this._config!.state_filter) {\n          if (evaluateFilter(stateObj, filter)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    });\n\n    if (entitiesList.length === 0 && this._config.show_empty === false) {\n      this.style.display = \"none\";\n      return;\n    }\n\n    const element = this._cardElement();\n\n    if (!element) {\n      return;\n    }\n\n    if (element.tagName !== \"HUI-ERROR-CARD\") {\n      const isSame =\n        this._oldEntities &&\n        entitiesList.length === this._oldEntities.length &&\n        entitiesList.every((entity, idx) => entity === this._oldEntities![idx]);\n\n      if (!isSame) {\n        this._oldEntities = entitiesList;\n        element.setConfig({ ...this._baseCardConfig!, entities: entitiesList });\n      }\n\n      element.isPanel = this.isPanel;\n      element.editMode = this._editMode;\n      element.hass = hass;\n    }\n\n    // Attach element if it has never been attached.\n    if (!this.lastChild) {\n      this.appendChild(element);\n    }\n\n    this.style.display = \"block\";\n  }\n\n  private haveEntitiesChanged(hass: HomeAssistant): boolean {\n    if (!this._hass) {\n      return true;\n    }\n\n    if (!this._configEntities) {\n      return true;\n    }\n\n    for (const config of this._configEntities) {\n      if (\n        this._hass.states[config.entity] !== hass.states[config.entity] ||\n        this._hass.localize !== hass.localize\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private _cardElement(): LovelaceCard | undefined {\n    if (!this._element && this._config) {\n      const element = createCardElement(this._baseCardConfig!);\n      this._element = element;\n    }\n\n    return this._element;\n  }\n}\ncustomElements.define(\"hui-entity-filter-card\", EntityFilterCard);\n"],"sourceRoot":""}