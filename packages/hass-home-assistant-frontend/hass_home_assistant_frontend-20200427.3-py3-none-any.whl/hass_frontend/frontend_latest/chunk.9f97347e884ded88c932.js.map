{"version":3,"sources":["webpack:///./src/components/ha-dialog.ts","webpack:///./src/components/ha-icon-input.ts","webpack:///./src/common/string/slugify.ts","webpack:///./src/panels/config/lovelace/dashboards/dialog-lovelace-dashboard-detail.ts"],"names":["MwcDialog","customElements","get","createCloseHeading","hass","title","html","localize","_decorate","customElement","_initialize","_MwcDialog","F","[object Object]","args","super","this","d","kind","static","key","value","style","css","_LitElement","decorators","property","attribute","type","Boolean","label","placeholder","_valueChanged","disabled","errorMessage","ev","detail","fireEvent","bubbles","composed","LitElement","__webpack_require__","__webpack_exports__","slugify","a","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","DialogLovelaceDashboardDetail","async","params","_params","_error","undefined","_urlPath","urlPath","dashboard","_showInSidebar","show_in_sidebar","_icon","icon","_title","_requireAdmin","require_admin","updateComplete","_this$hass$userData","_this$hass$userData2","_this$_params$dashboa","_this$_params$dashboa2","defaultPanelUrlPath","defaultPanel","urlInvalid","test","titleInvalid","trim","_close","id","_titleChanged","userData","showAdvanced","_fillUrlPath","_iconChanged","_urlChanged","_showSidebarChanged","_requireAdminChanged","_deleteDashboard","_submitting","_toggleDefault","_updateDashboard","_this$hass$userData3","_this$hass$userData4","slugifyTitle","includes","target","checked","_this$_params","setDefaultPanel","DEFAULT_PANEL","_this$_params2","_this$_params$dashboa3","values","updateDashboard","url_path","mode","createDashboard","err","message","removeDashboard","haStyleDialog"],"mappings":"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","file":"chunk.9f97347e884ded88c932.js","sourcesContent":["import \"@material/mwc-dialog\";\nimport type { Dialog } from \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { css, CSSResult, customElement, html } from \"lit-element\";\nimport type { Constructor, HomeAssistant } from \"../types\";\n\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <paper-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    icon=\"hass:close\"\n    dialogAction=\"close\"\n    class=\"close_button\"\n  ></paper-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport \"./ha-icon\";\n\n@customElement(\"ha-icon-input\")\nexport class HaIconInput extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public placeholder?: string;\n\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-input\n        .value=${this.value}\n        .label=${this.label}\n        .placeholder=${this.placeholder}\n        @value-changed=${this._valueChanged}\n        .disabled=${this.disabled}\n        auto-validate\n        .errorMessage=${this.errorMessage}\n        pattern=\"^\\\\S+:\\\\S+$\"\n      >\n        ${this.value || this.placeholder\n          ? html`\n              <ha-icon .icon=${this.value || this.placeholder} slot=\"suffix\">\n              </ha-icon>\n            `\n          : \"\"}\n      </paper-input>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    this.value = ev.detail.value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: ev.detail.value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  static get styles() {\n    return css`\n      ha-icon {\n        position: relative;\n        bottom: 4px;\n      }\n    `;\n  }\n}\n","// https://gist.github.com/hagemann/382adfc57adbd5af078dc93feef01fe1\nexport const slugify = (value: string) => {\n  const a =\n    \"àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;\";\n  const b =\n    \"aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------\";\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\n\n  return value\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\n    .replace(p, (c) => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, \"-and-\") // Replace & with 'and'\n    .replace(/[^\\w-]+/g, \"\") // Remove all non-word characters\n    .replace(/--+/g, \"-\") // Replace multiple - with single -\n    .replace(/^-+/, \"\") // Trim - from start of text\n    .replace(/-+$/, \"\"); // Trim - from end of text\n};\n","import \"@material/mwc-button/mwc-button\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { createCloseHeading } from \"../../../../components/ha-dialog\";\nimport \"../../../../components/ha-icon-input\";\nimport { HaSwitch } from \"../../../../components/ha-switch\";\nimport { slugify } from \"../../../../common/string/slugify\";\nimport {\n  LovelaceDashboard,\n  LovelaceDashboardCreateParams,\n  LovelaceDashboardMutableParams,\n} from \"../../../../data/lovelace\";\nimport { DEFAULT_PANEL, setDefaultPanel } from \"../../../../data/panel\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceDashboardDetailsDialogParams } from \"./show-dialog-lovelace-dashboard-detail\";\n\n@customElement(\"dialog-lovelace-dashboard-detail\")\nexport class DialogLovelaceDashboardDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _params?: LovelaceDashboardDetailsDialogParams;\n\n  @property() private _urlPath!: LovelaceDashboard[\"url_path\"];\n\n  @property() private _showInSidebar!: boolean;\n\n  @property() private _icon!: string;\n\n  @property() private _title!: string;\n\n  @property() private _requireAdmin!: LovelaceDashboard[\"require_admin\"];\n\n  @property() private _error?: string;\n\n  @property() private _submitting = false;\n\n  public async showDialog(\n    params: LovelaceDashboardDetailsDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    this._urlPath = this._params.urlPath || \"\";\n    if (this._params.dashboard) {\n      this._showInSidebar = !!this._params.dashboard.show_in_sidebar;\n      this._icon = this._params.dashboard.icon || \"\";\n      this._title = this._params.dashboard.title || \"\";\n      this._requireAdmin = this._params.dashboard.require_admin || false;\n    } else {\n      this._showInSidebar = true;\n      this._icon = \"\";\n      this._title = \"\";\n      this._requireAdmin = false;\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const defaultPanelUrlPath = this.hass.defaultPanel;\n    const urlInvalid =\n      this._params.urlPath !== \"lovelace\" &&\n      !/^[a-zA-Z0-9_-]+-[a-zA-Z0-9_-]+$/.test(this._urlPath);\n    const titleInvalid = !this._title.trim();\n    return html`\n      <ha-dialog\n        open\n        @closing=\"${this._close}\"\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this._params.urlPath\n            ? this._title ||\n                this.hass.localize(\n                  \"ui.panel.config.lovelace.dashboards.detail.edit_dashboard\"\n                )\n            : this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.new_dashboard\"\n              )\n        )}\n      >\n        <div>\n          ${this._params.dashboard && !this._params.dashboard.id\n            ? this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.cant_edit_yaml\"\n              )\n            : this._params.urlPath === \"lovelace\"\n            ? this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.cant_edit_default\"\n              )\n            : html`\n                ${this._error\n                  ? html` <div class=\"error\">${this._error}</div> `\n                  : \"\"}\n                <div class=\"form\">\n                  <paper-input\n                    .value=${this._title}\n                    @value-changed=${this._titleChanged}\n                    .label=${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.title\"\n                    )}\n                    @blur=${this.hass.userData?.showAdvanced\n                      ? this._fillUrlPath\n                      : undefined}\n                    .invalid=${titleInvalid}\n                    .errorMessage=${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.title_required\"\n                    )}\n                    dialogInitialFocus\n                  ></paper-input>\n                  <ha-icon-input\n                    .value=${this._icon}\n                    @value-changed=${this._iconChanged}\n                    .label=${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.icon\"\n                    )}\n                  ></ha-icon-input>\n                  ${!this._params.dashboard && this.hass.userData?.showAdvanced\n                    ? html`\n                        <paper-input\n                          .value=${this._urlPath}\n                          @value-changed=${this._urlChanged}\n                          .label=${this.hass.localize(\n                            \"ui.panel.config.lovelace.dashboards.detail.url\"\n                          )}\n                          .errorMessage=${this.hass.localize(\n                            \"ui.panel.config.lovelace.dashboards.detail.url_error_msg\"\n                          )}\n                          .invalid=${urlInvalid}\n                        ></paper-input>\n                      `\n                    : \"\"}\n                  <ha-switch\n                    .checked=${this._showInSidebar}\n                    @change=${this._showSidebarChanged}\n                    >${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.show_sidebar\"\n                    )}\n                  </ha-switch>\n                  <ha-switch\n                    .checked=${this._requireAdmin}\n                    @change=${this._requireAdminChanged}\n                    >${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.require_admin\"\n                    )}\n                  </ha-switch>\n                </div>\n              `}\n        </div>\n        ${this._params.urlPath\n          ? html`\n              ${this._params.dashboard?.id\n                ? html`\n                    <mwc-button\n                      slot=\"secondaryAction\"\n                      class=\"warning\"\n                      @click=${this._deleteDashboard}\n                      .disabled=${this._submitting}\n                    >\n                      ${this.hass.localize(\n                        \"ui.panel.config.lovelace.dashboards.detail.delete\"\n                      )}\n                    </mwc-button>\n                  `\n                : \"\"}\n              <mwc-button\n                slot=\"secondaryAction\"\n                @click=${this._toggleDefault}\n                .disabled=${this._params.urlPath === \"lovelace\" &&\n                defaultPanelUrlPath === \"lovelace\"}\n              >\n                ${this._params.urlPath === defaultPanelUrlPath\n                  ? this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.remove_default\"\n                    )\n                  : this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.set_default\"\n                    )}\n              </mwc-button>\n            `\n          : \"\"}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=\"${this._updateDashboard}\"\n          .disabled=${urlInvalid || titleInvalid || this._submitting}\n        >\n          ${this._params.urlPath\n            ? this._params.dashboard?.id\n              ? this.hass.localize(\n                  \"ui.panel.config.lovelace.dashboards.detail.update\"\n                )\n              : this.hass.localize(\"ui.common.close\")\n            : this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.create\"\n              )}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _urlChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._urlPath = ev.detail.value;\n  }\n\n  private _iconChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._icon = ev.detail.value;\n  }\n\n  private _titleChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._title = ev.detail.value;\n    if (!this.hass.userData?.showAdvanced) {\n      this._fillUrlPath();\n    }\n  }\n\n  private _fillUrlPath() {\n    if ((this.hass.userData?.showAdvanced && this._urlPath) || !this._title) {\n      return;\n    }\n\n    const slugifyTitle = slugify(this._title);\n    this._urlPath = slugifyTitle.includes(\"-\")\n      ? slugifyTitle\n      : `lovelace-${slugifyTitle}`;\n  }\n\n  private _showSidebarChanged(ev: Event) {\n    this._showInSidebar = (ev.target as HaSwitch).checked;\n  }\n\n  private _requireAdminChanged(ev: Event) {\n    this._requireAdmin = (ev.target as HaSwitch).checked;\n  }\n\n  private _toggleDefault() {\n    const urlPath = this._params?.urlPath;\n    if (!urlPath) {\n      return;\n    }\n    setDefaultPanel(\n      this,\n      urlPath === this.hass.defaultPanel ? DEFAULT_PANEL : urlPath\n    );\n  }\n\n  private async _updateDashboard() {\n    if (this._params?.urlPath && !this._params.dashboard?.id) {\n      this._close();\n    }\n    this._submitting = true;\n    try {\n      const values: Partial<LovelaceDashboardMutableParams> = {\n        require_admin: this._requireAdmin,\n        show_in_sidebar: this._showInSidebar,\n        icon: this._icon || undefined,\n        title: this._title,\n      };\n      if (this._params!.dashboard) {\n        await this._params!.updateDashboard(values);\n      } else {\n        (values as LovelaceDashboardCreateParams).url_path = this._urlPath.trim();\n        (values as LovelaceDashboardCreateParams).mode = \"storage\";\n        await this._params!.createDashboard(\n          values as LovelaceDashboardCreateParams\n        );\n      }\n      this._close();\n    } catch (err) {\n      this._error = err?.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteDashboard() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeDashboard()) {\n        this._close();\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        ha-switch {\n          padding: 16px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-lovelace-dashboard-detail\": DialogLovelaceDashboardDetail;\n  }\n}\n"],"sourceRoot":""}