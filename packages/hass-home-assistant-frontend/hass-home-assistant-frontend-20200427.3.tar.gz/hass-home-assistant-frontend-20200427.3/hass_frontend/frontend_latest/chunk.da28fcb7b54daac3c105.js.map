{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-alarm-panel-card-editor.ts"],"names":["HaEntityPicker","_LitElement","[object Object]","args","super","_initialize","this","property","type","Boolean","attribute","Array","query","memoizeOne","_opened","hass","includeDomains","excludeDomains","entityFilter","includeDeviceClasses","states","entityIds","Object","keys","filter","eid","includes","computeDomain","sort","map","key","stateObj","entity_id","value","attributes","device_class","changedProps","has","_getStates","_comboBox","items","html","_value","allowCustomEntity","root","_owner","model","firstElementChild","innerHTML","querySelector","item","textContent","computeStateName","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","_clearValue","ev","stopPropagation","_setValue","detail","newValue","setTimeout","fireEvent","css","LitElement","customElements","define","__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","icon","configElementStyle","_decorate","customElement","F","kind","decorators","_changed","themes","theme","static","target","selected","cardConfigStruct","entity","name","HuiAlarmPanelCardEditor","config","_config","_entity","_name","_states","state","index","_stateRemoved","_stateAdded","_theme","Number","newStates","splice","assign","indexOf","push","configValue"],"mappings":"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","file":"chunk.da28fcb7b54daac3c105.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { HomeAssistant } from \"../../types\";\nimport \"./state-badge\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ type: Boolean }) public disabled?: boolean;\n\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n\n  @property() public hass?: HomeAssistant;\n\n  @property() public label?: string;\n\n  @property() public value?: string;\n\n  /**\n   * Show entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n\n  /**\n   * Show only entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n\n  @property({ type: Boolean }) private _opened = false;\n\n  @query(\"vaadin-combo-box-light\") private _comboBox!: HTMLElement;\n\n  private _getStates = memoizeOne(\n    (\n      _opened: boolean,\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (includeDeviceClasses) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value ||\n            (stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class))\n        );\n      }\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    if (changedProps.has(\"_opened\") && this._opened) {\n      const states = this._getStates(\n        this._opened,\n        this.hass,\n        this.includeDomains,\n        this.excludeDomains,\n        this.entityFilter,\n        this.includeDeviceClasses\n      );\n      (this._comboBox as any).items = states;\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined\n            ? this.hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  @click=${this._clearValue}\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n\n          <paper-icon-button\n            aria-label=${this.hass.localize(\n              \"ui.components.entity.entity-picker.show_entities\"\n            )}\n            slot=\"suffix\"\n            class=\"toggle-button\"\n            .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n          >\n            Toggle\n          </paper-icon-button>\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private _clearValue(ev: Event) {\n    ev.stopPropagation();\n    this._setValue(\"\");\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 0px 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n        `${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.generic.theme\"\n        )} (${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.config.optional\"\n        )})`}\n        dynamic-align\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=${this.value}\n          attr-for-selected=\"theme\"\n          @iron-select=${this._changed}\n        >\n          <paper-item theme=\"remove\"\n            >${this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.generic.no_theme\"\n            )}</paper-item\n          >\n          ${Object.keys(this.hass!.themes.themes)\n            .sort()\n            .map((theme) => {\n              return html` <paper-item theme=${theme}>${theme}</paper-item> `;\n            })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.selected === \"\") {\n      return;\n    }\n    this.value = ev.target.selected === \"remove\" ? \"\" : ev.target.selected;\n    fireEvent(this, \"value-changed\", { value: this.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/ha-icon\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { AlarmPanelCardConfig } from \"../../cards/types\";\nimport { struct } from \"../../common/structs/struct\";\nimport \"../../components/hui-theme-select-editor\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { EditorTarget, EntitiesEditorEvent } from \"../types\";\nimport { configElementStyle } from \"./config-elements-style\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string?\",\n  name: \"string?\",\n  states: \"array?\",\n  theme: \"string?\",\n});\n\nconst includeDomains = [\"alarm_control_panel\"];\n\n@customElement(\"hui-alarm-panel-card-editor\")\nexport class HuiAlarmPanelCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: AlarmPanelCardConfig;\n\n  public setConfig(config: AlarmPanelCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _states(): string[] {\n    return this._config!.states || [];\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"\";\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    const states = [\"arm_home\", \"arm_away\", \"arm_night\", \"arm_custom_bypass\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .hass=${this.hass}\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          .includeDomains=${includeDomains}\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.name\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._name}\"\n          .configValue=\"${\"name\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <span>Used States</span> ${this._states.map((state, index) => {\n          return html`\n            <div class=\"states\">\n              <paper-item>${state}</paper-item>\n              <ha-icon\n                class=\"deleteState\"\n                .value=\"${index}\"\n                icon=\"hass:close\"\n                @click=${this._stateRemoved}\n              ></ha-icon>\n            </div>\n          `;\n        })}\n        <paper-dropdown-menu\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.alarm-panel.available_states\"\n          )}\"\n          @value-changed=\"${this._stateAdded}\"\n        >\n          <paper-listbox slot=\"dropdown-content\">\n            ${states.map((state) => {\n              return html` <paper-item>${state}</paper-item> `;\n            })}\n          </paper-listbox>\n        </paper-dropdown-menu>\n        <hui-theme-select-editor\n          .hass=${this.hass}\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .states {\n        display: flex;\n        flex-direction: row;\n      }\n      .deleteState {\n        visibility: hidden;\n      }\n      .states:hover > .deleteState {\n        visibility: visible;\n      }\n      ha-icon {\n        padding-top: 12px;\n      }\n    `;\n  }\n\n  private _stateRemoved(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this._states || !this.hass) {\n      return;\n    }\n\n    const target = ev.target! as EditorTarget;\n    const index = Number(target.value);\n    if (index > -1) {\n      const newStates = [...this._states];\n      newStates.splice(index, 1);\n      fireEvent(this, \"config-changed\", {\n        config: {\n          ...this._config,\n          states: newStates,\n        },\n      });\n    }\n  }\n\n  private _stateAdded(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (!target.value || this._states.indexOf(target.value) !== -1) {\n      return;\n    }\n    const newStates = [...this._states];\n    newStates.push(target.value);\n    target.value = \"\";\n    fireEvent(this, \"config-changed\", {\n      config: {\n        ...this._config,\n        states: newStates,\n      },\n    });\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-alarm-panel-card-editor\": HuiAlarmPanelCardEditor;\n  }\n}\n"],"sourceRoot":""}