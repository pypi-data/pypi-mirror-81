{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-listbox/paper-listbox.js","webpack:///./node_modules/@polymer/iron-dropdown/iron-dropdown.js","webpack:///./node_modules/@polymer/neon-animation/neon-animation-behavior.js","webpack:///./node_modules/@polymer/neon-animation/animations/fade-in-animation.js","webpack:///./node_modules/@polymer/neon-animation/animations/fade-out-animation.js","webpack:///./node_modules/@polymer/paper-menu-button/paper-menu-button-animations.js","webpack:///./node_modules/@polymer/paper-menu-button/paper-menu-button.js"],"names":["__webpack_require__","_polymer_iron_menu_behavior_iron_menu_behavior_js__WEBPACK_IMPORTED_MODULE_2__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","Polymer","_template","html","is","behaviors","IronMenuBehavior","hostAttributes","role","IronControlState","IronA11yKeysBehavior","IronOverlayBehavior","NeonAnimationRunnerBehavior","properties","horizontalAlign","type","String","value","reflectToAttribute","verticalAlign","openAnimationConfig","Object","closeAnimationConfig","focusTarget","noAnimations","Boolean","allowOutsideScroll","observer","listeners","neon-animation-finish","observers","containedElement","nodes","dom","this","$","content","getDistributedNodes","i","l","length","nodeType","Node","ELEMENT_NODE","ready","scrollAction","_readied","attached","sizingTarget","detached","cancelAnimation","_openedChanged","opened","disabled","cancel","_updateAnimationConfig","IronOverlayBehaviorImpl","apply","arguments","_renderOpened","animationConfig","open","contentWrapper","classList","add","playAnimation","_renderClosed","close","_onNeonAnimationFinish","remove","_finishRenderOpened","_finishRenderClosed","animationNode","animations","concat","node","_updateOverlayPosition","isAttached","notifyResize","_allowOutsideScrollChanged","_applyFocus","noAutoFocus","focus","NeonAnimationBehavior","animationTiming","duration","easing","fill","isNeonAnimation","created","document","body","animate","console","warn","timingFromConfig","config","timing","property","setPrefixedProperty","prefix","prefixes","transform","transformOrigin","index","style","complete","configure","_effect","KeyframeEffect","opacity","height","getBoundingClientRect","width","ANIMATION_CUBIC_BEZIER","MAX_ANIMATION_TIME_MS","PaperMenuButton","notify","dynamicAlign","horizontalOffset","Number","verticalOffset","noOverlap","ignoreSelect","closeOnActivate","name","delay","restoreFocusOnClose","_dropdownContent","aria-haspopup","iron-activate","iron-select","contentElement","toggle","dropdown","_onIronSelect","event","_onIronActivate","oldOpened","fire","_disabledChanged","__onIronOverlayCanceled","uiEvent","detail","trigger","path","indexOf","preventDefault","keys","forEach","key"],"mappings":";sFAAAA,EAAA,GAAAA,EAAA,QAAAC,EAAAD,EAAA,KAAAE,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GAoEAI,YAAQ,CACNC,UAAWC;;;;;;;;;;;;;;EAgBXC,GAAI,gBACJC,UAAW,CAACC,KAGZC,eAAgB,CAACC,KAAM,8GC5CzBP,YAAQ,CACNC,UAAWC;;;;;;;;;;;;;;;;;;;EAqBXC,GAAI,gBAEJC,UAAW,CACTI,IACAC,IACAC,IACAC,KAGFC,WAAY,CAMVC,gBAAiB,CAACC,KAAMC,OAAQC,MAAO,OAAQC,oBAAoB,GAOnEC,cAAe,CAACJ,KAAMC,OAAQC,MAAO,MAAOC,oBAAoB,GAQhEE,oBAAqB,CAACL,KAAMM,QAQ5BC,qBAAsB,CAACP,KAAMM,QAM7BE,YAAa,CAACR,KAAMM,QAMpBG,aAAc,CAACT,KAAMU,QAASR,OAAO,GAUrCS,mBACI,CAACX,KAAMU,QAASR,OAAO,EAAOU,SAAU,+BAG9CC,UAAW,CAACC,wBAAyB,0BAErCC,UAAW,CACT,4GAMFC,uBAGE,IADA,IAAIC,EAAQC,YAAIC,KAAKC,EAAEC,SAASC,sBACvBC,EAAI,EAAGC,EAAIP,EAAMQ,OAAQF,EAAIC,EAAGD,IACvC,GAAIN,EAAMM,GAAGG,WAAaC,KAAKC,aAC7B,OAAOX,EAAMM,IAKnBM,MAAO,WAEAV,KAAKW,eACRX,KAAKW,aAAeX,KAAKR,mBAAqB,QAAU,QAE1DQ,KAAKY,UAAW,GAGlBC,SAAU,WACHb,KAAKc,cAAgBd,KAAKc,eAAiBd,OAC9CA,KAAKc,aAAed,KAAKH,kBAAoBG,OAIjDe,SAAU,WACRf,KAAKgB,mBAOPC,eAAgB,WACVjB,KAAKkB,QAAUlB,KAAKmB,SACtBnB,KAAKoB,UAELpB,KAAKgB,kBACLhB,KAAKqB,yBACLC,IAAwBL,eAAeM,MAAMvB,KAAMwB,aAOvDC,cAAe,YACRzB,KAAKV,cAAgBU,KAAK0B,gBAAgBC,MAC7C3B,KAAKC,EAAE2B,eAAeC,UAAUC,IAAI,aACpC9B,KAAK+B,cAAc,SAEnBT,IAAwBG,cAAcF,MAAMvB,KAAMwB,YAOtDQ,cAAe,YACRhC,KAAKV,cAAgBU,KAAK0B,gBAAgBO,OAC7CjC,KAAKC,EAAE2B,eAAeC,UAAUC,IAAI,aACpC9B,KAAK+B,cAAc,UAEnBT,IAAwBU,cAAcT,MAAMvB,KAAMwB,YAUtDU,uBAAwB,WACtBlC,KAAKC,EAAE2B,eAAeC,UAAUM,OAAO,aACnCnC,KAAKkB,OACPlB,KAAKoC,sBAELpC,KAAKqC,uBAQThB,uBAAwB,WAKtB,IAHA,IAAIiB,EAAgBtC,KAAKH,iBACrB0C,EAAa,GAAGC,OAAOxC,KAAKd,qBAAuB,IACjCsD,OAAOxC,KAAKZ,sBAAwB,IACjDgB,EAAI,EAAGA,EAAImC,EAAWjC,OAAQF,IACrCmC,EAAWnC,GAAGqC,KAAOH,EAEvBtC,KAAK0B,gBAAkB,CACrBC,KAAM3B,KAAKd,oBACX+C,MAAOjC,KAAKZ,uBAQhBsD,uBAAwB,WAClB1C,KAAK2C,YAGP3C,KAAK4C,gBAQTC,2BAA4B,SAASrD,GAE9BQ,KAAKY,WAGLpB,EAEOQ,KAAKW,cAAsC,SAAtBX,KAAKW,eACpCX,KAAKW,aAAe,SAFpBX,KAAKW,aAAe,SASxBmC,YAAa,WACX,IAAIzD,EAAcW,KAAKX,aAAeW,KAAKH,iBACvCR,GAAeW,KAAKkB,SAAWlB,KAAK+C,YACtC1D,EAAY2D,QAEZ1B,IAAwBwB,YAAYvB,MAAMvB,KAAMwB,cCnQ/C,MAAMyB,EAAwB,CAEnCtE,WAAY,CAKVuE,gBAAiB,CACfrE,KAAMM,OACNJ,MAAO,WACL,MAAO,CACLoE,SAAU,IAAKC,OAAQ,+BAAgCC,KAAM,WAUrEC,iBAAiB,EAQjBC,QAAS,WACFC,SAASC,KAAKC,SACjBC,QAAQC,KACJ,kGASRC,iBAAkB,SAASC,GACzB,GAAIA,EAAOC,OACT,IAAK,IAAIC,KAAYF,EAAOC,OAC1B/D,KAAKkD,gBAAgBc,GAAYF,EAAOC,OAAOC,GAGnD,OAAOhE,KAAKkD,iBAOde,oBAAqB,SAASxB,EAAMuB,EAAUjF,GAM5C,IALA,IAKSmF,EADLC,EAJM,CACRC,UAAa,CAAC,mBACdC,gBAAmB,CAAC,qBAAsB,0BAEzBL,GACFM,EAAQ,EAAGJ,EAASC,EAASG,GAAQA,IACpD7B,EAAK8B,MAAML,GAAUnF,EAEvB0D,EAAK8B,MAAMP,GAAYjF,GAMzByF,SAAU,SAASV,MC3DrB/F,YAAQ,CAENG,GAAI,oBAEJC,UAAW,CAAC8E,GAEZwB,UAAW,SAASX,GAClB,IAAIrB,EAAOqB,EAAOrB,KAKlB,OAJAzC,KAAK0E,QAAU,IAAIC,eACflC,EACA,CAAC,CAACmC,QAAW,KAAM,CAACA,QAAW,MAC/B5E,KAAK6D,iBAAiBC,IACnB9D,KAAK0E,WCZhB3G,YAAQ,CAENG,GAAI,qBAEJC,UAAW,CAAC8E,GAEZwB,UAAW,SAASX,GAClB,IAAIrB,EAAOqB,EAAOrB,KAQlB,OAPAzC,KAAK0E,QAAU,IAAIC,eACflC,EACA,CACE,CAACmC,QAAW,KACZ,CAACA,QAAW,MAEd5E,KAAK6D,iBAAiBC,IACnB9D,KAAK0E,uBC3BhB3G,YAAQ,CACNG,GAAI,mCAEJC,UAAW,CAAC8E,GAEZwB,UAAW,SAASX,GAClB,IAAIrB,EAAOqB,EAAOrB,KAEdoC,EADOpC,EAAKqC,wBACED,OAOlB,OALA7E,KAAK0E,QAAU,IAAIC,eACflC,EACA,CAAC,CAACoC,OAASA,EAAS,EAAK,MAAO,CAACA,OAAQA,EAAS,OAClD7E,KAAK6D,iBAAiBC,IAEnB9D,KAAK0E,WAIhB3G,YAAQ,CACNG,GAAI,kCAEJC,UAAW,CAAC8E,GAEZwB,UAAW,SAASX,GAClB,IAAIrB,EAAOqB,EAAOrB,KAEdsC,EADOtC,EAAKqC,wBACCC,MAOjB,OALA/E,KAAK0E,QAAU,IAAIC,eACflC,EACA,CAAC,CAACsC,MAAQA,EAAQ,EAAK,MAAO,CAACA,MAAOA,EAAQ,OAC9C/E,KAAK6D,iBAAiBC,IAEnB9D,KAAK0E,WAIhB3G,YAAQ,CACNG,GAAI,oCAEJC,UAAW,CAAC8E,GAEZwB,UAAW,SAASX,GAClB,IAAIrB,EAAOqB,EAAOrB,KAEdsC,EADOtC,EAAKqC,wBACCC,MAOjB,OALA/E,KAAK0E,QAAU,IAAIC,eACflC,EACA,CAAC,CAACsC,MAAOA,EAAQ,MAAO,CAACA,MAAOA,EAASA,EAAQ,GAAM,OACvD/E,KAAK6D,iBAAiBC,IAEnB9D,KAAK0E,WAIhB3G,YAAQ,CACNG,GAAI,qCAEJC,UAAW,CAAC8E,GAEZwB,UAAW,SAASX,GAClB,IAAIrB,EAAOqB,EAAOrB,KAEdoC,EADOpC,EAAKqC,wBACED,OAYlB,OAVA7E,KAAKiE,oBAAoBxB,EAAM,kBAAmB,OAElDzC,KAAK0E,QAAU,IAAIC,eACflC,EACA,CACE,CAACoC,OAAQA,EAAS,KAAMT,UAAW,iBACnC,CAACS,OAAQA,EAAS,EAAI,KAAMT,UAAW,sBAEzCpE,KAAK6D,iBAAiBC,IAEnB9D,KAAK0E,WCnEhB,IAAIZ,EAAS,CACXkB,uBAAwB,4BACxBC,sBAAuB,KA6ClB,MAAMC,EAAkBnH,YAAQ,CACrCC,UAAWC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4DXC,GAAI,oBAcJC,UAAW,CAACK,IAAsBD,KAElCI,WAAY,CAIVuC,OACI,CAACrC,KAAMU,QAASR,OAAO,EAAOoG,QAAQ,EAAM1F,SAAU,kBAM1Db,gBAAiB,CAACC,KAAMC,OAAQC,MAAO,OAAQC,oBAAoB,GAMnEC,cAAe,CAACJ,KAAMC,OAAQC,MAAO,MAAOC,oBAAoB,GAQhEoG,aAAc,CAACvG,KAAMU,SAOrB8F,iBAAkB,CAACxG,KAAMyG,OAAQvG,MAAO,EAAGoG,QAAQ,GAOnDI,eAAgB,CAAC1G,KAAMyG,OAAQvG,MAAO,EAAGoG,QAAQ,GAMjDK,UAAW,CAAC3G,KAAMU,SAMlBD,aAAc,CAACT,KAAMU,QAASR,OAAO,GAMrC0G,aAAc,CAAC5G,KAAMU,QAASR,OAAO,GAMrC2G,gBAAiB,CAAC7G,KAAMU,QAASR,OAAO,GAMxCG,oBAAqB,CACnBL,KAAMM,OACNJ,MAAO,WACL,MAAO,CACL,CAAC4G,KAAM,oBAAqB5B,OAAQ,CAAC6B,MAAO,IAAKzC,SAAU,MAC3D,CACEwC,KAAM,kCACN5B,OAAQ,CACN6B,MAAO,IACPzC,SAAU,IACVC,OAAQU,EAAOkB,yBAGnB,CACEW,KAAM,mCACN5B,OAAQ,CACN6B,MAAO,IACPzC,SAAU,IACVC,OAAQU,EAAOkB,4BAWzB5F,qBAAsB,CACpBP,KAAMM,OACNJ,MAAO,WACL,MAAO,CACL,CAAC4G,KAAM,qBAAsB5B,OAAQ,CAACZ,SAAU,MAChD,CACEwC,KAAM,oCACN5B,OAAQ,CACN6B,MAAO,IACPzC,SAAU,GACVC,OAAQU,EAAOkB,yBAGnB,CACEW,KAAM,qCACN5B,OAAQ,CAACZ,SAAU,IAAKC,OAAQ,eAYxC5D,mBAAoB,CAACX,KAAMU,QAASR,OAAO,GAK3C8G,oBAAqB,CAAChH,KAAMU,QAASR,OAAO,GAM5C+G,iBAAkB,CAACjH,KAAMM,SAG3Bd,eAAgB,CAACC,KAAM,QAASyH,gBAAiB,QAEjDrG,UACI,CAACsG,gBAAiB,kBAAmBC,cAAe,iBAKxDC,qBAGE,IADA,IAAIpG,EAAQC,YAAIC,KAAKC,EAAEC,SAASC,sBACvBC,EAAI,EAAGC,EAAIP,EAAMQ,OAAQF,EAAIC,EAAGD,IACvC,GAAIN,EAAMM,GAAGG,WAAaC,KAAKC,aAC7B,OAAOX,EAAMM,IAQnB+F,OAAQ,WACFnG,KAAKkB,OACPlB,KAAKiC,QAELjC,KAAK2B,QAQTA,KAAM,WACA3B,KAAKmB,UAITnB,KAAKC,EAAEmG,SAASzE,QAMlBM,MAAO,WACLjC,KAAKC,EAAEmG,SAASnE,SAUlBoE,cAAe,SAASC,GACjBtG,KAAKyF,cACRzF,KAAKiC,SAUTsE,gBAAiB,SAASD,GACpBtG,KAAK0F,iBACP1F,KAAKiC,SAWThB,eAAgB,SAASC,EAAQsF,GAC3BtF,GAMFlB,KAAK8F,iBAAmB9F,KAAKkG,eAC7BlG,KAAKyG,KAAK,wBACY,MAAbD,GACTxG,KAAKyG,KAAK,yBAUdC,iBAAkB,SAASvF,GACzB5C,IAAiBmI,iBAAiBnF,MAAMvB,KAAMwB,WAC1CL,GAAYnB,KAAKkB,QACnBlB,KAAKiC,SAIT0E,wBAAyB,SAASL,GAChC,IAAIM,EAAUN,EAAMO,OAChBC,EAAU9G,KAAKC,EAAE6G,QACV/G,YAAI6G,GAASG,KAEfC,QAAQF,IAAY,GAC3BR,EAAMW,oBAKZ9H,OAAO+H,KAAKpD,GAAQqD,QAAQ,SAASC,GACnClC,EAAgBkC,GAAOtD,EAAOsD","file":"chunk.ffa5b22d1555b4ddb1b4.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/default-theme.js';\n\nimport {IronMenuBehavior} from '@polymer/iron-menu-behavior/iron-menu-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design:\n[Menus](https://www.google.com/design/spec/components/menus.html)\n\n`<paper-listbox>` implements an accessible listbox control with Material Design\nstyling. The focused item is highlighted, and the selected item has bolded text.\n\n    <paper-listbox>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\nAn initial selection can be specified with the `selected` attribute.\n\n    <paper-listbox selected=\"0\">\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\nMake a multi-select listbox with the `multi` attribute. Items in a multi-select\nlistbox can be deselected, and multiple item can be selected.\n\n    <paper-listbox multi>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-listbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-listbox-background-color`   | Menu background color |\n`--primary-background-color`\n`--paper-listbox-color`              | Menu foreground color |\n`--primary-text-color`\n`--paper-listbox`                    | Mixin applied to the listbox | `{}`\n\n### Accessibility\n\n`<paper-listbox>` has `role=\"listbox\"` by default. A multi-select listbox will\nalso have `aria-multiselectable` set. It implements key bindings to navigate\nthrough the listbox with the up and down arrow keys, esc to exit the listbox,\nand enter to activate a listbox item. Typing the first letter of a listbox item\nwill also focus it.\n\n@group Paper Elements\n@element paper-listbox\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        padding: 8px 0;\n\n        background: var(--paper-listbox-background-color, var(--primary-background-color));\n        color: var(--paper-listbox-color, var(--primary-text-color));\n\n        @apply --paper-listbox;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-listbox',\n  behaviors: [IronMenuBehavior],\n\n  /** @private */\n  hostAttributes: {role: 'listbox'}\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronA11yKeysBehavior} from '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\nimport {IronOverlayBehavior, IronOverlayBehaviorImpl} from '@polymer/iron-overlay-behavior/iron-overlay-behavior.js';\nimport {NeonAnimationRunnerBehavior} from '@polymer/neon-animation/neon-animation-runner-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n`<iron-dropdown>` is a generalized element that is useful when you have\nhidden content (`dropdown-content`) that is revealed due to some change in\nstate that should cause it to do so.\n\nNote that this is a low-level element intended to be used as part of other\ncomposite elements that cause dropdowns to be revealed.\n\nExamples of elements that might be implemented using an `iron-dropdown`\ninclude comboboxes, menubuttons, selects. The list goes on.\n\nThe `<iron-dropdown>` element exposes attributes that allow the position\nof the `dropdown-content` relative to the `dropdown-trigger` to be\nconfigured.\n\n    <iron-dropdown horizontal-align=\"right\" vertical-align=\"top\">\n      <div slot=\"dropdown-content\">Hello!</div>\n    </iron-dropdown>\n\nIn the above example, the `<div>` assigned to the `dropdown-content` slot will\nbe hidden until the dropdown element has `opened` set to true, or when the\n`open` method is called on the element.\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        position: fixed;\n      }\n\n      #contentWrapper ::slotted(*) {\n        overflow: auto;\n      }\n\n      #contentWrapper.animating ::slotted(*) {\n        overflow: hidden;\n        pointer-events: none;\n      }\n    </style>\n\n    <div id=\"contentWrapper\">\n      <slot id=\"content\" name=\"dropdown-content\"></slot>\n    </div>\n`,\n\n  is: 'iron-dropdown',\n\n  behaviors: [\n    IronControlState,\n    IronA11yKeysBehavior,\n    IronOverlayBehavior,\n    NeonAnimationRunnerBehavior\n  ],\n\n  properties: {\n    /**\n     * The orientation against which to align the dropdown content\n     * horizontally relative to the dropdown trigger.\n     * Overridden from `Polymer.IronFitBehavior`.\n     */\n    horizontalAlign: {type: String, value: 'left', reflectToAttribute: true},\n\n    /**\n     * The orientation against which to align the dropdown content\n     * vertically relative to the dropdown trigger.\n     * Overridden from `Polymer.IronFitBehavior`.\n     */\n    verticalAlign: {type: String, value: 'top', reflectToAttribute: true},\n\n    /**\n     * An animation config. If provided, this will be used to animate the\n     * opening of the dropdown. Pass an Array for multiple animations.\n     * See `neon-animation` documentation for more animation configuration\n     * details.\n     */\n    openAnimationConfig: {type: Object},\n\n    /**\n     * An animation config. If provided, this will be used to animate the\n     * closing of the dropdown. Pass an Array for multiple animations.\n     * See `neon-animation` documentation for more animation configuration\n     * details.\n     */\n    closeAnimationConfig: {type: Object},\n\n    /**\n     * If provided, this will be the element that will be focused when\n     * the dropdown opens.\n     */\n    focusTarget: {type: Object},\n\n    /**\n     * Set to true to disable animations when opening and closing the\n     * dropdown.\n     */\n    noAnimations: {type: Boolean, value: false},\n\n    /**\n     * By default, the dropdown will constrain scrolling on the page\n     * to itself when opened.\n     * Set to true in order to prevent scroll from being constrained\n     * to the dropdown when it opens.\n     * This property is a shortcut to set `scrollAction` to lock or refit.\n     * Prefer directly setting the `scrollAction` property.\n     */\n    allowOutsideScroll:\n        {type: Boolean, value: false, observer: '_allowOutsideScrollChanged'}\n  },\n\n  listeners: {'neon-animation-finish': '_onNeonAnimationFinish'},\n\n  observers: [\n    '_updateOverlayPosition(positionTarget, verticalAlign, horizontalAlign, verticalOffset, horizontalOffset)'\n  ],\n\n  /**\n   * The element that is contained by the dropdown, if any.\n   */\n  get containedElement() {\n    // Polymer 2.x returns slot.assignedNodes which can contain text nodes.\n    var nodes = dom(this.$.content).getDistributedNodes();\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      if (nodes[i].nodeType === Node.ELEMENT_NODE) {\n        return nodes[i];\n      }\n    }\n  },\n\n  ready: function() {\n    // Ensure scrollAction is set.\n    if (!this.scrollAction) {\n      this.scrollAction = this.allowOutsideScroll ? 'refit' : 'lock';\n    }\n    this._readied = true;\n  },\n\n  attached: function() {\n    if (!this.sizingTarget || this.sizingTarget === this) {\n      this.sizingTarget = this.containedElement || this;\n    }\n  },\n\n  detached: function() {\n    this.cancelAnimation();\n  },\n\n  /**\n   * Called when the value of `opened` changes.\n   * Overridden from `IronOverlayBehavior`\n   */\n  _openedChanged: function() {\n    if (this.opened && this.disabled) {\n      this.cancel();\n    } else {\n      this.cancelAnimation();\n      this._updateAnimationConfig();\n      IronOverlayBehaviorImpl._openedChanged.apply(this, arguments);\n    }\n  },\n\n  /**\n   * Overridden from `IronOverlayBehavior`.\n   */\n  _renderOpened: function() {\n    if (!this.noAnimations && this.animationConfig.open) {\n      this.$.contentWrapper.classList.add('animating');\n      this.playAnimation('open');\n    } else {\n      IronOverlayBehaviorImpl._renderOpened.apply(this, arguments);\n    }\n  },\n\n  /**\n   * Overridden from `IronOverlayBehavior`.\n   */\n  _renderClosed: function() {\n    if (!this.noAnimations && this.animationConfig.close) {\n      this.$.contentWrapper.classList.add('animating');\n      this.playAnimation('close');\n    } else {\n      IronOverlayBehaviorImpl._renderClosed.apply(this, arguments);\n    }\n  },\n\n  /**\n   * Called when animation finishes on the dropdown (when opening or\n   * closing). Responsible for \"completing\" the process of opening or\n   * closing the dropdown by positioning it or setting its display to\n   * none.\n   */\n  _onNeonAnimationFinish: function() {\n    this.$.contentWrapper.classList.remove('animating');\n    if (this.opened) {\n      this._finishRenderOpened();\n    } else {\n      this._finishRenderClosed();\n    }\n  },\n\n  /**\n   * Constructs the final animation config from different properties used\n   * to configure specific parts of the opening and closing animations.\n   */\n  _updateAnimationConfig: function() {\n    // Update the animation node to be the containedElement.\n    var animationNode = this.containedElement;\n    var animations = [].concat(this.openAnimationConfig || [])\n                         .concat(this.closeAnimationConfig || []);\n    for (var i = 0; i < animations.length; i++) {\n      animations[i].node = animationNode;\n    }\n    this.animationConfig = {\n      open: this.openAnimationConfig,\n      close: this.closeAnimationConfig\n    };\n  },\n\n  /**\n   * Updates the overlay position based on configured horizontal\n   * and vertical alignment.\n   */\n  _updateOverlayPosition: function() {\n    if (this.isAttached) {\n      // This triggers iron-resize, and iron-overlay-behavior will call refit if\n      // needed.\n      this.notifyResize();\n    }\n  },\n\n  /**\n   * Sets scrollAction according to the value of allowOutsideScroll.\n   * Prefer setting directly scrollAction.\n   */\n  _allowOutsideScrollChanged: function(allowOutsideScroll) {\n    // Wait until initial values are all set.\n    if (!this._readied) {\n      return;\n    }\n    if (!allowOutsideScroll) {\n      this.scrollAction = 'lock';\n    } else if (!this.scrollAction || this.scrollAction === 'lock') {\n      this.scrollAction = 'refit';\n    }\n  },\n\n  /**\n   * Apply focus to focusTarget or containedElement\n   */\n  _applyFocus: function() {\n    var focusTarget = this.focusTarget || this.containedElement;\n    if (focusTarget && this.opened && !this.noAutoFocus) {\n      focusTarget.focus();\n    } else {\n      IronOverlayBehaviorImpl._applyFocus.apply(this, arguments);\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\n/**\n * Use `NeonAnimationBehavior` to implement an animation.\n * @polymerBehavior\n */\nexport const NeonAnimationBehavior = {\n\n  properties: {\n\n    /**\n     * Defines the animation timing.\n     */\n    animationTiming: {\n      type: Object,\n      value: function() {\n        return {\n          duration: 500, easing: 'cubic-bezier(0.4, 0, 0.2, 1)', fill: 'both'\n        }\n      }\n    }\n\n  },\n\n  /**\n   * Can be used to determine that elements implement this behavior.\n   */\n  isNeonAnimation: true,\n\n  /**\n   * Do any animation configuration here.\n   */\n  // configure: function(config) {\n  // },\n\n  created: function() {\n    if (!document.body.animate) {\n      console.warn(\n          'No web animations detected. This element will not' +\n          ' function without a web animations polyfill.');\n    }\n  },\n\n  /**\n   * Returns the animation timing by mixing in properties from `config` to the\n   * defaults defined by the animation.\n   */\n  timingFromConfig: function(config) {\n    if (config.timing) {\n      for (var property in config.timing) {\n        this.animationTiming[property] = config.timing[property];\n      }\n    }\n    return this.animationTiming;\n  },\n\n  /**\n   * Sets `transform` and `transformOrigin` properties along with the prefixed\n   * versions.\n   */\n  setPrefixedProperty: function(node, property, value) {\n    var map = {\n      'transform': ['webkitTransform'],\n      'transformOrigin': ['mozTransformOrigin', 'webkitTransformOrigin']\n    };\n    var prefixes = map[property];\n    for (var prefix, index = 0; prefix = prefixes[index]; index++) {\n      node.style[prefix] = value;\n    }\n    node.style[property] = value;\n  },\n\n  /**\n   * Called when the animation finishes.\n   */\n  complete: function(config) {}\n\n};\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {NeonAnimationBehavior} from '../neon-animation-behavior.js';\n/*\n`<fade-in-animation>` animates the opacity of an element from 0 to 1.\n\nConfiguration:\n```\n{\n  name: 'fade-in-animation',\n  node: <node>\n  timing: <animation-timing>\n}\n```\n*/\nPolymer({\n\n  is: 'fade-in-animation',\n\n  behaviors: [NeonAnimationBehavior],\n\n  configure: function(config) {\n    var node = config.node;\n    this._effect = new KeyframeEffect(\n        node,\n        [{'opacity': '0'}, {'opacity': '1'}],\n        this.timingFromConfig(config));\n    return this._effect;\n  }\n\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {NeonAnimationBehavior} from '../neon-animation-behavior.js';\n/*\n`<fade-out-animation>` animates the opacity of an element from 1 to 0.\n\nConfiguration:\n```\n{\n  name: 'fade-out-animation',\n  node: <node>\n  timing: <animation-timing>\n}\n```\n*/\nPolymer({\n\n  is: 'fade-out-animation',\n\n  behaviors: [NeonAnimationBehavior],\n\n  configure: function(config) {\n    var node = config.node;\n    this._effect = new KeyframeEffect(\n        node,\n        [\n          {'opacity': '1'},\n          {'opacity': '0'},\n        ],\n        this.timingFromConfig(config));\n    return this._effect;\n  }\n\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {NeonAnimationBehavior} from '@polymer/neon-animation/neon-animation-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nPolymer({\n  is: 'paper-menu-grow-height-animation',\n\n  behaviors: [NeonAnimationBehavior],\n\n  configure: function(config) {\n    var node = config.node;\n    var rect = node.getBoundingClientRect();\n    var height = rect.height;\n\n    this._effect = new KeyframeEffect(\n        node,\n        [{height: (height / 2) + 'px'}, {height: height + 'px'}],\n        this.timingFromConfig(config));\n\n    return this._effect;\n  }\n});\n\nPolymer({\n  is: 'paper-menu-grow-width-animation',\n\n  behaviors: [NeonAnimationBehavior],\n\n  configure: function(config) {\n    var node = config.node;\n    var rect = node.getBoundingClientRect();\n    var width = rect.width;\n\n    this._effect = new KeyframeEffect(\n        node,\n        [{width: (width / 2) + 'px'}, {width: width + 'px'}],\n        this.timingFromConfig(config));\n\n    return this._effect;\n  }\n});\n\nPolymer({\n  is: 'paper-menu-shrink-width-animation',\n\n  behaviors: [NeonAnimationBehavior],\n\n  configure: function(config) {\n    var node = config.node;\n    var rect = node.getBoundingClientRect();\n    var width = rect.width;\n\n    this._effect = new KeyframeEffect(\n        node,\n        [{width: width + 'px'}, {width: width - (width / 20) + 'px'}],\n        this.timingFromConfig(config));\n\n    return this._effect;\n  }\n});\n\nPolymer({\n  is: 'paper-menu-shrink-height-animation',\n\n  behaviors: [NeonAnimationBehavior],\n\n  configure: function(config) {\n    var node = config.node;\n    var rect = node.getBoundingClientRect();\n    var height = rect.height;\n\n    this.setPrefixedProperty(node, 'transformOrigin', '0 0');\n\n    this._effect = new KeyframeEffect(\n        node,\n        [\n          {height: height + 'px', transform: 'translateY(0)'},\n          {height: height / 2 + 'px', transform: 'translateY(-20px)'}\n        ],\n        this.timingFromConfig(config));\n\n    return this._effect;\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-dropdown/iron-dropdown.js';\nimport '@polymer/neon-animation/animations/fade-in-animation.js';\nimport '@polymer/neon-animation/animations/fade-out-animation.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/shadow.js';\nimport './paper-menu-button-animations.js';\n\nimport {IronA11yKeysBehavior} from '@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nvar config = {\n  ANIMATION_CUBIC_BEZIER: 'cubic-bezier(.3,.95,.5,1)',\n  MAX_ANIMATION_TIME_MS: 400\n};\n\n/**\nMaterial design: [Dropdown\nbuttons](https://www.google.com/design/spec/components/buttons.html#buttons-dropdown-buttons)\n\n`paper-menu-button` allows one to compose a designated \"trigger\" element with\nanother element that represents \"content\", to create a dropdown menu that\ndisplays the \"content\" when the \"trigger\" is clicked.\n\nThe child element assigned to the `dropdown-trigger` slot will be used as the\n\"trigger\" element. The child element assigned to the `dropdown-content` slot\nwill be used as the \"content\" element.\n\nThe `paper-menu-button` is sensitive to its content's `iron-select` events. If\nthe \"content\" element triggers an `iron-select` event, the `paper-menu-button`\nwill close automatically.\n\nExample:\n\n    <paper-menu-button>\n      <paper-icon-button icon=\"menu\"\nslot=\"dropdown-trigger\"></paper-icon-button> <paper-listbox\nslot=\"dropdown-content\"> <paper-item>Share</paper-item>\n        <paper-item>Settings</paper-item>\n        <paper-item>Help</paper-item>\n      </paper-listbox>\n    </paper-menu-button>\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-menu-button-dropdown-background` | Background color of the paper-menu-button dropdown | `--primary-background-color`\n`--paper-menu-button` | Mixin applied to the paper-menu-button | `{}`\n`--paper-menu-button-disabled` | Mixin applied to the paper-menu-button when disabled | `{}`\n`--paper-menu-button-dropdown` | Mixin applied to the paper-menu-button dropdown | `{}`\n`--paper-menu-button-content` | Mixin applied to the paper-menu-button content | `{}`\n\n@hero hero.svg\n@demo demo/index.html\n*/\nexport const PaperMenuButton = Polymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        padding: 8px;\n        outline: none;\n\n        @apply --paper-menu-button;\n      }\n\n      :host([disabled]) {\n        cursor: auto;\n        color: var(--disabled-text-color);\n\n        @apply --paper-menu-button-disabled;\n      }\n\n      iron-dropdown {\n        @apply --paper-menu-button-dropdown;\n      }\n\n      .dropdown-content {\n        @apply --shadow-elevation-2dp;\n\n        position: relative;\n        border-radius: 2px;\n        background-color: var(--paper-menu-button-dropdown-background, var(--primary-background-color));\n\n        @apply --paper-menu-button-content;\n      }\n\n      :host([vertical-align=\"top\"]) .dropdown-content {\n        margin-bottom: 20px;\n        margin-top: -10px;\n        top: 10px;\n      }\n\n      :host([vertical-align=\"bottom\"]) .dropdown-content {\n        bottom: 10px;\n        margin-bottom: -10px;\n        margin-top: 20px;\n      }\n\n      #trigger {\n        cursor: pointer;\n      }\n    </style>\n\n    <div id=\"trigger\" on-tap=\"toggle\">\n      <slot name=\"dropdown-trigger\"></slot>\n    </div>\n\n    <iron-dropdown id=\"dropdown\" opened=\"{{opened}}\" horizontal-align=\"[[horizontalAlign]]\" vertical-align=\"[[verticalAlign]]\" dynamic-align=\"[[dynamicAlign]]\" horizontal-offset=\"[[horizontalOffset]]\" vertical-offset=\"[[verticalOffset]]\" no-overlap=\"[[noOverlap]]\" open-animation-config=\"[[openAnimationConfig]]\" close-animation-config=\"[[closeAnimationConfig]]\" no-animations=\"[[noAnimations]]\" focus-target=\"[[_dropdownContent]]\" allow-outside-scroll=\"[[allowOutsideScroll]]\" restore-focus-on-close=\"[[restoreFocusOnClose]]\" on-iron-overlay-canceled=\"__onIronOverlayCanceled\">\n      <div slot=\"dropdown-content\" class=\"dropdown-content\">\n        <slot id=\"content\" name=\"dropdown-content\"></slot>\n      </div>\n    </iron-dropdown>\n`,\n\n  is: 'paper-menu-button',\n\n  /**\n   * Fired when the dropdown opens.\n   *\n   * @event paper-dropdown-open\n   */\n\n  /**\n   * Fired when the dropdown closes.\n   *\n   * @event paper-dropdown-close\n   */\n\n  behaviors: [IronA11yKeysBehavior, IronControlState],\n\n  properties: {\n    /**\n     * True if the content is currently displayed.\n     */\n    opened:\n        {type: Boolean, value: false, notify: true, observer: '_openedChanged'},\n\n    /**\n     * The orientation against which to align the menu dropdown\n     * horizontally relative to the dropdown trigger.\n     */\n    horizontalAlign: {type: String, value: 'left', reflectToAttribute: true},\n\n    /**\n     * The orientation against which to align the menu dropdown\n     * vertically relative to the dropdown trigger.\n     */\n    verticalAlign: {type: String, value: 'top', reflectToAttribute: true},\n\n    /**\n     * If true, the `horizontalAlign` and `verticalAlign` properties will\n     * be considered preferences instead of strict requirements when\n     * positioning the dropdown and may be changed if doing so reduces\n     * the area of the dropdown falling outside of `fitInto`.\n     */\n    dynamicAlign: {type: Boolean},\n\n    /**\n     * A pixel value that will be added to the position calculated for the\n     * given `horizontalAlign`. Use a negative value to offset to the\n     * left, or a positive value to offset to the right.\n     */\n    horizontalOffset: {type: Number, value: 0, notify: true},\n\n    /**\n     * A pixel value that will be added to the position calculated for the\n     * given `verticalAlign`. Use a negative value to offset towards the\n     * top, or a positive value to offset towards the bottom.\n     */\n    verticalOffset: {type: Number, value: 0, notify: true},\n\n    /**\n     * If true, the dropdown will be positioned so that it doesn't overlap\n     * the button.\n     */\n    noOverlap: {type: Boolean},\n\n    /**\n     * Set to true to disable animations when opening and closing the\n     * dropdown.\n     */\n    noAnimations: {type: Boolean, value: false},\n\n    /**\n     * Set to true to disable automatically closing the dropdown after\n     * a selection has been made.\n     */\n    ignoreSelect: {type: Boolean, value: false},\n\n    /**\n     * Set to true to enable automatically closing the dropdown after an\n     * item has been activated, even if the selection did not change.\n     */\n    closeOnActivate: {type: Boolean, value: false},\n\n    /**\n     * An animation config. If provided, this will be used to animate the\n     * opening of the dropdown.\n     */\n    openAnimationConfig: {\n      type: Object,\n      value: function() {\n        return [\n          {name: 'fade-in-animation', timing: {delay: 100, duration: 200}},\n          {\n            name: 'paper-menu-grow-width-animation',\n            timing: {\n              delay: 100,\n              duration: 150,\n              easing: config.ANIMATION_CUBIC_BEZIER\n            }\n          },\n          {\n            name: 'paper-menu-grow-height-animation',\n            timing: {\n              delay: 100,\n              duration: 275,\n              easing: config.ANIMATION_CUBIC_BEZIER\n            }\n          }\n        ];\n      }\n    },\n\n    /**\n     * An animation config. If provided, this will be used to animate the\n     * closing of the dropdown.\n     */\n    closeAnimationConfig: {\n      type: Object,\n      value: function() {\n        return [\n          {name: 'fade-out-animation', timing: {duration: 150}},\n          {\n            name: 'paper-menu-shrink-width-animation',\n            timing: {\n              delay: 100,\n              duration: 50,\n              easing: config.ANIMATION_CUBIC_BEZIER\n            }\n          },\n          {\n            name: 'paper-menu-shrink-height-animation',\n            timing: {duration: 200, easing: 'ease-in'}\n          }\n        ];\n      }\n    },\n\n    /**\n     * By default, the dropdown will constrain scrolling on the page\n     * to itself when opened.\n     * Set to true in order to prevent scroll from being constrained\n     * to the dropdown when it opens.\n     */\n    allowOutsideScroll: {type: Boolean, value: false},\n\n    /**\n     * Whether focus should be restored to the button when the menu closes.\n     */\n    restoreFocusOnClose: {type: Boolean, value: true},\n\n    /**\n     * This is the element intended to be bound as the focus target\n     * for the `iron-dropdown` contained by `paper-menu-button`.\n     */\n    _dropdownContent: {type: Object}\n  },\n\n  hostAttributes: {role: 'group', 'aria-haspopup': 'true'},\n\n  listeners:\n      {'iron-activate': '_onIronActivate', 'iron-select': '_onIronSelect'},\n\n  /**\n   * The content element that is contained by the menu button, if any.\n   */\n  get contentElement() {\n    // Polymer 2.x returns slot.assignedNodes which can contain text nodes.\n    var nodes = dom(this.$.content).getDistributedNodes();\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      if (nodes[i].nodeType === Node.ELEMENT_NODE) {\n        return nodes[i];\n      }\n    }\n  },\n\n  /**\n   * Toggles the dropdown content between opened and closed.\n   */\n  toggle: function() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  },\n\n  /**\n   * Make the dropdown content appear as an overlay positioned relative\n   * to the dropdown trigger.\n   */\n  open: function() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.$.dropdown.open();\n  },\n\n  /**\n   * Hide the dropdown content.\n   */\n  close: function() {\n    this.$.dropdown.close();\n  },\n\n  /**\n   * When an `iron-select` event is received, the dropdown should\n   * automatically close on the assumption that a value has been chosen.\n   *\n   * @param {CustomEvent} event A CustomEvent instance with type\n   * set to `\"iron-select\"`.\n   */\n  _onIronSelect: function(event) {\n    if (!this.ignoreSelect) {\n      this.close();\n    }\n  },\n\n  /**\n   * Closes the dropdown when an `iron-activate` event is received if\n   * `closeOnActivate` is true.\n   *\n   * @param {CustomEvent} event A CustomEvent of type 'iron-activate'.\n   */\n  _onIronActivate: function(event) {\n    if (this.closeOnActivate) {\n      this.close();\n    }\n  },\n\n  /**\n   * When the dropdown opens, the `paper-menu-button` fires `paper-open`.\n   * When the dropdown closes, the `paper-menu-button` fires `paper-close`.\n   *\n   * @param {boolean} opened True if the dropdown is opened, otherwise false.\n   * @param {boolean} oldOpened The previous value of `opened`.\n   */\n  _openedChanged: function(opened, oldOpened) {\n    if (opened) {\n      // TODO(cdata): Update this when we can measure changes in distributed\n      // children in an idiomatic way.\n      // We poke this property in case the element has changed. This will\n      // cause the focus target for the `iron-dropdown` to be updated as\n      // necessary:\n      this._dropdownContent = this.contentElement;\n      this.fire('paper-dropdown-open');\n    } else if (oldOpened != null) {\n      this.fire('paper-dropdown-close');\n    }\n  },\n\n  /**\n   * If the dropdown is open when disabled becomes true, close the\n   * dropdown.\n   *\n   * @param {boolean} disabled True if disabled, otherwise false.\n   */\n  _disabledChanged: function(disabled) {\n    IronControlState._disabledChanged.apply(this, arguments);\n    if (disabled && this.opened) {\n      this.close();\n    }\n  },\n\n  __onIronOverlayCanceled: function(event) {\n    var uiEvent = event.detail;\n    var trigger = this.$.trigger;\n    var path = dom(uiEvent).path;\n\n    if (path.indexOf(trigger) > -1) {\n      event.preventDefault();\n    }\n  }\n});\n\nObject.keys(config).forEach(function(key) {\n  PaperMenuButton[key] = config[key];\n});\n"],"sourceRoot":""}