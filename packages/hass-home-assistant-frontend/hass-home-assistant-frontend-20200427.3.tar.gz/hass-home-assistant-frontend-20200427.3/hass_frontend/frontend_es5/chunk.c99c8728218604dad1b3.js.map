{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts"],"names":["rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","computeStateName","entity_id","HaEntityPicker","property","type","Boolean","attribute","Array","query","memoizeOne","_opened","hass","includeDomains","excludeDomains","entityFilter","includeDeviceClasses","states","entityIds","Object","keys","filter","eid","includes","computeDomain","sort","map","key","_this2","value","attributes","device_class","changedProps","has","this","_getStates","_comboBox","items","html","_templateObject2","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","_templateObject3","_clearValue","_templateObject","ev","stopPropagation","_setValue","detail","newValue","_this3","setTimeout","fireEvent","css","_templateObject4","LitElement","customElements","define","configElementStyle","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","_inherits","HuiEntityEditor","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","_key","call","apply","concat","_assertThisInitialized","d","kind","decorators","entities","entityConf","index","entity","_entityDown","_entityUp","_addEntity","target","newConfigEntities","newEntities","_ref","_ref2","splice","assign","static"],"mappings":"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","file":"chunk.c99c8728218604dad1b3.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { HomeAssistant } from \"../../types\";\nimport \"./state-badge\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ type: Boolean }) public disabled?: boolean;\n\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n\n  @property() public hass?: HomeAssistant;\n\n  @property() public label?: string;\n\n  @property() public value?: string;\n\n  /**\n   * Show entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n\n  /**\n   * Show only entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n\n  @property({ type: Boolean }) private _opened = false;\n\n  @query(\"vaadin-combo-box-light\") private _comboBox!: HTMLElement;\n\n  private _getStates = memoizeOne(\n    (\n      _opened: boolean,\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (includeDeviceClasses) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value ||\n            (stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class))\n        );\n      }\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    if (changedProps.has(\"_opened\") && this._opened) {\n      const states = this._getStates(\n        this._opened,\n        this.hass,\n        this.includeDomains,\n        this.excludeDomains,\n        this.entityFilter,\n        this.includeDeviceClasses\n      );\n      (this._comboBox as any).items = states;\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined\n            ? this.hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  @click=${this._clearValue}\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n\n          <paper-icon-button\n            aria-label=${this.hass.localize(\n              \"ui.components.entity.entity-picker.show_entities\"\n            )}\n            slot=\"suffix\"\n            class=\"toggle-button\"\n            .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n          >\n            Toggle\n          </paper-icon-button>\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private _clearValue(ev: Event) {\n    ev.stopPropagation();\n    this._setValue(\"\");\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 0px 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/entity/ha-entity-picker\";\nimport { HomeAssistant } from \"../../../types\";\nimport { EditorTarget } from \"../editor/types\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  @property() protected label?: string;\n\n  protected render(): TemplateResult {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>\n        ${this.label ||\n        this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.entities\") +\n          \" (\" +\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.config.required\") +\n          \")\"}\n      </h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=${this.hass}\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=${this.hass}\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n"],"sourceRoot":""}