{"version":3,"sources":["webpack:///./src/components/ha-icon.ts","webpack:///./src/layouts/hass-tabs-subpage.ts"],"names":["ironIconClass","customElements","get","loaded","HaIcon","_ironIconClass","_inherits","_super","_createSuper","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","key","value","node","eventName","methodName","_get","_getPrototypeOf","prototype","_iconsetName","__webpack_require__","e","then","bind","define","customElement","HassTabsSubpage","property","type","String","attribute","Boolean","reflect","memoizeOne","tabs","activeTab","showAdvanced","_components","_language","_narrow","filter","page","component","core","isComponentLoaded","_this2","hass","advancedOnly","map","html","_templateObject","classMap","active","_tabTapped","path","narrow","_templateObject2","icon","_templateObject3","translationKey","localize","name","changedProperties","_this3","has","_activeTab","find","tab","route","prefix","includes","_this$hass$userData","_getTabs","userData","config","components","language","_templateObject4","mainPage","_templateObject5","hassio","_templateObject6","_backTapped","_templateObject7","_templateObject8","bottom-bar","ev","navigate","currentTarget","backPath","backCallback","history","back","css","_templateObject9","LitElement"],"mappings":"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","file":"chunk.c9d430997a015a42b187.js","sourcesContent":["import \"@polymer/iron-icon/iron-icon\";\nimport type { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\nimport { Constructor } from \"../types\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import \"@material/mwc-ripple\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\nimport { navigate } from \"../common/navigate\";\nimport \"../components/ha-menu-button\";\nimport \"../components/ha-paper-icon-button-arrow-prev\";\nimport { HomeAssistant, Route } from \"../types\";\nimport \"../components/ha-icon\";\n\nexport interface PageNavigation {\n  path: string;\n  translationKey?: string;\n  component?: string;\n  name?: string;\n  core?: boolean;\n  advancedOnly?: boolean;\n  icon?: string;\n  info?: any;\n}\n\n@customElement(\"hass-tabs-subpage\")\nclass HassTabsSubpage extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n\n  @property() public backCallback?: () => void;\n\n  @property({ type: Boolean }) public hassio = false;\n\n  @property({ type: Boolean, attribute: \"main-page\" }) public mainPage = false;\n\n  @property() public route!: Route;\n\n  @property() public tabs!: PageNavigation[];\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property() private _activeTab?: PageNavigation;\n\n  private _getTabs = memoizeOne(\n    (\n      tabs: PageNavigation[],\n      activeTab: PageNavigation | undefined,\n      showAdvanced: boolean | undefined,\n      _components,\n      _language,\n      _narrow\n    ) => {\n      const shownTabs = tabs.filter(\n        (page) =>\n          (!page.component ||\n            page.core ||\n            isComponentLoaded(this.hass, page.component)) &&\n          (!page.advancedOnly || showAdvanced)\n      );\n\n      return shownTabs.map(\n        (page) =>\n          html`\n            <div\n              class=\"tab ${classMap({\n                active: page === activeTab,\n              })}\"\n              @click=${this._tabTapped}\n              .path=${page.path}\n            >\n              ${this.narrow\n                ? html` <ha-icon .icon=${page.icon}></ha-icon> `\n                : \"\"}\n              ${!this.narrow || page === activeTab\n                ? html`\n                    <span class=\"name\"\n                      >${page.translationKey\n                        ? this.hass.localize(page.translationKey)\n                        : page.name}</span\n                    >\n                  `\n                : \"\"}\n              <mwc-ripple></mwc-ripple>\n            </div>\n          `\n      );\n    }\n  );\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"route\")) {\n      this._activeTab = this.tabs.find((tab) =>\n        `${this.route.prefix}${this.route.path}`.includes(tab.path)\n      );\n    }\n  }\n\n  protected render(): TemplateResult {\n    const tabs = this._getTabs(\n      this.tabs,\n      this._activeTab,\n      this.hass.userData?.showAdvanced,\n      this.hass.config.components,\n      this.hass.language,\n      this.narrow\n    );\n\n    return html`\n      <div class=\"toolbar\">\n        ${this.mainPage\n          ? html`\n              <ha-menu-button\n                .hass=${this.hass}\n                .hassio=${this.hassio}\n                .narrow=${this.narrow}\n              ></ha-menu-button>\n            `\n          : html`\n              <ha-paper-icon-button-arrow-prev\n                aria-label=\"Back\"\n                .hassio=${this.hassio}\n                @click=${this._backTapped}\n              ></ha-paper-icon-button-arrow-prev>\n            `}\n        ${this.narrow\n          ? html` <div class=\"main-title\"><slot name=\"header\"></slot></div> `\n          : \"\"}\n        ${tabs.length > 1 || !this.narrow\n          ? html`\n              <div id=\"tabbar\" class=${classMap({ \"bottom-bar\": this.narrow })}>\n                ${tabs}\n              </div>\n            `\n          : \"\"}\n        <div id=\"toolbar-icon\">\n          <slot name=\"toolbar-icon\"></slot>\n        </div>\n      </div>\n      <div class=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  private _tabTapped(ev: MouseEvent): void {\n    navigate(this, (ev.currentTarget as any).path, true);\n  }\n\n  private _backTapped(): void {\n    if (this.backPath) {\n      navigate(this, this.backPath);\n      return;\n    }\n    if (this.backCallback) {\n      this.backCallback();\n      return;\n    }\n    history.back();\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 100%;\n        background-color: var(--primary-background-color);\n      }\n\n      .toolbar {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        height: 65px;\n        background-color: var(--sidebar-background-color);\n        font-weight: 400;\n        color: var(--sidebar-text-color);\n        border-bottom: 1px solid var(--divider-color);\n        padding: 0 16px;\n        box-sizing: border-box;\n      }\n\n      #tabbar {\n        display: flex;\n        font-size: 14px;\n      }\n\n      #tabbar.bottom-bar {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        padding: 0 16px;\n        box-sizing: border-box;\n        background-color: var(--sidebar-background-color);\n        border-top: 1px solid var(--divider-color);\n        justify-content: space-between;\n        z-index: 1;\n        font-size: 12px;\n        width: 100%;\n      }\n\n      #tabbar:not(.bottom-bar) {\n        flex: 1;\n        justify-content: center;\n      }\n\n      .tab {\n        padding: 0 32px;\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n        align-items: center;\n        justify-content: center;\n        height: 64px;\n        cursor: pointer;\n      }\n\n      .name {\n        white-space: nowrap;\n      }\n\n      .tab.active {\n        color: var(--primary-color);\n      }\n\n      #tabbar:not(.bottom-bar) .tab.active {\n        border-bottom: 2px solid var(--primary-color);\n      }\n\n      .bottom-bar .tab {\n        padding: 0 16px;\n        width: 20%;\n        min-width: 0;\n      }\n\n      :host(:not([narrow])) #toolbar-icon {\n        min-width: 40px;\n      }\n\n      ha-menu-button,\n      ha-paper-icon-button-arrow-prev,\n      ::slotted([slot=\"toolbar-icon\"]) {\n        flex-shrink: 0;\n        pointer-events: auto;\n        color: var(--sidebar-icon-color);\n      }\n\n      .main-title {\n        flex: 1;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        max-height: 40px;\n        line-height: 20px;\n      }\n\n      .content {\n        position: relative;\n        width: 100%;\n        height: calc(100% - 65px);\n        overflow-y: auto;\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      :host([narrow]) .content {\n        height: calc(100% - 128px);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-tabs-subpage\": HassTabsSubpage;\n  }\n}\n"],"sourceRoot":""}