{"version":3,"sources":["webpack:///./src/common/util/parse-aspect-ratio.ts","webpack:///./src/panels/lovelace/cards/hui-iframe-card.ts"],"names":["__webpack_require__","d","__webpack_exports__","parseAspectRatio","parseOrThrow","num","parsed","parseFloat","isNaN","Error","input","endsWith","w","h","substr","length","arr","replace","split","err","HuiIframeCard","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","static","key","value","async","e","then","bind","document","createElement","type","url","aspect_ratio","decorators","property","Boolean","reflect","_config","Number","config","html","padding","isPanel","ratio","toFixed","title","styleMap","padding-top","css","LitElement"],"mappings":"wFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAEA,MAAMC,EAAgBC,IACpB,MAAMC,EAASC,WAAWF,GAC1B,GAAIG,MAAMF,GACR,MAAM,IAAIG,SAASJ,qBAErB,OAAOC,GAGM,SAASH,EAAiBO,GACvC,IAAKA,EACH,OAAO,KAET,IACE,GAAIA,EAAMC,SAAS,KACjB,MAAO,CAAEC,EAAG,IAAKC,EAAGT,EAAaM,EAAMI,OAAO,EAAGJ,EAAMK,OAAS,KAGlE,MAAMC,EAAMN,EAAMO,QAAQ,IAAK,KAAKC,MAAM,KAC1C,OAAmB,IAAfF,EAAID,OACC,KAGa,IAAfC,EAAID,OACP,CAAEH,EAAGR,EAAaY,EAAI,IAAKH,EAAG,GAC9B,CAAED,EAAGR,EAAaY,EAAI,IAAKH,EAAGT,EAAaY,EAAI,KACnD,MAAOG,IAGT,OAAO,86CCdF,IAAMC,sqMAAbC,CAAA,CADCC,YAAc,oBACf,SAAAC,EAAAC,GAAA,OAAAC,EADA,cAAAD,EACsEE,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,QAAtE5B,EAAA,EAAA6B,KAAA,SAAAC,QAAA,EAAAC,IAAA,mBAAAC,MACEC,iBAIE,aAHMlC,EAAAmC,EAAA,IAAAC,KAAApC,EAAAqC,KAAA,WAGCC,SAASC,cAAc,4BALlC,CAAAT,KAAA,SAAAC,QAAA,EAAAC,IAAA,gBAAAC,MAQE,WACE,MAAO,CACLO,KAAM,SACNC,IAAK,gCACLC,aAAc,SAZpB,CAAAZ,KAAA,QAAAa,WAAA,CAgBGC,YAAS,CAAEJ,KAAMK,QAASC,SAAS,KAhBtCd,IAAA,UAAAC,MAAA,KAiBmB,GAjBnB,CAAAH,KAAA,QAAAa,WAAA,CAmBGC,YAAS,CAAEJ,KAAMK,QAASC,SAAS,KAnBtCd,IAAA,WAAAC,MAAA,KAoBoB,GApBpB,CAAAH,KAAA,QAAAa,WAAA,CAsBGC,eAtBHZ,IAAA,UAAAC,WAAA,IAAAH,KAAA,SAAAE,IAAA,cAAAC,MAwBE,WACE,IAAKJ,KAAKkB,QACR,OAAO,EAKT,OAAO,GAHalB,KAAKkB,QAAQL,aAC7BM,OAAOnB,KAAKkB,QAAQL,aAAazB,QAAQ,IAAK,KAC9C,IACqB,KA/B7B,CAAAa,KAAA,SAAAE,IAAA,YAAAC,MAkCE,SAAiBgB,GACf,IAAKA,EAAOR,IACV,MAAM,IAAIhC,MAAM,gBAGlBoB,KAAKkB,QAAUE,IAvCnB,CAAAnB,KAAA,SAAAE,IAAA,SAAAC,MA0CE,WACE,IAAKJ,KAAKkB,QACR,OAAOG,MAGT,IAAIC,EAAU,GACd,IAAKtB,KAAKuB,SAAWvB,KAAKkB,QAAQL,aAAc,CAC9C,MAAMW,EAAQlD,YAAiB0B,KAAKkB,QAAQL,cACxCW,GAASA,EAAMzC,EAAI,GAAKyC,EAAMxC,EAAI,IACpCsC,MAAe,IAAME,EAAMxC,EAAKwC,EAAMzC,GAAG0C,QAAQ,YAEzCzB,KAAKuB,UACfD,EAAU,OAGZ,OAAOD;0BACerB,KAAKkB,QAAQQ;;;mBAGpBC,YAAS,CAChBC,cAAeN;;;mBAIRtB,KAAKkB,QAAQN;;;;;;QAlEhC,CAAAX,KAAA,MAAAC,QAAA,EAAAC,IAAA,SAAAC,MA2EE,WACE,OAAOyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA5EwBC","file":"chunk.8fa4204c7ceaee28abd2.js","sourcesContent":["// Handle 16x9, 16:9, 1.78x1, 1.78:1, 1.78\n// Ignore everything else\nconst parseOrThrow = (num) => {\n  const parsed = parseFloat(num);\n  if (isNaN(parsed)) {\n    throw new Error(`${num} is not a number`);\n  }\n  return parsed;\n};\n\nexport default function parseAspectRatio(input: string) {\n  if (!input) {\n    return null;\n  }\n  try {\n    if (input.endsWith(\"%\")) {\n      return { w: 100, h: parseOrThrow(input.substr(0, input.length - 1)) };\n    }\n\n    const arr = input.replace(\":\", \"x\").split(\"x\");\n    if (arr.length === 0) {\n      return null;\n    }\n\n    return arr.length === 1\n      ? { w: parseOrThrow(arr[0]), h: 1 }\n      : { w: parseOrThrow(arr[0]), h: parseOrThrow(arr[1]) };\n  } catch (err) {\n    // Ignore the error\n  }\n  return null;\n}\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { styleMap } from \"lit-html/directives/style-map\";\nimport parseAspectRatio from \"../../../common/util/parse-aspect-ratio\";\nimport \"../../../components/ha-card\";\nimport { LovelaceCard, LovelaceCardEditor } from \"../types\";\nimport { IframeCardConfig } from \"./types\";\n\n@customElement(\"hui-iframe-card\")\nexport class HuiIframeCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\n      /* webpackChunkName: \"hui-iframe-card-editor\" */ \"../editor/config-elements/hui-iframe-card-editor\"\n    );\n    return document.createElement(\"hui-iframe-card-editor\");\n  }\n\n  public static getStubConfig(): IframeCardConfig {\n    return {\n      type: \"iframe\",\n      url: \"https://www.home-assistant.io\",\n      aspect_ratio: \"50%\",\n    };\n  }\n\n  @property({ type: Boolean, reflect: true })\n  public isPanel = false;\n\n  @property({ type: Boolean, reflect: true })\n  public editMode = false;\n\n  @property() protected _config?: IframeCardConfig;\n\n  public getCardSize(): number {\n    if (!this._config) {\n      return 3;\n    }\n    const aspectRatio = this._config.aspect_ratio\n      ? Number(this._config.aspect_ratio.replace(\"%\", \"\"))\n      : 50;\n    return 1 + aspectRatio / 25;\n  }\n\n  public setConfig(config: IframeCardConfig): void {\n    if (!config.url) {\n      throw new Error(\"URL required\");\n    }\n\n    this._config = config;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config) {\n      return html``;\n    }\n\n    let padding = \"\";\n    if (!this.isPanel && this._config.aspect_ratio) {\n      const ratio = parseAspectRatio(this._config.aspect_ratio);\n      if (ratio && ratio.w > 0 && ratio.h > 0) {\n        padding = `${((100 * ratio.h) / ratio.w).toFixed(2)}%`;\n      }\n    } else if (!this.isPanel) {\n      padding = \"50%\";\n    }\n\n    return html`\n      <ha-card .header=\"${this._config.title}\">\n        <div\n          id=\"root\"\n          style=\"${styleMap({\n            \"padding-top\": padding,\n          })}\"\n        >\n          <iframe\n            src=\"${this._config.url}\"\n            sandbox=\"allow-forms allow-modals allow-popups allow-pointer-lock allow-same-origin allow-scripts\"\n            allowfullscreen=\"true\"\n          ></iframe>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host([ispanel]) ha-card {\n        width: 100%;\n        height: 100%;\n      }\n\n      :host([ispanel][editMode]) ha-card {\n        height: calc(100% - 51px);\n      }\n\n      ha-card {\n        overflow: hidden;\n      }\n\n      #root {\n        width: 100%;\n        position: relative;\n      }\n\n      :host([ispanel]) #root {\n        height: 100%;\n      }\n\n      iframe {\n        position: absolute;\n        border: none;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-iframe-card\": HuiIframeCard;\n  }\n}\n"],"sourceRoot":""}