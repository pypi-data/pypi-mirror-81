{"version":3,"sources":["webpack:///./src/panels/lovelace/entity-rows/hui-group-entity-row.ts"],"names":["customElement","_LitElement","[object Object]","args","super","_initialize","this","property","config","Error","_config","changedProps","hasConfigOrEntityChanged","hass","html","stateObj","states","entity","_computeCanToggle","attributes","entity_id","computeStateDisplay","localize","language","entityIds","some","entityId","DOMAINS_TOGGLE","has","split","LitElement"],"mappings":"2mPAiBCA,YAAc,gDAAf,cAAAC,EACkEC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,qCAC/DC,kEAEAA,gFAED,SAAiBC,GACf,IAAKA,EACH,MAAM,IAAIC,MAAM,uBAElBH,KAAKI,QAAUF,4CAGjB,SAAuBG,GACrB,OAAOC,YAAyBN,KAAMK,uCAGxC,WACE,IAAKL,KAAKI,UAAYJ,KAAKO,KACzB,OAAOC,MAGT,MAAMC,EAAWT,KAAKO,KAAKG,OAAOV,KAAKI,QAAQO,QAE/C,OAAKF,EAYED;sCAC2BR,KAAKO,gBAAgBP,KAAKI;UACtDJ,KAAKY,kBAAkBH,EAASI,WAAWC,WACzCN;;wBAEYR,KAAKO;4BACDE;;cAGhBD;;kBAEMO,YACAf,KAAKO,KAAMS,SACXP,EACAT,KAAKO,KAAKU;;;;MAzBfT;;aAEAR,KAAKO,KAAKS,SACX,6CACA,SACAhB,KAAKI,QAAQO;;uDA4BvB,SAA0BO,GACxB,OAAOA,EAAUC,KAAMC,GACrBC,IAAeC,IAAIF,EAASG,MAAM,IAAK,GAAG,UA3DhBC","file":"chunk.250650f5126abd91a0c3.js","sourcesContent":["import {\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { DOMAINS_TOGGLE } from \"../../../common/const\";\nimport { computeStateDisplay } from \"../../../common/entity/compute_state_display\";\nimport \"../../../components/entity/ha-entity-toggle\";\nimport { HomeAssistant } from \"../../../types\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport \"../components/hui-generic-entity-row\";\nimport \"../components/hui-warning\";\nimport { EntityConfig, LovelaceRow } from \"./types\";\n\n@customElement(\"hui-group-entity-row\")\nclass HuiGroupEntityRow extends LitElement implements LovelaceRow {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: EntityConfig;\n\n  public setConfig(config: EntityConfig): void {\n    if (!config) {\n      throw new Error(\"Configuration error\");\n    }\n    this._config = config;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning\n          >${this.hass.localize(\n            \"ui.panel.lovelace.warning.entity_not_found\",\n            \"entity\",\n            this._config.entity\n          )}</hui-warning\n        >\n      `;\n    }\n\n    return html`\n      <hui-generic-entity-row .hass=${this.hass} .config=${this._config}>\n        ${this._computeCanToggle(stateObj.attributes.entity_id)\n          ? html`\n              <ha-entity-toggle\n                .hass=${this.hass}\n                .stateObj=${stateObj}\n              ></ha-entity-toggle>\n            `\n          : html`\n              <div class=\"text-content\">\n                ${computeStateDisplay(\n                  this.hass!.localize,\n                  stateObj,\n                  this.hass.language\n                )}\n              </div>\n            `}\n      </hui-generic-entity-row>\n    `;\n  }\n\n  private _computeCanToggle(entityIds): boolean {\n    return entityIds.some((entityId) =>\n      DOMAINS_TOGGLE.has(entityId.split(\".\", 1)[0])\n    );\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-group-entity-row\": HuiGroupEntityRow;\n  }\n}\n"],"sourceRoot":""}