{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/common/config/is_component_loaded.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-shopping-list-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","isComponentLoaded","hass","component","config","components","indexOf","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","decorators","property","key","html","label","localize","_changed","Object","keys","themes","sort","map","theme","static","css","ev","target","selected","fireEvent","LitElement","cardConfigStruct","type","title","HuiShoppingListEditor","_config","_title","_valueChanged","_theme","configValue","assign"],"mappings":"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","file":"chunk.3da2574e659c35736d9d.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { HomeAssistant } from \"../../types\";\n\n/** Return if a component is loaded. */\nexport const isComponentLoaded = (\n  hass: HomeAssistant,\n  component: string\n): boolean => hass && hass.config.components.indexOf(component) !== -1;\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n\n  @property() public label?: string;\n\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n        `${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.generic.theme\"\n        )} (${this.hass!.localize(\n          \"ui.panel.lovelace.editor.card.config.optional\"\n        )})`}\n        dynamic-align\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=${this.value}\n          attr-for-selected=\"theme\"\n          @iron-select=${this._changed}\n        >\n          <paper-item theme=\"remove\"\n            >${this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.generic.no_theme\"\n            )}</paper-item\n          >\n          ${Object.keys(this.hass!.themes.themes)\n            .sort()\n            .map((theme) => {\n              return html` <paper-item theme=${theme}>${theme}</paper-item> `;\n            })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.selected === \"\") {\n      return;\n    }\n    this.value = ev.target.selected === \"remove\" ? \"\" : ev.target.selected;\n    fireEvent(this, \"value-changed\", { value: this.value });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { isComponentLoaded } from \"../../../../common/config/is_component_loaded\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { ShoppingListCardConfig } from \"../../cards/types\";\nimport { struct } from \"../../common/structs/struct\";\nimport \"../../components/hui-theme-select-editor\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { EditorTarget, EntitiesEditorEvent } from \"../types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-shopping-list-card-editor\")\nexport class HuiShoppingListEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: ShoppingListCardConfig;\n\n  public setConfig(config: ShoppingListCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"\";\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"card-config\">\n        ${!isComponentLoaded(this.hass, \"shopping_list\")\n          ? html`\n              <div class=\"error\">\n                ${this.hass.localize(\n                  \"ui.panel.lovelace.editor.card.shopping-list.integration_not_loaded\"\n                )}\n              </div>\n            `\n          : \"\"}\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <hui-theme-select-editor\n          .hass=${this.hass}\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .error {\n        color: var(--google-red-500);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-shopping-list-card-editor\": HuiShoppingListEditor;\n  }\n}\n"],"sourceRoot":""}