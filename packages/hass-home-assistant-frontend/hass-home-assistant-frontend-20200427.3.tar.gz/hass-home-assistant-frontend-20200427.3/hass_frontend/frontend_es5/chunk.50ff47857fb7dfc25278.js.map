{"version":3,"sources":["webpack:///./src/components/ha-card.ts","webpack:///./src/dialogs/generic/show-dialog-box.ts","webpack:///./src/common/string/compare.ts","webpack:///./src/panels/config/ha-config-section.ts","webpack:///./src/components/ha-fab.ts","webpack:///./src/data/user.ts","webpack:///./src/data/person.ts","webpack:///./src/panels/config/person/show-dialog-person-detail.ts","webpack:///./src/panels/config/person/ha-config-person.ts"],"names":["customElement","property","css","_templateObject","html","_templateObject2","this","header","_templateObject3","_templateObject4","LitElement","__webpack_require__","d","__webpack_exports__","showAlertDialog","showConfirmationDialog","showPromptDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","loadGenericDialog","Promise","all","e","then","bind","showDialogHelper","element","dialogParams","extra","resolve","origCancel","cancel","origConfirm","confirm","fireEvent","dialogTag","dialogImport","Object","assign","prompt","out","confirmation","compare","caseInsensitiveCompare","a","b","toLowerCase","_decorate","_initialize","_LitElement","F","_LitElement2","_inherits","HaConfigSection","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","kind","decorators","key","value","classMap","narrow","isWide","vertical","horizontal","static","MwcFab","customElements","get","_MwcFab","_MwcFab2","HaFab","classes","mdc-fab--mini","mini","mdc-fab--exited","exited","mdc-fab--extended","extended","showLabel","label","ripple","disabled","icon","showIconAtEnd","SYSTEM_GROUP_ID_ADMIN","SYSTEM_GROUP_ID_USER","fetchUsers","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","hass","wrap","_context","prev","next","abrupt","callWS","type","stop","_x","createUser","_ref2","_callee2","name","group_ids","_context2","_x2","_x3","_x4","updateUser","_ref3","_callee3","userId","params","_context3","user_id","_x5","_x6","_x7","deleteUser","_ref4","_callee4","_context4","_x8","_x9","createPerson","values","loadPersonDetailDialog","HaConfigPerson","_this2","undefined","_storageItems","_configItems","route","configSections","persons","localize","map","entry","_openEditEntry","_templateObject5","_createPerson","_templateObject6","_templateObject7","_templateObject8","changedProps","_get","_getPrototypeOf","prototype","_fetchData","personData","_usersLoad","sent","storage","sort","ent1","ent2","config","_openDialog","ev","currentTarget","users","currentPerson","used","Set","_i","_arr","_step","_iterator","_createForOfIteratorHelper","s","n","done","pers","add","err","f","currentUserId","filter","user","id","has","_callee5","_this3","_context5","systemLogDetailParams","_allowedUsers","createEntry","_createEntry","created","updateEntry","_updateEntry","updated","personId","updates","person_id","ent","removeEntry","_removeEntry","title","text","dismissText","confirmText","t0","_templateObject9","define"],"mappings":"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","file":"chunk.50ff47857fb7dfc25278.js","sourcesContent":["import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\n@customElement(\"ha-card\")\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html` <div class=\"card-header\">${this.header}</div> `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-card\": HaCard;\n  }\n}\n","import { TemplateResult } from \"lit-html\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\ninterface BaseDialogParams {\n  confirmText?: string;\n  text?: string | TemplateResult;\n  title?: string;\n}\n\nexport interface AlertDialogParams extends BaseDialogParams {\n  confirm?: () => void;\n}\n\nexport interface ConfirmationDialogParams extends BaseDialogParams {\n  dismissText?: string;\n  confirm?: () => void;\n  cancel?: () => void;\n}\n\nexport interface PromptDialogParams extends BaseDialogParams {\n  inputLabel?: string;\n  inputType?: string;\n  defaultValue?: string;\n  confirm?: (out?: string) => void;\n}\n\nexport interface DialogParams\n  extends ConfirmationDialogParams,\n    PromptDialogParams {\n  confirm?: (out?: string) => void;\n  confirmation?: boolean;\n  prompt?: boolean;\n}\n\nexport const loadGenericDialog = () =>\n  import(/* webpackChunkName: \"confirmation\" */ \"./dialog-box\");\n\nconst showDialogHelper = (\n  element: HTMLElement,\n  dialogParams: DialogParams,\n  extra?: {\n    confirmation?: DialogParams[\"confirmation\"];\n    prompt?: DialogParams[\"prompt\"];\n  }\n) =>\n  new Promise((resolve) => {\n    const origCancel = dialogParams.cancel;\n    const origConfirm = dialogParams.confirm;\n\n    fireEvent(element, \"show-dialog\", {\n      dialogTag: \"dialog-box\",\n      dialogImport: loadGenericDialog,\n      dialogParams: {\n        ...dialogParams,\n        ...extra,\n        cancel: () => {\n          resolve(extra?.prompt ? null : false);\n          if (origCancel) {\n            origCancel();\n          }\n        },\n        confirm: (out) => {\n          resolve(extra?.prompt ? out : true);\n          if (origConfirm) {\n            origConfirm(out);\n          }\n        },\n      },\n    });\n  });\n\nexport const showAlertDialog = (\n  element: HTMLElement,\n  dialogParams: AlertDialogParams\n) => showDialogHelper(element, dialogParams);\n\nexport const showConfirmationDialog = (\n  element: HTMLElement,\n  dialogParams: ConfirmationDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { confirmation: true }) as Promise<\n    boolean\n  >;\n\nexport const showPromptDialog = (\n  element: HTMLElement,\n  dialogParams: PromptDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { prompt: true }) as Promise<\n    null | string\n  >;\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { css, customElement, html, LitElement, property } from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\n\n@customElement(\"ha-config-section\")\nexport class HaConfigSection extends LitElement {\n  @property() public isWide = false;\n\n  protected render() {\n    return html`\n      <div\n        class=\"content ${classMap({\n          narrow: !this.isWide,\n        })}\"\n      >\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div\n          class=\"together layout ${classMap({\n            narrow: !this.isWide,\n            vertical: !this.isWide,\n            horizontal: this.isWide,\n          })}\"\n        >\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n      }\n      .content {\n        padding: 28px 20px 0;\n        max-width: 1040px;\n        margin: 0 auto;\n      }\n\n      .layout {\n        display: flex;\n      }\n\n      .horizontal {\n        flex-direction: row;\n      }\n\n      .vertical {\n        flex-direction: column;\n      }\n\n      .flex-auto {\n        flex: 1 1 auto;\n      }\n\n      .header {\n        font-family: var(--paper-font-headline_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-headline_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-headline_-_font-size);\n        font-weight: var(--paper-font-headline_-_font-weight);\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\n        line-height: var(--paper-font-headline_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 32px;\n      }\n\n      .intro {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        width: 100%;\n        max-width: 400px;\n        margin-right: 40px;\n        opacity: var(--dark-primary-opacity);\n        font-size: 14px;\n        padding-bottom: 20px;\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n\n      .narrow.content {\n        max-width: 640px;\n      }\n      .narrow .together {\n        margin-top: 20px;\n      }\n      .narrow .intro {\n        padding-bottom: 20px;\n        margin-right: 0;\n        max-width: 500px;\n      }\n    `;\n  }\n}\n","import \"@material/mwc-fab\";\nimport type { Fab } from \"@material/mwc-fab\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive\";\nimport { customElement, html, TemplateResult } from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport type { Constructor } from \"../types\";\nimport \"./ha-icon\";\n\nconst MwcFab = customElements.get(\"mwc-fab\") as Constructor<Fab>;\n\n@customElement(\"ha-fab\")\nexport class HaFab extends MwcFab {\n  // We override the render method because we don't have an icon font and mwc-fab doesn't support our svg-icon sets.\n  // Based on version mwc-fab 0.8\n  protected render(): TemplateResult {\n    const classes = {\n      \"mdc-fab--mini\": this.mini,\n      \"mdc-fab--exited\": this.exited,\n      \"mdc-fab--extended\": this.extended,\n    };\n    const showLabel = this.label !== \"\" && this.extended;\n    return html`\n      <button\n        .ripple=\"${ripple()}\"\n        class=\"mdc-fab ${classMap(classes)}\"\n        ?disabled=\"${this.disabled}\"\n        aria-label=\"${this.label || this.icon}\"\n      >\n        ${showLabel && this.showIconAtEnd ? this.label : \"\"}\n        ${this.icon ? html` <ha-icon .icon=${this.icon}></ha-icon> ` : \"\"}\n        ${showLabel && !this.showIconAtEnd ? this.label : \"\"}\n      </button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-fab\": HaFab;\n  }\n}\n","import { HomeAssistant } from \"../types\";\nimport { Credential } from \"./auth\";\n\nexport const SYSTEM_GROUP_ID_ADMIN = \"system-admin\";\nexport const SYSTEM_GROUP_ID_USER = \"system-users\";\nexport const SYSTEM_GROUP_ID_READ_ONLY = \"system-read-only\";\n\nexport const GROUPS = [SYSTEM_GROUP_ID_USER, SYSTEM_GROUP_ID_ADMIN];\n\nexport interface User {\n  id: string;\n  name: string;\n  is_owner: boolean;\n  is_active: boolean;\n  system_generated: boolean;\n  group_ids: string[];\n  credentials: Credential[];\n}\n\nexport interface UpdateUserParams {\n  name?: User[\"name\"];\n  group_ids?: User[\"group_ids\"];\n}\n\nexport const fetchUsers = async (hass: HomeAssistant) =>\n  hass.callWS<User[]>({\n    type: \"config/auth/list\",\n  });\n\nexport const createUser = async (\n  hass: HomeAssistant,\n  name: string,\n  // eslint-disable-next-line: variable-name\n  group_ids?: User[\"group_ids\"]\n) =>\n  hass.callWS<{ user: User }>({\n    type: \"config/auth/create\",\n    name,\n    group_ids,\n  });\n\nexport const updateUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  params: UpdateUserParams\n) =>\n  hass.callWS<{ user: User }>({\n    ...params,\n    type: \"config/auth/update\",\n    user_id: userId,\n  });\n\nexport const deleteUser = async (hass: HomeAssistant, userId: string) =>\n  hass.callWS<void>({\n    type: \"config/auth/delete\",\n    user_id: userId,\n  });\n","import { HomeAssistant } from \"../types\";\n\nexport interface Person {\n  id: string;\n  name: string;\n  user_id?: string;\n  device_trackers?: string[];\n}\n\nexport interface PersonMutableParams {\n  name: string;\n  user_id: string | null;\n  device_trackers: string[];\n}\n\nexport const fetchPersons = (hass: HomeAssistant) =>\n  hass.callWS<{\n    storage: Person[];\n    config: Person[];\n  }>({ type: \"person/list\" });\n\nexport const createPerson = (\n  hass: HomeAssistant,\n  values: PersonMutableParams\n) =>\n  hass.callWS<Person>({\n    type: \"person/create\",\n    ...values,\n  });\n\nexport const updatePerson = (\n  hass: HomeAssistant,\n  personId: string,\n  updates: Partial<PersonMutableParams>\n) =>\n  hass.callWS<Person>({\n    type: \"person/update\",\n    person_id: personId,\n    ...updates,\n  });\n\nexport const deletePerson = (hass: HomeAssistant, personId: string) =>\n  hass.callWS({\n    type: \"person/delete\",\n    person_id: personId,\n  });\n","import { fireEvent } from \"../../../common/dom/fire_event\";\nimport { Person, PersonMutableParams } from \"../../../data/person\";\nimport { User } from \"../../../data/user\";\n\nexport interface PersonDetailDialogParams {\n  entry?: Person;\n  users: User[];\n  createEntry: (values: PersonMutableParams) => Promise<unknown>;\n  updateEntry: (updates: Partial<PersonMutableParams>) => Promise<unknown>;\n  removeEntry: () => Promise<boolean>;\n}\n\nexport const loadPersonDetailDialog = () =>\n  import(\n    /* webpackChunkName: \"person-detail-dialog\" */ \"./dialog-person-detail\"\n  );\n\nexport const showPersonDetailDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: PersonDetailDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-person-detail\",\n    dialogImport: loadPersonDetailDialog,\n    dialogParams: systemLogDetailParams,\n  });\n};\n","import \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { compare } from \"../../../common/string/compare\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-fab\";\nimport {\n  createPerson,\n  deletePerson,\n  fetchPersons,\n  Person,\n  updatePerson,\n} from \"../../../data/person\";\nimport { fetchUsers, User } from \"../../../data/user\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\nimport \"../../../layouts/hass-loading-screen\";\nimport \"../../../layouts/hass-tabs-subpage\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport \"../ha-config-section\";\nimport { configSections } from \"../ha-panel-config\";\nimport {\n  loadPersonDetailDialog,\n  showPersonDetailDialog,\n} from \"./show-dialog-person-detail\";\n\nclass HaConfigPerson extends LitElement {\n  @property() public hass?: HomeAssistant;\n\n  @property() public isWide?: boolean;\n\n  @property() public narrow?: boolean;\n\n  @property() public route!: Route;\n\n  @property() private _storageItems?: Person[];\n\n  @property() private _configItems?: Person[];\n\n  private _usersLoad?: Promise<User[]>;\n\n  protected render(): TemplateResult {\n    if (\n      !this.hass ||\n      this._storageItems === undefined ||\n      this._configItems === undefined\n    ) {\n      return html` <hass-loading-screen></hass-loading-screen> `;\n    }\n    const hass = this.hass;\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .route=${this.route}\n        back-path=\"/config\"\n        .tabs=${configSections.persons}\n      >\n        <ha-config-section .isWide=${this.isWide}>\n          <span slot=\"header\"\n            >${hass.localize(\"ui.panel.config.person.caption\")}</span\n          >\n          <span slot=\"introduction\">\n            ${hass.localize(\"ui.panel.config.person.introduction\")}\n            ${this._configItems.length > 0\n              ? html`\n                  <p>\n                    ${hass.localize(\n                      \"ui.panel.config.person.note_about_persons_configured_in_yaml\"\n                    )}\n                  </p>\n                `\n              : \"\"}\n          </span>\n          <ha-card class=\"storage\">\n            ${this._storageItems.map((entry) => {\n              return html`\n                <paper-item @click=${this._openEditEntry} .entry=${entry}>\n                  <paper-item-body>\n                    ${entry.name}\n                  </paper-item-body>\n                </paper-item>\n              `;\n            })}\n            ${this._storageItems.length === 0\n              ? html`\n                  <div class=\"empty\">\n                    ${hass.localize(\n                      \"ui.panel.config.person.no_persons_created_yet\"\n                    )}\n                    <mwc-button @click=${this._createPerson}>\n                      ${hass.localize(\n                        \"ui.panel.config.person.create_person\"\n                      )}</mwc-button\n                    >\n                  </div>\n                `\n              : html``}\n          </ha-card>\n          ${this._configItems.length > 0\n            ? html`\n                <ha-card header=\"Configuration.yaml persons\">\n                  ${this._configItems.map((entry) => {\n                    return html`\n                      <paper-item>\n                        <paper-item-body>\n                          ${entry.name}\n                        </paper-item-body>\n                      </paper-item>\n                    `;\n                  })}\n                </ha-card>\n              `\n            : \"\"}\n        </ha-config-section>\n      </hass-tabs-subpage>\n\n      <ha-fab\n        ?is-wide=${this.isWide}\n        ?narrow=${this.narrow}\n        icon=\"hass:plus\"\n        title=\"${hass.localize(\"ui.panel.config.person.add_person\")}\"\n        @click=${this._createPerson}\n      ></ha-fab>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchData();\n    loadPersonDetailDialog();\n  }\n\n  private async _fetchData() {\n    this._usersLoad = fetchUsers(this.hass!);\n    const personData = await fetchPersons(this.hass!);\n\n    this._storageItems = personData.storage.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n    this._configItems = personData.config.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n  }\n\n  private _createPerson() {\n    this._openDialog();\n  }\n\n  private _openEditEntry(ev: MouseEvent) {\n    const entry: Person = (ev.currentTarget! as any).entry;\n    this._openDialog(entry);\n  }\n\n  private _allowedUsers(users: User[], currentPerson?: Person) {\n    const used = new Set();\n    for (const coll of [this._configItems, this._storageItems]) {\n      for (const pers of coll!) {\n        if (pers.user_id) {\n          used.add(pers.user_id);\n        }\n      }\n    }\n    const currentUserId = currentPerson ? currentPerson.user_id : undefined;\n    return users.filter(\n      (user) => user.id === currentUserId || !used.has(user.id)\n    );\n  }\n\n  private async _openDialog(entry?: Person) {\n    const users = await this._usersLoad!;\n\n    showPersonDetailDialog(this, {\n      entry,\n      users: this._allowedUsers(users, entry),\n      createEntry: async (values) => {\n        const created = await createPerson(this.hass!, values);\n        this._storageItems = this._storageItems!.concat(\n          created\n        ).sort((ent1, ent2) => compare(ent1.name, ent2.name));\n      },\n      updateEntry: async (values) => {\n        const updated = await updatePerson(this.hass!, entry!.id, values);\n        this._storageItems = this._storageItems!.map((ent) =>\n          ent === entry ? updated : ent\n        );\n      },\n      removeEntry: async () => {\n        if (\n          !(await showConfirmationDialog(this, {\n            title: this.hass!.localize(\"ui.panel.config.person.confirm_delete\"),\n            text: this.hass!.localize(\"ui.panel.config.person.confirm_delete2\"),\n            dismissText: this.hass!.localize(\"ui.common.no\"),\n            confirmText: this.hass!.localize(\"ui.common.yes\"),\n          }))\n        ) {\n          return false;\n        }\n\n        try {\n          await deletePerson(this.hass!, entry!.id);\n          this._storageItems = this._storageItems!.filter(\n            (ent) => ent !== entry\n          );\n          return true;\n        } catch (err) {\n          return false;\n        }\n      },\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      ha-card {\n        max-width: 600px;\n        margin: 16px auto;\n        overflow: hidden;\n      }\n      .empty {\n        text-align: center;\n        padding: 8px;\n      }\n      paper-item {\n        padding-top: 4px;\n        padding-bottom: 4px;\n      }\n      ha-card.storage paper-item {\n        cursor: pointer;\n      }\n      ha-fab {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        z-index: 1;\n      }\n      ha-fab[narrow] {\n        bottom: 84px;\n      }\n      ha-fab[is-wide] {\n        bottom: 24px;\n        right: 24px;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-config-person\", HaConfigPerson);\n"],"sourceRoot":""}