{"version":3,"sources":["webpack:///./src/panels/lovelace/common/evaluate-filter.ts","webpack:///./src/panels/lovelace/badges/hui-entity-filter-badge.ts"],"names":["__webpack_require__","d","__webpack_exports__","evaluateFilter","stateObj","filter","operator","value","state","attribute","attributes","match","EntityFilterBadge","HTMLElement","config","entities","Array","isArray","Error","state_filter","every","entity","_typeof","this","_config","_configEntities","undefined","lastChild","removeChild","_elements","hass","_hass","localize","_step","_iterator","_createForOfIteratorHelper","s","n","done","states","err","e","f","_this2","_step2","_iterator2","haveEntitiesChanged","processConfigEntities","entitiesList","entityConf","_step3","_iterator3","_step4","_iterator4","length","_oldEntities","idx","_step5","_iterator5","badgeConfig","element","createBadgeElement","push","_step6","_iterator6","appendChild","style","display","customElements","define"],"mappings":"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","file":"chunk.4f1dff5a4cd5403f5315.js","sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const evaluateFilter = (stateObj: HassEntity, filter: any): boolean => {\n  const operator = filter.operator || \"==\";\n  const value = filter.value || filter;\n  const state = filter.attribute\n    ? stateObj.attributes[filter.attribute]\n    : stateObj.state;\n\n  switch (operator) {\n    case \"==\":\n      return state === value;\n    case \"<=\":\n      return state <= value;\n    case \"<\":\n      return state < value;\n    case \">=\":\n      return state >= value;\n    case \">\":\n      return state > value;\n    case \"!=\":\n      return state !== value;\n    case \"regex\": {\n      return state.match(value);\n    }\n    default:\n      return false;\n  }\n};\n","import { HomeAssistant } from \"../../../types\";\nimport { evaluateFilter } from \"../common/evaluate-filter\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport { createBadgeElement } from \"../create-element/create-badge-element\";\nimport { EntityFilterEntityConfig } from \"../entity-rows/types\";\nimport { LovelaceBadge } from \"../types\";\nimport { EntityFilterBadgeConfig } from \"./types\";\n\nclass EntityFilterBadge extends HTMLElement implements LovelaceBadge {\n  private _elements?: LovelaceBadge[];\n\n  private _config?: EntityFilterBadgeConfig;\n\n  private _configEntities?: EntityFilterEntityConfig[];\n\n  private _hass?: HomeAssistant;\n\n  private _oldEntities?: EntityFilterEntityConfig[];\n\n  public setConfig(config: EntityFilterBadgeConfig): void {\n    if (!config.entities || !Array.isArray(config.entities)) {\n      throw new Error(\"entities must be specified.\");\n    }\n\n    if (\n      !(config.state_filter && Array.isArray(config.state_filter)) &&\n      !config.entities.every(\n        (entity) =>\n          typeof entity === \"object\" &&\n          entity.state_filter &&\n          Array.isArray(entity.state_filter)\n      )\n    ) {\n      throw new Error(\"Incorrect filter config.\");\n    }\n\n    this._config = config;\n    this._configEntities = undefined;\n\n    if (this.lastChild) {\n      this.removeChild(this.lastChild);\n      this._elements = undefined;\n    }\n  }\n\n  set hass(hass: HomeAssistant) {\n    if (!hass || !this._config) {\n      return;\n    }\n\n    if (this._elements) {\n      for (const element of this._elements) {\n        element.hass = hass;\n      }\n    }\n\n    if (!this.haveEntitiesChanged(hass)) {\n      this._hass = hass;\n      return;\n    }\n\n    this._hass = hass;\n\n    if (!this._configEntities) {\n      this._configEntities = processConfigEntities(this._config.entities);\n    }\n\n    const entitiesList = this._configEntities.filter((entityConf) => {\n      const stateObj = hass.states[entityConf.entity];\n\n      if (!stateObj) {\n        return false;\n      }\n\n      if (entityConf.state_filter) {\n        for (const filter of entityConf.state_filter) {\n          if (evaluateFilter(stateObj, filter)) {\n            return true;\n          }\n        }\n      } else {\n        for (const filter of this._config!.state_filter) {\n          if (evaluateFilter(stateObj, filter)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    });\n\n    if (entitiesList.length === 0) {\n      this.style.display = \"none\";\n      return;\n    }\n\n    const isSame =\n      this._oldEntities &&\n      entitiesList.length === this._oldEntities.length &&\n      entitiesList.every((entity, idx) => entity === this._oldEntities![idx]);\n\n    if (!isSame) {\n      this._elements = [];\n      for (const badgeConfig of entitiesList) {\n        const element = createBadgeElement(badgeConfig);\n        element.hass = hass;\n        this._elements.push(element);\n      }\n      this._oldEntities = entitiesList;\n    }\n\n    if (!this._elements) {\n      return;\n    }\n\n    while (this.lastChild) {\n      this.removeChild(this.lastChild);\n    }\n\n    for (const element of this._elements) {\n      this.appendChild(element);\n    }\n\n    this.style.display = \"inline\";\n  }\n\n  private haveEntitiesChanged(hass: HomeAssistant): boolean {\n    if (!this._hass) {\n      return true;\n    }\n\n    if (!this._configEntities || this._hass.localize !== hass.localize) {\n      return true;\n    }\n\n    for (const config of this._configEntities) {\n      if (this._hass.states[config.entity] !== hass.states[config.entity]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\ncustomElements.define(\"hui-entity-filter-badge\", EntityFilterBadge);\n"],"sourceRoot":""}