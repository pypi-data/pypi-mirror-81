/**
 * JSON Grammar
 * ECMA-404 The JSON Data Interchange Standard.
 *
 * Reference: 
 *  http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf
 *  http://rfc7159.net/rfc7159
 *
 * Authors:
 *  K. Kuramitsu 
 */
 
File = S* Expression S* !.

/* Code Layout, Tokens */

S = [ \t\n\r]
"[" = '[' S*
"]" = ']' S*
"{" = '{' S*
"}" = '}' S*
"," = ',' S*
":" = ':' S*

Expression =
    / String
    / Number
    / Object
    / Array
    / Null
    / True
    / False
    / ObjectId

Object = {
   "{" 
   ( Member ("," Member )* )? 
   "}" 
   #Object 
}

Member = { 
   key: String 
   ":" 
   value: Expression 
   #KeyValue 
}

Key = String

ObjectId = 'ObjectId' '("' { ID #Symbol } '")'

ID = [0-9a-z]+

Array = {
    "[" 
    (Expression ("," Expression )* )? 
    "]" 
    #List 
}

String = '"' { 
    (('\\"' / '\\\\' / !'"' .)*) 
    #String 
} '"' S*

True = { 'true'  #True } S*

False = { 'false' #False } S*

Null = { 'null'  #Null } S*

Number =
   / { ('-'? INT FRAC EXP?) #Float } S*
   / { ('-'? INT) #Int } S*

INT = [0-9]+
DIGIT = [0-9]
FRAC = '.' DIGIT+
EXP = [Ee] ('-' / '+')? DIGIT+
	
/* This is a JSON object: */

example Object, Value '''
{
     "Image": {
         "Width":  800,
         "Height": 600,
         "Title":  "View from 15th Floor",
         "Thumbnail": {
             "Url":    "http://www.example.com/image/481989943",
             "Height": 125,
             "Width":  100
         },
         "Animated" : false,
         "IDs": [116, 943, 234, 38793]
       }
   }
'''

/* This is a JSON array containing two objects: */

example Array, Value '''
[
     {
        "precision": "zip",
        "Latitude":  37.7668,
        "Longitude": -122.3959,
        "Address":   "",
        "City":      "SAN FRANCISCO",
        "State":     "CA",
        "Zip":       "94107",
        "Country":   "US"
     },
     {
        "precision": "zip",
        "Latitude":  37.371991,
        "Longitude": -122.026020,
        "Address":   "",
        "City":      "SUNNYVALE",
        "State":     "CA",
        "Zip":       "94085",
        "Country":   "US"
     }
   ]
'''

/* Here are three small JSON texts containing only values: */

example String, Expression "Hello world!" 
example Number, Expression 42
example Number, Expression 42.22
example Expression true
